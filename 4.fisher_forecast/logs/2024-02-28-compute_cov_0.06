nohup: ignoring input
loading emulator from /home/users/delon/aemulusnu_massfunction/aemulusnu_massfunction/emulator.pkl
{'10^9 As': 2.1, 'ns': 0.9649, 'H0': 67.36, 'w0': -1, 'ombh2': 0.02237, 'omch2': 0.12, 'nu_mass_ev': 0.06}
outputting cov to /oak/stanford/orgs/kipac/users/delon/aemulusnu_massfunction/fiducial_cluster_abundance_covariance_nu_mass_0.0600.pkl
AemulusNu_HMF_Emulator
redshift bin 1 of 4
  0%|                                                                                               | 0/4 [00:00<?, ?it/s] 25%|█████████████████████▊                                                                 | 1/4 [00:14<00:42, 14.06s/it] 50%|███████████████████████████████████████████▌                                           | 2/4 [00:23<00:22, 11.28s/it] 75%|█████████████████████████████████████████████████████████████████▎                     | 3/4 [00:32<00:10, 10.40s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:43<00:00, 10.37s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:43<00:00, 10.77s/it]
redshift bin 2 of 4
  0%|                                                                                               | 0/4 [00:00<?, ?it/s] 25%|█████████████████████▊                                                                 | 1/4 [00:12<00:38, 12.74s/it] 50%|███████████████████████████████████████████▌                                           | 2/4 [00:22<00:22, 11.06s/it] 75%|█████████████████████████████████████████████████████████████████▎                     | 3/4 [00:31<00:10, 10.28s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:42<00:00, 10.36s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:42<00:00, 10.62s/it]
redshift bin 3 of 4
  0%|                                                                                               | 0/4 [00:00<?, ?it/s] 25%|█████████████████████▊                                                                 | 1/4 [00:12<00:38, 12.77s/it] 50%|███████████████████████████████████████████▌                                           | 2/4 [00:23<00:23, 11.62s/it] 75%|█████████████████████████████████████████████████████████████████▎                     | 3/4 [00:32<00:10, 10.61s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:41<00:00,  9.62s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:41<00:00, 10.28s/it]
redshift bin 4 of 4
  0%|                                                                                               | 0/4 [00:00<?, ?it/s] 25%|█████████████████████▊                                                                 | 1/4 [00:12<00:38, 12.80s/it] 50%|███████████████████████████████████████████▌                                           | 2/4 [00:24<00:23, 11.95s/it] 75%|█████████████████████████████████████████████████████████████████▎                     | 3/4 [00:34<00:11, 11.04s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:45<00:00, 11.28s/it]100%|███████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:45<00:00, 11.44s/it]
  0%|                                                                                             | 0/256 [00:00<?, ?it/s]/home/users/delon/.local/lib/python3.9/site-packages/scipy/integrate/_quadpack_py.py:1225: IntegrationWarning: The maximum number of subdivisions (50) has been achieved.
  If increasing the limit yields no improvement it is advised to analyze 
  the integrand in order to determine the difficulties.  If the position of a 
  local difficulty can be determined (singularity, discontinuity) one will 
  probably gain from splitting up the interval and calling the integrator 
  on the subranges.  Perhaps a special-purpose integrator should be used.
  quad_r = quad(f, low, high, args=args, full_output=self.full_output,
  0%|▎                                                                                | 1/256 [14:10<60:14:00, 850.35s/it]  1%|▋                                                                                | 2/256 [14:40<25:57:04, 367.81s/it]  1%|▉                                                                                | 3/256 [15:08<14:55:55, 212.47s/it]  2%|█▎                                                                                | 4/256 [15:39<9:52:12, 141.00s/it]  2%|█▌                                                                                 | 5/256 [15:57<6:44:40, 96.73s/it]  2%|█▉                                                                                 | 6/256 [16:16<4:52:15, 70.14s/it]  3%|██▎                                                                                | 7/256 [16:34<3:40:48, 53.21s/it]  3%|██▌                                                                                | 8/256 [16:52<2:54:03, 42.11s/it]  4%|██▉                                                                                | 9/256 [17:11<2:23:03, 34.75s/it]  4%|███▏                                                                              | 10/256 [17:29<2:01:47, 29.71s/it]  4%|███▌                                                                              | 11/256 [17:48<1:47:06, 26.23s/it]  5%|███▊                                                                              | 12/256 [18:06<1:37:12, 23.90s/it]  5%|████▏                                                                             | 13/256 [18:25<1:30:06, 22.25s/it]  5%|████▍                                                                             | 14/256 [18:43<1:25:03, 21.09s/it]  6%|████▊                                                                             | 15/256 [19:02<1:21:39, 20.33s/it]  6%|█████▏                                                                            | 16/256 [19:20<1:18:56, 19.74s/it] 32%|█████████████████████████▉                                                        | 81/256 [42:33<1:02:19, 21.37s/it] 32%|██████████████████████████▎                                                       | 82/256 [43:22<1:03:39, 21.95s/it] 32%|██████████████████████████▌                                                       | 83/256 [44:11<1:05:30, 22.72s/it] 33%|██████████████████████████▉                                                       | 84/256 [45:01<1:08:17, 23.82s/it] 33%|███████████████████████████▏                                                      | 85/256 [45:39<1:09:59, 24.56s/it] 34%|███████████████████████████▌                                                      | 86/256 [46:17<1:12:15, 25.51s/it] 34%|███████████████████████████▊                                                      | 87/256 [46:54<1:14:57, 26.61s/it] 34%|████████████████████████████▏                                                     | 88/256 [47:32<1:18:00, 27.86s/it] 35%|████████████████████████████▌                                                     | 89/256 [48:09<1:21:27, 29.27s/it] 35%|████████████████████████████▊                                                     | 90/256 [48:47<1:24:59, 30.72s/it] 36%|█████████████████████████████▏                                                    | 91/256 [49:25<1:28:11, 32.07s/it] 36%|█████████████████████████████▍                                                    | 92/256 [50:03<1:31:11, 33.36s/it] 36%|█████████████████████████████▊                                                    | 93/256 [50:41<1:33:44, 34.51s/it] 37%|██████████████████████████████                                                    | 94/256 [51:19<1:35:32, 35.39s/it] 37%|██████████████████████████████▍                                                   | 95/256 [51:57<1:36:25, 35.94s/it] 38%|██████████████████████████████▊                                                   | 96/256 [52:34<1:37:08, 36.43s/it] 63%|██████████████████████████████████████████████████▉                              | 161/256 [1:20:46<41:49, 26.42s/it] 63%|███████████████████████████████████████████████████▎                             | 162/256 [1:21:46<42:28, 27.11s/it] 64%|███████████████████████████████████████████████████▌                             | 163/256 [1:22:45<43:26, 28.03s/it] 64%|███████████████████████████████████████████████████▉                             | 164/256 [1:23:46<44:59, 29.34s/it] 64%|████████████████████████████████████████████████████▏                            | 165/256 [1:24:34<45:59, 30.32s/it] 65%|████████████████████████████████████████████████████▌                            | 166/256 [1:25:22<47:20, 31.57s/it] 65%|████████████████████████████████████████████████████▊                            | 167/256 [1:26:10<49:01, 33.05s/it] 66%|█████████████████████████████████████████████████████▏                           | 168/256 [1:26:57<50:58, 34.75s/it] 66%|█████████████████████████████████████████████████████▍                           | 169/256 [1:27:45<53:07, 36.64s/it] 66%|█████████████████████████████████████████████████████▊                           | 170/256 [1:28:34<55:19, 38.60s/it] 67%|██████████████████████████████████████████████████████                           | 171/256 [1:29:22<57:19, 40.47s/it] 67%|██████████████████████████████████████████████████████▍                          | 172/256 [1:30:10<58:58, 42.13s/it] 68%|█████████████████████████████████████████████████████▍                         | 173/256 [1:30:58<1:00:14, 43.55s/it] 68%|█████████████████████████████████████████████████████▋                         | 174/256 [1:31:46<1:01:08, 44.74s/it] 68%|██████████████████████████████████████████████████████                         | 175/256 [1:32:34<1:01:34, 45.61s/it] 69%|██████████████████████████████████████████████████████▎                        | 176/256 [1:33:23<1:01:43, 46.29s/it] 94%|████████████████████████████████████████████████████████████████████████████▎    | 241/256 [2:02:10<06:49, 27.32s/it] 95%|████████████████████████████████████████████████████████████████████████████▌    | 242/256 [2:03:21<06:35, 28.23s/it] 95%|████████████████████████████████████████████████████████████████████████████▉    | 243/256 [2:04:29<06:21, 29.38s/it] 95%|█████████████████████████████████████████████████████████████████████████████▏   | 244/256 [2:05:37<06:10, 30.88s/it] 96%|█████████████████████████████████████████████████████████████████████████████▌   | 245/256 [2:06:35<05:55, 32.33s/it] 96%|█████████████████████████████████████████████████████████████████████████████▊   | 246/256 [2:07:32<05:40, 34.08s/it] 96%|██████████████████████████████████████████████████████████████████████████████▏  | 247/256 [2:08:30<05:26, 36.28s/it] 97%|██████████████████████████████████████████████████████████████████████████████▍  | 248/256 [2:09:27<05:09, 38.71s/it] 97%|██████████████████████████████████████████████████████████████████████████████▊  | 249/256 [2:10:25<04:49, 41.40s/it] 98%|███████████████████████████████████████████████████████████████████████████████  | 250/256 [2:11:22<04:24, 44.07s/it] 98%|███████████████████████████████████████████████████████████████████████████████▍ | 251/256 [2:12:20<03:53, 46.71s/it] 98%|███████████████████████████████████████████████████████████████████████████████▋ | 252/256 [2:13:18<03:16, 49.11s/it] 99%|████████████████████████████████████████████████████████████████████████████████ | 253/256 [2:14:15<02:33, 51.12s/it] 99%|████████████████████████████████████████████████████████████████████████████████▎| 254/256 [2:15:13<01:45, 52.84s/it]100%|████████████████████████████████████████████████████████████████████████████████▋| 255/256 [2:16:10<00:53, 53.88s/it]100%|█████████████████████████████████████████████████████████████████████████████████| 256/256 [2:17:08<00:00, 55.06s/it]100%|█████████████████████████████████████████████████████████████████████████████████| 256/256 [2:17:08<00:00, 32.14s/it]
covariance computed
/home/users/delon/aemulusnu_massfunction/4.fisher_forecast/compute_cluster_abundance_covariance.py:216: RuntimeWarning: divide by zero encountered in log10
  plt.imshow(np.log10(cov_matrix_2d), cmap='rainbow', aspect=1, vmin=-1, vmax=4.5)
