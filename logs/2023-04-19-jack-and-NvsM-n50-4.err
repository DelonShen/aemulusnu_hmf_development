
CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
To initialize your shell, run

    $ conda init <SHELL_NAME>

Currently supported shells are:
  - bash
  - fish
  - tcsh
  - xonsh
  - zsh
  - powershell

See 'conda init --help' for more information and options.

IMPORTANT: You may need to close and restart your shell after running 'conda init'.


0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.79s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.71s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  2.10s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:10,  2.33s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:13,  2.50s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:16,  2.64s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:19,  2.73s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:22,  2.84s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:25,  2.87s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:28,  2.93s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:31,  3.00s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:34,  3.04s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:37,  3.08s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:40,  3.07s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:44,  3.09s/it]16it [00:44,  2.76s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:03,  3.97it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:05,  2.60it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:07,  1.83it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:08,  1.50it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:08,  1.23it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:09,  1.08it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:09,  1.01s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:08,  1.07s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:08<00:07,  1.13s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:07,  1.18s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:10<00:06,  1.21s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:12<00:04,  1.24s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:13<00:03,  1.28s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:14<00:02,  1.31s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:16<00:01,  1.33s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.34s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.10s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4881/524288 [00:00<00:10, 48803.41it/s]  2%|█▍                                                                          | 9799/524288 [00:00<00:10, 49022.89it/s]  3%|██                                                                         | 14702/524288 [00:00<00:10, 48784.25it/s]  4%|██▊                                                                        | 19581/524288 [00:00<00:10, 48537.39it/s]  5%|███▍                                                                       | 24435/524288 [00:00<00:10, 48515.77it/s]  6%|████▏                                                                      | 29326/524288 [00:00<00:10, 48645.35it/s]  7%|████▉                                                                      | 34191/524288 [00:00<00:10, 48142.84it/s]  7%|█████▌                                                                     | 39007/524288 [00:00<00:10, 47685.89it/s]  8%|██████▎                                                                    | 43777/524288 [00:00<00:10, 47390.35it/s]  9%|██████▉                                                                    | 48517/524288 [00:01<00:10, 47151.09it/s] 10%|███████▌                                                                   | 53233/524288 [00:01<00:10, 46985.02it/s] 11%|████████▎                                                                  | 57932/524288 [00:01<00:09, 46912.33it/s] 12%|████████▉                                                                  | 62641/524288 [00:01<00:09, 46964.30it/s] 13%|█████████▋                                                                 | 67370/524288 [00:01<00:09, 47060.42it/s] 14%|██████████▎                                                                | 72103/524288 [00:01<00:09, 47140.08it/s] 15%|██████████▉                                                                | 76818/524288 [00:01<00:09, 47099.13it/s] 16%|███████████▋                                                               | 81541/524288 [00:01<00:09, 47136.36it/s] 16%|████████████▎                                                              | 86255/524288 [00:01<00:09, 47092.08it/s] 17%|█████████████                                                              | 90976/524288 [00:01<00:09, 47125.42it/s] 18%|█████████████▋                                                             | 95689/524288 [00:02<00:09, 47082.11it/s] 19%|██████████████▏                                                           | 100436/524288 [00:02<00:08, 47197.65it/s] 20%|██████████████▊                                                           | 105212/524288 [00:02<00:08, 47365.05it/s] 21%|███████████████▌                                                          | 109982/524288 [00:02<00:08, 47462.37it/s] 22%|████████████████▏                                                         | 114758/524288 [00:02<00:08, 47551.02it/s] 23%|████████████████▊                                                         | 119527/524288 [00:02<00:08, 47589.92it/s] 24%|█████████████████▌                                                        | 124287/524288 [00:02<00:08, 47570.47it/s] 25%|██████████████████▏                                                       | 129068/524288 [00:02<00:08, 47640.43it/s] 26%|██████████████████▉                                                       | 133846/524288 [00:02<00:08, 47680.84it/s] 26%|███████████████████▌                                                      | 138615/524288 [00:02<00:08, 47681.21it/s] 27%|████████████████████▏                                                     | 143416/524288 [00:03<00:07, 47776.42it/s] 28%|████████████████████▉                                                     | 148200/524288 [00:03<00:07, 47792.09it/s] 29%|█████████████████████▌                                                    | 152980/524288 [00:03<00:07, 47517.70it/s] 30%|██████████████████████▎                                                   | 157733/524288 [00:03<00:07, 47280.17it/s] 31%|██████████████████████▉                                                   | 162462/524288 [00:03<00:07, 47135.14it/s] 32%|███████████████████████▌                                                  | 167176/524288 [00:03<00:07, 46627.72it/s] 33%|████████████████████████▎                                                 | 171840/524288 [00:03<00:07, 46627.09it/s] 34%|████████████████████████▉                                                 | 176504/524288 [00:03<00:07, 46620.03it/s] 35%|█████████████████████████▌                                                | 181189/524288 [00:03<00:07, 46687.01it/s] 35%|██████████████████████████▏                                               | 185859/524288 [00:03<00:07, 46651.31it/s] 36%|██████████████████████████▉                                               | 190533/524288 [00:04<00:07, 46675.57it/s] 37%|███████████████████████████▌                                              | 195223/524288 [00:04<00:07, 46741.37it/s] 38%|████████████████████████████▏                                             | 199898/524288 [00:04<00:06, 46706.75it/s] 39%|████████████████████████████▊                                             | 204569/524288 [00:04<00:06, 46700.67it/s] 40%|█████████████████████████████▌                                            | 209240/524288 [00:04<00:06, 46647.87it/s] 41%|██████████████████████████████▏                                           | 213919/524288 [00:04<00:06, 46687.34it/s] 42%|██████████████████████████████▊                                           | 218603/524288 [00:04<00:06, 46729.72it/s] 43%|███████████████████████████████▌                                          | 223293/524288 [00:04<00:06, 46779.70it/s] 43%|████████████████████████████████▏                                         | 227972/524288 [00:04<00:06, 46758.87it/s] 44%|████████████████████████████████▊                                         | 232673/524288 [00:04<00:06, 46832.75it/s] 45%|█████████████████████████████████▌                                        | 237357/524288 [00:05<00:06, 46829.95it/s] 46%|██████████████████████████████████▏                                       | 242041/524288 [00:05<00:06, 46809.96it/s] 47%|██████████████████████████████████▊                                       | 246723/524288 [00:05<00:05, 46808.53it/s] 48%|███████████████████████████████████▍                                      | 251417/524288 [00:05<00:05, 46845.32it/s] 49%|████████████████████████████████████▏                                     | 256120/524288 [00:05<00:05, 46897.33it/s] 50%|████████████████████████████████████▊                                     | 260810/524288 [00:05<00:05, 46887.14it/s] 51%|█████████████████████████████████████▍                                    | 265499/524288 [00:05<00:05, 46800.58it/s] 52%|██████████████████████████████████████▏                                   | 270209/524288 [00:05<00:05, 46889.01it/s] 52%|██████████████████████████████████████▊                                   | 274898/524288 [00:05<00:05, 46877.06it/s] 53%|███████████████████████████████████████▍                                  | 279595/524288 [00:05<00:05, 46903.72it/s] 54%|████████████████████████████████████████▏                                 | 284286/524288 [00:06<00:05, 46855.92it/s] 55%|████████████████████████████████████████▊                                 | 288972/524288 [00:06<00:05, 46783.99it/s] 56%|█████████████████████████████████████████▍                                | 293655/524288 [00:06<00:04, 46795.68it/s] 57%|██████████████████████████████████████████                                | 298335/524288 [00:06<00:04, 46751.97it/s] 58%|██████████████████████████████████████████▊                               | 303011/524288 [00:06<00:04, 46510.32it/s] 59%|███████████████████████████████████████████▍                              | 307695/524288 [00:06<00:04, 46605.47it/s] 60%|████████████████████████████████████████████                              | 312421/524288 [00:06<00:04, 46799.91it/s] 60%|████████████████████████████████████████████▊                             | 317121/524288 [00:06<00:04, 46856.66it/s] 61%|█████████████████████████████████████████████▍                            | 321807/524288 [00:06<00:04, 46828.62it/s] 62%|██████████████████████████████████████████████                            | 326492/524288 [00:06<00:04, 46831.66it/s] 63%|██████████████████████████████████████████████▋                           | 331176/524288 [00:07<00:04, 46807.82it/s] 64%|███████████████████████████████████████████████▍                          | 335867/524288 [00:07<00:04, 46837.58it/s] 65%|████████████████████████████████████████████████                          | 340551/524288 [00:07<00:04, 45163.35it/s] 66%|████████████████████████████████████████████████▋                         | 345081/524288 [00:07<00:04, 44082.98it/s] 67%|█████████████████████████████████████████████████▎                        | 349771/524288 [00:07<00:03, 44897.05it/s] 68%|██████████████████████████████████████████████████                        | 354498/524288 [00:07<00:03, 45587.71it/s] 69%|██████████████████████████████████████████████████▋                       | 359204/524288 [00:07<00:03, 46018.96it/s] 69%|███████████████████████████████████████████████████▎                      | 363881/524288 [00:07<00:03, 46238.71it/s] 70%|████████████████████████████████████████████████████                      | 368589/524288 [00:07<00:03, 46485.51it/s] 71%|████████████████████████████████████████████████████▋                     | 373247/524288 [00:07<00:03, 46510.52it/s] 72%|█████████████████████████████████████████████████████▎                    | 377909/524288 [00:08<00:03, 46540.38it/s] 73%|██████████████████████████████████████████████████████                    | 382605/524288 [00:08<00:03, 46665.11it/s] 74%|██████████████████████████████████████████████████████▋                   | 387296/524288 [00:08<00:02, 46736.50it/s] 75%|███████████████████████████████████████████████████████▎                  | 391972/524288 [00:08<00:02, 46742.35it/s] 76%|███████████████████████████████████████████████████████▉                  | 396665/524288 [00:08<00:02, 46797.62it/s] 77%|████████████████████████████████████████████████████████▋                 | 401356/524288 [00:08<00:02, 46830.55it/s] 77%|█████████████████████████████████████████████████████████▎                | 406083/524288 [00:08<00:02, 46961.15it/s] 78%|█████████████████████████████████████████████████████████▉                | 410780/524288 [00:08<00:02, 46958.95it/s] 79%|██████████████████████████████████████████████████████████▋               | 415477/524288 [00:08<00:02, 46898.57it/s] 80%|███████████████████████████████████████████████████████████▎              | 420172/524288 [00:08<00:02, 46911.61it/s] 81%|███████████████████████████████████████████████████████████▉              | 424873/524288 [00:09<00:02, 46938.77it/s] 82%|████████████████████████████████████████████████████████████▋             | 429576/524288 [00:09<00:02, 46962.64it/s] 83%|█████████████████████████████████████████████████████████████▎            | 434273/524288 [00:09<00:01, 46671.45it/s] 84%|█████████████████████████████████████████████████████████████▉            | 438958/524288 [00:09<00:01, 46722.88it/s] 85%|██████████████████████████████████████████████████████████████▌           | 443631/524288 [00:09<00:01, 46664.05it/s] 86%|███████████████████████████████████████████████████████████████▎          | 448298/524288 [00:09<00:01, 46618.84it/s] 86%|███████████████████████████████████████████████████████████████▉          | 452961/524288 [00:09<00:01, 46492.29it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457611/524288 [00:09<00:01, 46462.90it/s] 88%|█████████████████████████████████████████████████████████████████▏        | 462258/524288 [00:09<00:01, 46416.49it/s] 89%|█████████████████████████████████████████████████████████████████▉        | 466900/524288 [00:09<00:01, 46339.87it/s] 90%|██████████████████████████████████████████████████████████████████▌       | 471562/524288 [00:10<00:01, 46422.12it/s] 91%|███████████████████████████████████████████████████████████████████▏      | 476205/524288 [00:10<00:01, 46386.23it/s] 92%|███████████████████████████████████████████████████████████████████▊      | 480844/524288 [00:10<00:00, 46263.56it/s] 93%|████████████████████████████████████████████████████████████████████▌     | 485473/524288 [00:10<00:00, 46269.53it/s] 93%|█████████████████████████████████████████████████████████████████████▏    | 490101/524288 [00:10<00:00, 46160.66it/s] 94%|█████████████████████████████████████████████████████████████████████▊    | 494720/524288 [00:10<00:00, 46166.61it/s] 95%|██████████████████████████████████████████████████████████████████████▍   | 499337/524288 [00:10<00:00, 46113.98it/s] 96%|███████████████████████████████████████████████████████████████████████▏  | 503961/524288 [00:10<00:00, 46148.64it/s] 97%|███████████████████████████████████████████████████████████████████████▊  | 508622/524288 [00:10<00:00, 46284.73it/s] 98%|████████████████████████████████████████████████████████████████████████▍ | 513290/524288 [00:10<00:00, 46402.08it/s] 99%|█████████████████████████████████████████████████████████████████████████ | 517969/524288 [00:11<00:00, 46517.40it/s]100%|█████████████████████████████████████████████████████████████████████████▊| 522621/524288 [00:11<00:00, 46454.64it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:11<00:00, 46167.26it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.38s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:02,  1.36s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:04,  1.55s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:06,  1.74s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:08,  2.00s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:11,  2.20s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:14,  2.32s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:16,  2.41s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:19,  2.58s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:22,  2.69s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:25,  2.76s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:28,  2.78s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:31,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:34,  2.94s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:37,  2.95s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:40,  2.96s/it]16it [00:40,  2.53s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:01,  8.26it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:03,  4.51it/s] 19%|████████████████▏                                                                     | 3/16 [00:00<00:04,  2.82it/s] 25%|█████████████████████▌                                                                | 4/16 [00:01<00:05,  2.12it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:06,  1.62it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:03<00:07,  1.39it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:04<00:07,  1.25it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:05<00:06,  1.15it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:06<00:06,  1.06it/s] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:07<00:06,  1.00s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:08<00:05,  1.04s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:09<00:04,  1.09s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:11<00:03,  1.14s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:12<00:02,  1.18s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:13<00:01,  1.21s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:15<00:00,  1.26s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:15<00:00,  1.06it/s]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▊                                                                           | 5467/524288 [00:00<00:09, 54660.15it/s]  2%|█▌                                                                         | 10982/524288 [00:00<00:09, 54944.61it/s]  3%|██▎                                                                        | 16493/524288 [00:00<00:09, 55017.75it/s]  4%|███▏                                                                       | 21995/524288 [00:00<00:09, 54856.49it/s]  5%|███▉                                                                       | 27481/524288 [00:00<00:09, 54707.04it/s]  6%|████▋                                                                      | 32952/524288 [00:00<00:08, 54628.37it/s]  7%|█████▌                                                                     | 38466/524288 [00:00<00:08, 54792.46it/s]  8%|██████▎                                                                    | 43957/524288 [00:00<00:08, 54826.54it/s]  9%|███████                                                                    | 49440/524288 [00:00<00:08, 54669.45it/s] 10%|███████▊                                                                   | 54908/524288 [00:01<00:08, 54552.06it/s] 12%|████████▋                                                                  | 60364/524288 [00:01<00:08, 54286.86it/s] 13%|█████████▍                                                                 | 65793/524288 [00:01<00:08, 53981.06it/s] 14%|██████████▏                                                                | 71192/524288 [00:01<00:08, 53816.13it/s] 15%|██████████▉                                                                | 76574/524288 [00:01<00:08, 53579.15it/s] 16%|███████████▋                                                               | 81933/524288 [00:01<00:08, 53399.47it/s] 17%|████████████▍                                                              | 87274/524288 [00:01<00:08, 53334.05it/s] 18%|█████████████▎                                                             | 92626/524288 [00:01<00:08, 53388.38it/s] 19%|██████████████                                                             | 97965/524288 [00:01<00:07, 53387.17it/s] 20%|██████████████▌                                                           | 103305/524288 [00:01<00:07, 53387.75it/s] 21%|███████████████▎                                                          | 108644/524288 [00:02<00:07, 53281.63it/s] 22%|████████████████                                                          | 113973/524288 [00:02<00:07, 53269.67it/s] 23%|████████████████▊                                                         | 119318/524288 [00:02<00:07, 53321.82it/s] 24%|█████████████████▌                                                        | 124668/524288 [00:02<00:07, 53373.46it/s] 25%|██████████████████▎                                                       | 130006/524288 [00:02<00:07, 53360.37it/s] 26%|███████████████████                                                       | 135343/524288 [00:02<00:07, 53245.81it/s] 27%|███████████████████▊                                                      | 140670/524288 [00:02<00:07, 53250.83it/s] 28%|████████████████████▌                                                     | 146035/524288 [00:02<00:07, 53369.84it/s] 29%|█████████████████████▎                                                    | 151373/524288 [00:02<00:06, 53358.94it/s] 30%|██████████████████████                                                    | 156709/524288 [00:02<00:06, 53346.62it/s] 31%|██████████████████████▊                                                   | 162044/524288 [00:03<00:06, 53276.94it/s] 32%|███████████████████████▌                                                  | 167372/524288 [00:03<00:06, 53265.93it/s] 33%|████████████████████████▍                                                 | 172740/524288 [00:03<00:06, 53386.96it/s] 34%|█████████████████████████▏                                                | 178140/524288 [00:03<00:06, 53569.42it/s] 35%|█████████████████████████▉                                                | 183497/524288 [00:03<00:06, 53519.50it/s] 36%|██████████████████████████▋                                               | 188849/524288 [00:03<00:06, 53476.79it/s] 37%|███████████████████████████▍                                              | 194215/524288 [00:03<00:06, 53529.71it/s] 38%|████████████████████████████▏                                             | 199587/524288 [00:03<00:06, 53586.07it/s] 39%|████████████████████████████▉                                             | 204946/524288 [00:03<00:05, 53549.98it/s] 40%|█████████████████████████████▋                                            | 210302/524288 [00:03<00:05, 53430.86it/s] 41%|██████████████████████████████▍                                           | 215646/524288 [00:04<00:05, 53371.23it/s] 42%|███████████████████████████████▏                                          | 220994/524288 [00:04<00:05, 53402.61it/s] 43%|███████████████████████████████▉                                          | 226337/524288 [00:04<00:05, 53407.09it/s] 44%|████████████████████████████████▋                                         | 231687/524288 [00:04<00:05, 53433.42it/s] 45%|█████████████████████████████████▍                                        | 237031/524288 [00:04<00:05, 53409.49it/s] 46%|██████████████████████████████████▏                                       | 242372/524288 [00:04<00:05, 53371.60it/s] 47%|██████████████████████████████████▉                                       | 247710/524288 [00:04<00:05, 53040.44it/s] 48%|███████████████████████████████████▋                                      | 253047/524288 [00:04<00:05, 53136.81it/s] 49%|████████████████████████████████████▍                                     | 258414/524288 [00:04<00:04, 53294.14it/s] 50%|█████████████████████████████████████▏                                    | 263790/524288 [00:04<00:04, 53430.84it/s] 51%|█████████████████████████████████████▉                                    | 269176/524288 [00:05<00:04, 53557.49it/s] 52%|██████████████████████████████████████▋                                   | 274532/524288 [00:05<00:04, 53549.04it/s] 53%|███████████████████████████████████████▌                                  | 279928/524288 [00:05<00:04, 53669.38it/s] 54%|████████████████████████████████████████▎                                 | 285296/524288 [00:05<00:04, 53630.11it/s] 55%|█████████████████████████████████████████                                 | 290660/524288 [00:05<00:04, 53546.74it/s] 56%|█████████████████████████████████████████▊                                | 296016/524288 [00:05<00:04, 53547.21it/s] 57%|██████████████████████████████████████████▌                               | 301371/524288 [00:05<00:04, 53503.12it/s] 59%|███████████████████████████████████████████▎                              | 306770/524288 [00:05<00:04, 53645.98it/s] 60%|████████████████████████████████████████████                              | 312160/524288 [00:05<00:03, 53718.86it/s] 61%|████████████████████████████████████████████▊                             | 317532/524288 [00:05<00:03, 53546.17it/s] 62%|█████████████████████████████████████████████▌                            | 322887/524288 [00:06<00:03, 53450.31it/s] 63%|██████████████████████████████████████████████▎                           | 328254/524288 [00:06<00:03, 53515.06it/s] 64%|███████████████████████████████████████████████                           | 333636/524288 [00:06<00:03, 53604.28it/s] 65%|███████████████████████████████████████████████▊                          | 338997/524288 [00:06<00:03, 53509.80it/s] 66%|████████████████████████████████████████████████▌                         | 344351/524288 [00:06<00:03, 53515.99it/s] 67%|█████████████████████████████████████████████████▎                        | 349706/524288 [00:06<00:03, 53524.39it/s] 68%|██████████████████████████████████████████████████                        | 355077/524288 [00:06<00:03, 53578.41it/s] 69%|██████████████████████████████████████████████████▉                       | 360470/524288 [00:06<00:03, 53681.36it/s] 70%|███████████████████████████████████████████████████▋                      | 365839/524288 [00:06<00:02, 53671.69it/s] 71%|████████████████████████████████████████████████████▍                     | 371217/524288 [00:06<00:02, 53703.10it/s] 72%|█████████████████████████████████████████████████████▏                    | 376596/524288 [00:07<00:02, 53727.45it/s] 73%|█████████████████████████████████████████████████████▉                    | 381969/524288 [00:07<00:02, 53672.47it/s] 74%|██████████████████████████████████████████████████████▋                   | 387337/524288 [00:07<00:02, 53641.35it/s] 75%|███████████████████████████████████████████████████████▍                  | 392702/524288 [00:07<00:02, 53510.72it/s] 76%|████████████████████████████████████████████████████████▏                 | 398054/524288 [00:07<00:02, 53469.76it/s] 77%|████████████████████████████████████████████████████████▉                 | 403418/524288 [00:07<00:02, 53519.08it/s] 78%|█████████████████████████████████████████████████████████▋                | 408811/524288 [00:07<00:02, 53640.64it/s] 79%|██████████████████████████████████████████████████████████▍               | 414226/524288 [00:07<00:02, 53790.13it/s] 80%|███████████████████████████████████████████████████████████▏              | 419606/524288 [00:07<00:01, 52695.71it/s] 81%|███████████████████████████████████████████████████████████▉              | 425028/524288 [00:07<00:01, 53143.47it/s] 82%|████████████████████████████████████████████████████████████▊             | 430414/524288 [00:08<00:01, 53355.34it/s] 83%|█████████████████████████████████████████████████████████████▌            | 435790/524288 [00:08<00:01, 53472.59it/s] 84%|██████████████████████████████████████████████████████████████▎           | 441162/524288 [00:08<00:01, 53545.18it/s] 85%|███████████████████████████████████████████████████████████████           | 446533/524288 [00:08<00:01, 53593.73it/s] 86%|███████████████████████████████████████████████████████████████▊          | 451894/524288 [00:08<00:01, 53588.60it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457280/524288 [00:08<00:01, 53667.35it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 462670/524288 [00:08<00:01, 53735.10it/s] 89%|██████████████████████████████████████████████████████████████████        | 468066/524288 [00:08<00:01, 53801.64it/s] 90%|██████████████████████████████████████████████████████████████████▊       | 473447/524288 [00:08<00:00, 53687.39it/s] 91%|███████████████████████████████████████████████████████████████████▌      | 478816/524288 [00:08<00:00, 53207.92it/s] 92%|████████████████████████████████████████████████████████████████████▎     | 484187/524288 [00:09<00:00, 53356.34it/s] 93%|█████████████████████████████████████████████████████████████████████     | 489588/524288 [00:09<00:00, 53549.57it/s] 94%|█████████████████████████████████████████████████████████████████████▊    | 494973/524288 [00:09<00:00, 53637.11it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 500353/524288 [00:09<00:00, 53683.76it/s] 96%|███████████████████████████████████████████████████████████████████████▍  | 505743/524288 [00:09<00:00, 53746.72it/s] 97%|████████████████████████████████████████████████████████████████████████▏ | 511119/524288 [00:09<00:00, 53748.79it/s] 99%|████████████████████████████████████████████████████████████████████████▉ | 516500/524288 [00:09<00:00, 53764.27it/s]100%|█████████████████████████████████████████████████████████████████████████▋| 521877/524288 [00:09<00:00, 53542.09it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:09<00:00, 52830.52it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.73s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.62s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.81s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  2.02s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:10,  2.24s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:13,  2.44s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:15,  2.55s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:18,  2.62s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:21,  2.67s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:24,  2.71s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:27,  2.77s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:29,  2.79s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:33,  2.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:36,  2.91s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:39,  2.97s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:42,  2.96s/it]16it [00:42,  2.63s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:02,  5.02it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:04,  3.17it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:05,  2.19it/s] 25%|█████████████████████▌                                                                | 4/16 [00:01<00:06,  1.73it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:07,  1.39it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:03<00:08,  1.22it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:08,  1.12it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:07,  1.05it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:07<00:07,  1.01s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:08<00:06,  1.06s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:09<00:05,  1.10s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:10<00:04,  1.14s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:12<00:03,  1.20s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:13<00:02,  1.24s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:14<00:01,  1.26s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.28s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.01s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▊                                                                           | 5436/524288 [00:00<00:09, 54356.55it/s]  2%|█▌                                                                         | 10872/524288 [00:00<00:09, 53945.46it/s]  3%|██▎                                                                        | 16304/524288 [00:00<00:09, 54111.10it/s]  4%|███                                                                        | 21716/524288 [00:00<00:09, 54008.96it/s]  5%|███▉                                                                       | 27118/524288 [00:00<00:09, 53994.99it/s]  6%|████▋                                                                      | 32518/524288 [00:00<00:09, 53992.77it/s]  7%|█████▍                                                                     | 37952/524288 [00:00<00:08, 54104.79it/s]  8%|██████▏                                                                    | 43363/524288 [00:00<00:08, 54093.91it/s]  9%|██████▉                                                                    | 48773/524288 [00:00<00:08, 54026.71it/s] 10%|███████▋                                                                   | 54176/524288 [00:01<00:08, 53422.23it/s] 11%|████████▌                                                                  | 59520/524288 [00:01<00:08, 53200.43it/s] 12%|█████████▎                                                                 | 64842/524288 [00:01<00:08, 53102.42it/s] 13%|██████████                                                                 | 70157/524288 [00:01<00:08, 53114.99it/s] 14%|██████████▊                                                                | 75469/524288 [00:01<00:08, 53073.67it/s] 15%|███████████▌                                                               | 80790/524288 [00:01<00:08, 53113.88it/s] 16%|████████████▎                                                              | 86116/524288 [00:01<00:08, 53156.18it/s] 17%|█████████████                                                              | 91456/524288 [00:01<00:08, 53228.17it/s] 18%|█████████████▊                                                             | 96836/524288 [00:01<00:08, 53399.10it/s] 19%|██████████████▍                                                           | 102177/524288 [00:01<00:07, 53391.73it/s] 21%|███████████████▏                                                          | 107517/524288 [00:02<00:07, 53329.73it/s] 22%|███████████████▉                                                          | 112851/524288 [00:02<00:07, 53178.92it/s] 23%|████████████████▋                                                         | 118170/524288 [00:02<00:07, 53090.71it/s] 24%|█████████████████▍                                                        | 123480/524288 [00:02<00:07, 53027.37it/s] 25%|██████████████████▏                                                       | 128783/524288 [00:02<00:07, 52909.85it/s] 26%|██████████████████▉                                                       | 134092/524288 [00:02<00:07, 52962.43it/s] 27%|███████████████████▋                                                      | 139393/524288 [00:02<00:07, 52974.71it/s] 28%|████████████████████▍                                                     | 144731/524288 [00:02<00:07, 53095.22it/s] 29%|█████████████████████▏                                                    | 150053/524288 [00:02<00:07, 53129.93it/s] 30%|█████████████████████▉                                                    | 155367/524288 [00:02<00:07, 52647.99it/s] 31%|██████████████████████▋                                                   | 160633/524288 [00:03<00:06, 52647.02it/s] 32%|███████████████████████▍                                                  | 165964/524288 [00:03<00:06, 52843.58it/s] 33%|████████████████████████▏                                                 | 171332/524288 [00:03<00:06, 53091.85it/s] 34%|████████████████████████▉                                                 | 176692/524288 [00:03<00:06, 53240.59it/s] 35%|█████████████████████████▋                                                | 182025/524288 [00:03<00:06, 53264.11it/s] 36%|██████████████████████████▍                                               | 187352/524288 [00:03<00:06, 53207.74it/s] 37%|███████████████████████████▏                                              | 192673/524288 [00:03<00:06, 53149.76it/s] 38%|███████████████████████████▉                                              | 198030/524288 [00:03<00:06, 53272.21it/s] 39%|████████████████████████████▋                                             | 203358/524288 [00:03<00:06, 53210.90it/s] 40%|█████████████████████████████▍                                            | 208683/524288 [00:03<00:05, 53220.08it/s] 41%|██████████████████████████████▏                                           | 214006/524288 [00:04<00:05, 53090.15it/s] 42%|██████████████████████████████▉                                           | 219316/524288 [00:04<00:05, 53073.99it/s] 43%|███████████████████████████████▋                                          | 224641/524288 [00:04<00:05, 53125.86it/s] 44%|████████████████████████████████▍                                         | 229971/524288 [00:04<00:05, 53175.46it/s] 45%|█████████████████████████████████▏                                        | 235292/524288 [00:04<00:05, 53183.35it/s] 46%|█████████████████████████████████▉                                        | 240611/524288 [00:04<00:05, 53111.23it/s] 47%|██████████████████████████████████▋                                       | 245923/524288 [00:04<00:05, 52988.95it/s] 48%|███████████████████████████████████▍                                      | 251222/524288 [00:04<00:05, 52861.08it/s] 49%|████████████████████████████████████▏                                     | 256509/524288 [00:04<00:05, 52836.08it/s] 50%|████████████████████████████████████▉                                     | 261804/524288 [00:04<00:04, 52869.23it/s] 51%|█████████████████████████████████████▋                                    | 267091/524288 [00:05<00:04, 52779.81it/s] 52%|██████████████████████████████████████▍                                   | 272400/524288 [00:05<00:04, 52871.06it/s] 53%|███████████████████████████████████████▏                                  | 277745/524288 [00:05<00:04, 53042.77it/s] 54%|███████████████████████████████████████▉                                  | 283050/524288 [00:05<00:04, 53022.30it/s] 55%|████████████████████████████████████████▋                                 | 288353/524288 [00:05<00:04, 52967.37it/s] 56%|█████████████████████████████████████████▍                                | 293650/524288 [00:05<00:04, 52893.88it/s] 57%|██████████████████████████████████████████▏                               | 298977/524288 [00:05<00:04, 53005.09it/s] 58%|██████████████████████████████████████████▉                               | 304312/524288 [00:05<00:04, 53107.17it/s] 59%|███████████████████████████████████████████▋                              | 309623/524288 [00:05<00:04, 53010.09it/s] 60%|████████████████████████████████████████████▍                             | 314925/524288 [00:05<00:03, 52923.92it/s] 61%|█████████████████████████████████████████████▏                            | 320222/524288 [00:06<00:03, 52936.59it/s] 62%|█████████████████████████████████████████████▉                            | 325516/524288 [00:06<00:03, 52774.25it/s] 63%|██████████████████████████████████████████████▋                           | 330794/524288 [00:06<00:03, 52714.37it/s] 64%|███████████████████████████████████████████████▍                          | 336066/524288 [00:06<00:03, 52711.14it/s] 65%|████████████████████████████████████████████████▏                         | 341338/524288 [00:06<00:03, 52703.17it/s] 66%|████████████████████████████████████████████████▉                         | 346609/524288 [00:06<00:03, 52702.03it/s] 67%|█████████████████████████████████████████████████▋                        | 351895/524288 [00:06<00:03, 52748.02it/s] 68%|██████████████████████████████████████████████████▍                       | 357203/524288 [00:06<00:03, 52845.16it/s] 69%|███████████████████████████████████████████████████▏                      | 362507/524288 [00:06<00:03, 52900.49it/s] 70%|███████████████████████████████████████████████████▉                      | 367798/524288 [00:06<00:02, 52885.09it/s] 71%|████████████████████████████████████████████████████▋                     | 373087/524288 [00:07<00:02, 52745.64it/s] 72%|█████████████████████████████████████████████████████▍                    | 378362/524288 [00:07<00:02, 52702.02it/s] 73%|██████████████████████████████████████████████████████▏                   | 383642/524288 [00:07<00:02, 52728.65it/s] 74%|██████████████████████████████████████████████████████▉                   | 388915/524288 [00:07<00:02, 52718.91it/s] 75%|███████████████████████████████████████████████████████▋                  | 394215/524288 [00:07<00:02, 52800.54it/s] 76%|████████████████████████████████████████████████████████▍                 | 399526/524288 [00:07<00:02, 52891.19it/s] 77%|█████████████████████████████████████████████████████████▏                | 404868/524288 [00:07<00:02, 53048.84it/s] 78%|█████████████████████████████████████████████████████████▉                | 410173/524288 [00:07<00:02, 52937.14it/s] 79%|██████████████████████████████████████████████████████████▋               | 415467/524288 [00:07<00:02, 52704.07it/s] 80%|███████████████████████████████████████████████████████████▍              | 420738/524288 [00:07<00:01, 52594.77it/s] 81%|████████████████████████████████████████████████████████████▏             | 426006/524288 [00:08<00:01, 52617.46it/s] 82%|████████████████████████████████████████████████████████████▉             | 431301/524288 [00:08<00:01, 52716.09it/s] 83%|█████████████████████████████████████████████████████████████▌            | 436611/524288 [00:08<00:01, 52829.78it/s] 84%|██████████████████████████████████████████████████████████████▎           | 441895/524288 [00:08<00:01, 52826.48it/s] 85%|███████████████████████████████████████████████████████████████           | 447219/524288 [00:08<00:01, 52948.36it/s] 86%|███████████████████████████████████████████████████████████████▊          | 452541/524288 [00:08<00:01, 53027.71it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457856/524288 [00:08<00:01, 53063.59it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 463163/524288 [00:08<00:01, 52840.90it/s] 89%|██████████████████████████████████████████████████████████████████        | 468472/524288 [00:08<00:01, 52912.80it/s] 90%|██████████████████████████████████████████████████████████████████▊       | 473764/524288 [00:08<00:00, 52857.41it/s] 91%|███████████████████████████████████████████████████████████████████▌      | 479050/524288 [00:09<00:00, 52401.59it/s] 92%|████████████████████████████████████████████████████████████████████▎     | 484356/524288 [00:09<00:00, 52594.83it/s] 93%|█████████████████████████████████████████████████████████████████████     | 489643/524288 [00:09<00:00, 52675.71it/s] 94%|█████████████████████████████████████████████████████████████████████▊    | 494912/524288 [00:09<00:00, 52597.25it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 500231/524288 [00:09<00:00, 52773.21it/s] 96%|███████████████████████████████████████████████████████████████████████▎  | 505548/524288 [00:09<00:00, 52890.78it/s] 97%|████████████████████████████████████████████████████████████████████████  | 510865/524288 [00:09<00:00, 52972.06it/s] 98%|████████████████████████████████████████████████████████████████████████▊ | 516163/524288 [00:09<00:00, 52922.21it/s] 99%|█████████████████████████████████████████████████████████████████████████▌| 521456/524288 [00:09<00:00, 52604.74it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:09<00:00, 52920.96it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.46s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:02,  1.48s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.76s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  1.93s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:09,  2.13s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:12,  2.32s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:15,  2.45s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:17,  2.55s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:20,  2.65s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:23,  2.68s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:26,  2.75s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:29,  2.83s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:32,  2.86s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:35,  2.87s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:38,  2.87s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:41,  2.93s/it]16it [00:41,  2.57s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:03,  4.92it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:04,  3.13it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:06,  2.14it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:07,  1.71it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:07,  1.38it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:08,  1.21it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:08,  1.11it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:07,  1.03it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:07<00:07,  1.03s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:08<00:06,  1.07s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:09<00:05,  1.11s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:10<00:04,  1.15s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:12<00:03,  1.19s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:13<00:02,  1.23s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:14<00:01,  1.26s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.27s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.01s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4958/524288 [00:00<00:10, 49573.31it/s]  2%|█▍                                                                         | 10027/524288 [00:00<00:10, 50226.02it/s]  3%|██▏                                                                        | 15050/524288 [00:00<00:10, 49444.18it/s]  4%|██▊                                                                        | 19996/524288 [00:00<00:10, 49272.80it/s]  5%|███▌                                                                       | 24925/524288 [00:00<00:10, 48929.70it/s]  6%|████▎                                                                      | 29819/524288 [00:00<00:10, 48763.19it/s]  7%|████▉                                                                      | 34696/524288 [00:00<00:10, 48453.24it/s]  8%|█████▋                                                                     | 39542/524288 [00:00<00:10, 48349.15it/s]  8%|██████▎                                                                    | 44378/524288 [00:00<00:09, 48199.49it/s]  9%|███████                                                                    | 49226/524288 [00:01<00:09, 48283.13it/s] 10%|███████▋                                                                   | 54055/524288 [00:01<00:09, 48110.69it/s] 11%|████████▍                                                                  | 58878/524288 [00:01<00:09, 48144.89it/s] 12%|█████████                                                                  | 63693/524288 [00:01<00:09, 48045.52it/s] 13%|█████████▊                                                                 | 68540/524288 [00:01<00:09, 48172.04it/s] 14%|██████████▍                                                                | 73358/524288 [00:01<00:09, 48030.33it/s] 15%|███████████▏                                                               | 78209/524288 [00:01<00:09, 48173.43it/s] 16%|███████████▉                                                               | 83027/524288 [00:01<00:09, 48039.45it/s] 17%|████████████▌                                                              | 87879/524288 [00:01<00:09, 48181.69it/s] 18%|█████████████▎                                                             | 92698/524288 [00:01<00:08, 47977.12it/s] 19%|█████████████▉                                                             | 97505/524288 [00:02<00:08, 48001.29it/s] 20%|██████████████▍                                                           | 102306/524288 [00:02<00:08, 47999.15it/s] 20%|███████████████                                                           | 107115/524288 [00:02<00:08, 48024.17it/s] 21%|███████████████▊                                                          | 111970/524288 [00:02<00:08, 48180.41it/s] 22%|████████████████▍                                                         | 116789/524288 [00:02<00:08, 47754.66it/s] 23%|█████████████████▏                                                        | 121594/524288 [00:02<00:08, 47839.87it/s] 24%|█████████████████▊                                                        | 126388/524288 [00:02<00:08, 47868.82it/s] 25%|██████████████████▌                                                       | 131176/524288 [00:02<00:08, 47756.99it/s] 26%|███████████████████▏                                                      | 135973/524288 [00:02<00:08, 47818.67it/s] 27%|███████████████████▊                                                      | 140756/524288 [00:02<00:08, 47820.81it/s] 28%|████████████████████▌                                                     | 145544/524288 [00:03<00:07, 47835.03it/s] 29%|█████████████████████▏                                                    | 150328/524288 [00:03<00:07, 47782.82it/s] 30%|█████████████████████▉                                                    | 155155/524288 [00:03<00:07, 47927.45it/s] 31%|██████████████████████▌                                                   | 159985/524288 [00:03<00:07, 48036.13it/s] 31%|███████████████████████▎                                                  | 164809/524288 [00:03<00:07, 48095.29it/s] 32%|███████████████████████▉                                                  | 169619/524288 [00:03<00:07, 48060.13it/s] 33%|████████████████████████▌                                                 | 174431/524288 [00:03<00:07, 48075.79it/s] 34%|█████████████████████████▎                                                | 179239/524288 [00:03<00:07, 48062.36it/s] 35%|█████████████████████████▉                                                | 184053/524288 [00:03<00:07, 48082.38it/s] 36%|██████████████████████████▋                                               | 188862/524288 [00:03<00:06, 48042.40it/s] 37%|███████████████████████████▎                                              | 193667/524288 [00:04<00:06, 47976.51it/s] 38%|████████████████████████████                                              | 198465/524288 [00:04<00:06, 47886.75it/s] 39%|████████████████████████████▋                                             | 203297/524288 [00:04<00:06, 48013.12it/s] 40%|█████████████████████████████▎                                            | 208102/524288 [00:04<00:06, 48022.95it/s] 41%|██████████████████████████████                                            | 212930/524288 [00:04<00:06, 48099.29it/s] 42%|██████████████████████████████▋                                           | 217740/524288 [00:04<00:06, 48036.56it/s] 42%|███████████████████████████████▍                                          | 222544/524288 [00:04<00:06, 47886.62it/s] 43%|████████████████████████████████                                          | 227333/524288 [00:04<00:06, 47816.71it/s] 44%|████████████████████████████████▊                                         | 232150/524288 [00:04<00:06, 47920.20it/s] 45%|█████████████████████████████████▍                                        | 236943/524288 [00:04<00:05, 47920.79it/s] 46%|██████████████████████████████████                                        | 241736/524288 [00:05<00:05, 47911.96it/s] 47%|██████████████████████████████████▊                                       | 246528/524288 [00:05<00:05, 47829.49it/s] 48%|███████████████████████████████████▍                                      | 251370/524288 [00:05<00:05, 48004.07it/s] 49%|████████████████████████████████████▏                                     | 256171/524288 [00:05<00:05, 47911.57it/s] 50%|████████████████████████████████████▊                                     | 260963/524288 [00:05<00:05, 47862.95it/s] 51%|█████████████████████████████████████▌                                    | 265750/524288 [00:05<00:05, 47757.09it/s] 52%|██████████████████████████████████████▏                                   | 270550/524288 [00:05<00:05, 47828.47it/s] 53%|██████████████████████████████████████▊                                   | 275385/524288 [00:05<00:05, 47983.55it/s] 53%|███████████████████████████████████████▌                                  | 280185/524288 [00:05<00:05, 47987.46it/s] 54%|████████████████████████████████████████▏                                 | 284984/524288 [00:05<00:04, 47926.67it/s] 55%|████████████████████████████████████████▉                                 | 289777/524288 [00:06<00:04, 47799.97it/s] 56%|█████████████████████████████████████████▌                                | 294573/524288 [00:06<00:04, 47847.23it/s] 57%|██████████████████████████████████████████▎                               | 299412/524288 [00:06<00:04, 48005.92it/s] 58%|██████████████████████████████████████████▉                               | 304233/524288 [00:06<00:04, 48064.52it/s] 59%|███████████████████████████████████████████▌                              | 309074/524288 [00:06<00:04, 48165.69it/s] 60%|████████████████████████████████████████████▎                             | 313891/524288 [00:06<00:04, 48120.19it/s] 61%|████████████████████████████████████████████▉                             | 318744/524288 [00:06<00:04, 48240.75it/s] 62%|█████████████████████████████████████████████▋                            | 323569/524288 [00:06<00:04, 48212.74it/s] 63%|██████████████████████████████████████████████▎                           | 328424/524288 [00:06<00:04, 48311.89it/s] 64%|███████████████████████████████████████████████                           | 333256/524288 [00:06<00:03, 48302.70it/s] 64%|███████████████████████████████████████████████▋                          | 338122/524288 [00:07<00:03, 48407.75it/s] 65%|████████████████████████████████████████████████▍                         | 342963/524288 [00:07<00:03, 48327.77it/s] 66%|█████████████████████████████████████████████████                         | 347799/524288 [00:07<00:03, 48336.50it/s] 67%|█████████████████████████████████████████████████▊                        | 352633/524288 [00:07<00:03, 48271.62it/s] 68%|██████████████████████████████████████████████████▍                       | 357461/524288 [00:07<00:03, 48215.59it/s] 69%|███████████████████████████████████████████████████▏                      | 362283/524288 [00:07<00:03, 48108.41it/s] 70%|███████████████████████████████████████████████████▊                      | 367131/524288 [00:07<00:03, 48218.57it/s] 71%|████████████████████████████████████████████████████▍                     | 371953/524288 [00:07<00:03, 48073.39it/s] 72%|█████████████████████████████████████████████████████▏                    | 376787/524288 [00:07<00:03, 48150.66it/s] 73%|█████████████████████████████████████████████████████▊                    | 381603/524288 [00:07<00:02, 48066.99it/s] 74%|██████████████████████████████████████████████████████▌                   | 386410/524288 [00:08<00:02, 48063.96it/s] 75%|███████████████████████████████████████████████████████▏                  | 391217/524288 [00:08<00:02, 48024.28it/s] 76%|███████████████████████████████████████████████████████▉                  | 396033/524288 [00:08<00:02, 48061.45it/s] 76%|████████████████████████████████████████████████████████▌                 | 400840/524288 [00:08<00:02, 47985.93it/s] 77%|█████████████████████████████████████████████████████████▎                | 405639/524288 [00:08<00:02, 47865.82it/s] 78%|█████████████████████████████████████████████████████████▉                | 410426/524288 [00:08<00:02, 47864.32it/s] 79%|██████████████████████████████████████████████████████████▌               | 415213/524288 [00:08<00:02, 47836.03it/s] 80%|███████████████████████████████████████████████████████████▎              | 419998/524288 [00:08<00:02, 47839.58it/s] 81%|███████████████████████████████████████████████████████████▉              | 424793/524288 [00:08<00:02, 47870.86it/s] 82%|████████████████████████████████████████████████████████████▋             | 429581/524288 [00:08<00:01, 47811.71it/s] 83%|█████████████████████████████████████████████████████████████▎            | 434363/524288 [00:09<00:01, 46845.23it/s] 84%|█████████████████████████████████████████████████████████████▉            | 439162/524288 [00:09<00:01, 47181.82it/s] 85%|██████████████████████████████████████████████████████████████▋           | 443967/524288 [00:09<00:01, 47438.72it/s] 86%|███████████████████████████████████████████████████████████████▎          | 448735/524288 [00:09<00:01, 47508.91it/s] 87%|████████████████████████████████████████████████████████████████          | 453540/524288 [00:09<00:01, 47668.44it/s] 87%|████████████████████████████████████████████████████████████████▋         | 458318/524288 [00:09<00:01, 47699.32it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 463089/524288 [00:09<00:01, 47292.71it/s] 89%|██████████████████████████████████████████████████████████████████        | 467887/524288 [00:09<00:01, 47496.07it/s] 90%|██████████████████████████████████████████████████████████████████▋       | 472685/524288 [00:09<00:01, 47637.54it/s] 91%|███████████████████████████████████████████████████████████████████▍      | 477498/524288 [00:09<00:00, 47784.13it/s] 92%|████████████████████████████████████████████████████████████████████      | 482321/524288 [00:10<00:00, 47914.39it/s] 93%|████████████████████████████████████████████████████████████████████▊     | 487113/524288 [00:10<00:00, 44606.65it/s] 94%|█████████████████████████████████████████████████████████████████████▍    | 491918/524288 [00:10<00:00, 45586.22it/s] 95%|██████████████████████████████████████████████████████████████████████    | 496714/524288 [00:10<00:00, 46270.83it/s] 96%|██████████████████████████████████████████████████████████████████████▊   | 501480/524288 [00:10<00:00, 46675.09it/s] 97%|███████████████████████████████████████████████████████████████████████▍  | 506248/524288 [00:10<00:00, 46968.72it/s] 97%|████████████████████████████████████████████████████████████████████████▏ | 511037/524288 [00:10<00:00, 47240.80it/s] 98%|████████████████████████████████████████████████████████████████████████▊ | 515799/524288 [00:10<00:00, 47352.01it/s] 99%|█████████████████████████████████████████████████████████████████████████▍| 520590/524288 [00:10<00:00, 47517.75it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:10<00:00, 47887.76it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.70s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.54s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.73s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  1.93s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:09,  2.14s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:12,  2.31s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:15,  2.43s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:17,  2.52s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:20,  2.67s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:23,  2.79s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:27,  2.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:29,  2.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:33,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:36,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:39,  2.99s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:42,  2.99s/it]16it [00:42,  2.63s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:02,  6.24it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:03,  3.66it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:05,  2.37it/s] 25%|█████████████████████▌                                                                | 4/16 [00:01<00:06,  1.87it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:07,  1.48it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:03<00:07,  1.28it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:04<00:07,  1.17it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:05<00:07,  1.10it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:06<00:06,  1.03it/s] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:07<00:06,  1.02s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:09<00:05,  1.06s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:10<00:04,  1.11s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:11<00:03,  1.16s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:12<00:02,  1.20s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:14<00:01,  1.23s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:15<00:00,  1.25s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:15<00:00,  1.03it/s]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▊                                                                           | 5394/524288 [00:00<00:09, 53928.48it/s]  2%|█▌                                                                         | 10816/524288 [00:00<00:09, 54097.09it/s]  3%|██▎                                                                        | 16260/524288 [00:00<00:09, 54249.37it/s]  4%|███                                                                        | 21731/524288 [00:00<00:09, 54427.28it/s]  5%|███▉                                                                       | 27174/524288 [00:00<00:09, 53910.61it/s]  6%|████▋                                                                      | 32566/524288 [00:00<00:09, 53469.60it/s]  7%|█████▍                                                                     | 37914/524288 [00:00<00:09, 53108.52it/s]  8%|██████▏                                                                    | 43226/524288 [00:00<00:09, 52740.77it/s]  9%|██████▉                                                                    | 48501/524288 [00:00<00:09, 52451.20it/s] 10%|███████▋                                                                   | 53747/524288 [00:01<00:09, 52220.11it/s] 11%|████████▍                                                                  | 58970/524288 [00:01<00:08, 52021.32it/s] 12%|█████████▏                                                                 | 64173/524288 [00:01<00:08, 51813.76it/s] 13%|█████████▉                                                                 | 69355/524288 [00:01<00:08, 51764.22it/s] 14%|██████████▋                                                                | 74537/524288 [00:01<00:08, 51777.73it/s] 15%|███████████▍                                                               | 79715/524288 [00:01<00:08, 51745.85it/s] 16%|████████████▏                                                              | 84890/524288 [00:01<00:08, 51633.41it/s] 17%|████████████▉                                                              | 90054/524288 [00:01<00:08, 51552.92it/s] 18%|█████████████▌                                                             | 95210/524288 [00:01<00:08, 51502.92it/s] 19%|██████████████▏                                                           | 100361/524288 [00:01<00:08, 51435.70it/s] 20%|██████████████▉                                                           | 105518/524288 [00:02<00:08, 51472.77it/s] 21%|███████████████▌                                                          | 110666/524288 [00:02<00:08, 51453.94it/s] 22%|████████████████▎                                                         | 115812/524288 [00:02<00:07, 51393.57it/s] 23%|█████████████████                                                         | 120959/524288 [00:02<00:07, 51415.48it/s] 24%|█████████████████▊                                                        | 126120/524288 [00:02<00:07, 51471.56it/s] 25%|██████████████████▌                                                       | 131268/524288 [00:02<00:07, 51396.62it/s] 26%|███████████████████▎                                                      | 136439/524288 [00:02<00:07, 51486.55it/s] 27%|███████████████████▉                                                      | 141588/524288 [00:02<00:07, 51458.15it/s] 28%|████████████████████▋                                                     | 146758/524288 [00:02<00:07, 51527.64it/s] 29%|█████████████████████▍                                                    | 151913/524288 [00:02<00:07, 51531.86it/s] 30%|██████████████████████▏                                                   | 157073/524288 [00:03<00:07, 51551.23it/s] 31%|██████████████████████▉                                                   | 162229/524288 [00:03<00:07, 51400.50it/s] 32%|███████████████████████▋                                                  | 167387/524288 [00:03<00:06, 51452.32it/s] 33%|████████████████████████▎                                                 | 172553/524288 [00:03<00:06, 51511.99it/s] 34%|█████████████████████████                                                 | 177705/524288 [00:03<00:06, 51504.84it/s] 35%|█████████████████████████▊                                                | 182876/524288 [00:03<00:06, 51565.16it/s] 36%|██████████████████████████▌                                               | 188057/524288 [00:03<00:06, 51636.84it/s] 37%|███████████████████████████▎                                              | 193346/524288 [00:03<00:06, 52011.90it/s] 38%|████████████████████████████                                              | 198673/524288 [00:03<00:06, 52386.24it/s] 39%|████████████████████████████▊                                             | 203977/524288 [00:03<00:06, 52579.21it/s] 40%|█████████████████████████████▌                                            | 209278/524288 [00:04<00:05, 52707.22it/s] 41%|██████████████████████████████▎                                           | 214556/524288 [00:04<00:05, 52728.05it/s] 42%|███████████████████████████████                                           | 219829/524288 [00:04<00:05, 52296.42it/s] 43%|███████████████████████████████▊                                          | 225060/524288 [00:04<00:05, 52013.41it/s] 44%|████████████████████████████████▌                                         | 230263/524288 [00:04<00:05, 51849.38it/s] 45%|█████████████████████████████████▏                                        | 235449/524288 [00:04<00:05, 51768.28it/s] 46%|█████████████████████████████████▉                                        | 240641/524288 [00:04<00:05, 51809.64it/s] 47%|██████████████████████████████████▋                                       | 245828/524288 [00:04<00:05, 51824.40it/s] 48%|███████████████████████████████████▍                                      | 251011/524288 [00:04<00:05, 51636.96it/s] 49%|████████████████████████████████████▏                                     | 256175/524288 [00:04<00:05, 51526.21it/s] 50%|████████████████████████████████████▉                                     | 261328/524288 [00:05<00:05, 51372.51it/s] 51%|█████████████████████████████████████▌                                    | 266466/524288 [00:05<00:05, 51333.10it/s] 52%|██████████████████████████████████████▎                                   | 271600/524288 [00:05<00:04, 51330.13it/s] 53%|███████████████████████████████████████                                   | 276734/524288 [00:05<00:04, 51323.80it/s] 54%|███████████████████████████████████████▊                                  | 281867/524288 [00:05<00:04, 51322.67it/s] 55%|████████████████████████████████████████▌                                 | 287000/524288 [00:05<00:04, 51318.10it/s] 56%|█████████████████████████████████████████▏                                | 292170/524288 [00:05<00:04, 51429.23it/s] 57%|█████████████████████████████████████████▉                                | 297353/524288 [00:05<00:04, 51548.41it/s] 58%|██████████████████████████████████████████▋                               | 302543/524288 [00:05<00:04, 51652.98it/s] 59%|███████████████████████████████████████████▍                              | 307709/524288 [00:05<00:04, 51632.88it/s] 60%|████████████████████████████████████████████▏                             | 312873/524288 [00:06<00:04, 51588.97it/s] 61%|████████████████████████████████████████████▉                             | 318032/524288 [00:06<00:04, 51512.55it/s] 62%|█████████████████████████████████████████████▌                            | 323195/524288 [00:06<00:03, 51545.20it/s] 63%|██████████████████████████████████████████████▎                           | 328395/524288 [00:06<00:03, 51680.26it/s] 64%|███████████████████████████████████████████████                           | 333564/524288 [00:06<00:03, 51664.51it/s] 65%|███████████████████████████████████████████████▊                          | 338756/524288 [00:06<00:03, 51737.41it/s] 66%|████████████████████████████████████████████████▌                         | 343935/524288 [00:06<00:03, 51751.27it/s] 67%|█████████████████████████████████████████████████▎                        | 349147/524288 [00:06<00:03, 51860.36it/s] 68%|██████████████████████████████████████████████████                        | 354334/524288 [00:06<00:03, 51848.40it/s] 69%|██████████████████████████████████████████████████▋                       | 359519/524288 [00:06<00:03, 51833.07it/s] 70%|███████████████████████████████████████████████████▍                      | 364703/524288 [00:07<00:03, 51790.63it/s] 71%|████████████████████████████████████████████████████▏                     | 369883/524288 [00:07<00:02, 51788.82it/s] 72%|████████████████████████████████████████████████████▉                     | 375070/524288 [00:07<00:02, 51810.88it/s] 73%|█████████████████████████████████████████████████████▋                    | 380252/524288 [00:07<00:02, 51703.37it/s] 74%|██████████████████████████████████████████████████████▍                   | 385449/524288 [00:07<00:02, 51781.23it/s] 75%|███████████████████████████████████████████████████████▏                  | 390633/524288 [00:07<00:02, 51797.00it/s] 75%|███████████████████████████████████████████████████████▊                  | 395825/524288 [00:07<00:02, 51831.47it/s] 76%|████████████████████████████████████████████████████████▌                 | 401015/524288 [00:07<00:02, 51848.18it/s] 77%|█████████████████████████████████████████████████████████▎                | 406205/524288 [00:07<00:02, 51861.65it/s] 78%|██████████████████████████████████████████████████████████                | 411392/524288 [00:07<00:02, 51748.40it/s] 79%|██████████████████████████████████████████████████████████▊               | 416585/524288 [00:08<00:02, 51799.62it/s] 80%|███████████████████████████████████████████████████████████▌              | 421832/524288 [00:08<00:01, 51999.40it/s] 81%|████████████████████████████████████████████████████████████▎             | 427064/524288 [00:08<00:01, 52093.79it/s] 82%|█████████████████████████████████████████████████████████████             | 432318/524288 [00:08<00:01, 52225.90it/s] 83%|█████████████████████████████████████████████████████████████▊            | 437541/524288 [00:08<00:01, 52163.86it/s] 84%|██████████████████████████████████████████████████████████████▍           | 442758/524288 [00:08<00:01, 52035.60it/s] 85%|███████████████████████████████████████████████████████████████▏          | 447962/524288 [00:08<00:01, 51860.09it/s] 86%|███████████████████████████████████████████████████████████████▉          | 453149/524288 [00:08<00:01, 51845.08it/s] 87%|████████████████████████████████████████████████████████████████▋         | 458334/524288 [00:08<00:01, 51780.30it/s] 88%|█████████████████████████████████████████████████████████████████▍        | 463513/524288 [00:08<00:01, 51607.29it/s] 89%|██████████████████████████████████████████████████████████████████▏       | 468732/524288 [00:09<00:01, 51778.00it/s] 90%|██████████████████████████████████████████████████████████████████▉       | 473940/524288 [00:09<00:00, 51865.18it/s] 91%|███████████████████████████████████████████████████████████████████▋      | 479127/524288 [00:09<00:00, 51687.49it/s] 92%|████████████████████████████████████████████████████████████████████▎     | 484296/524288 [00:09<00:00, 51499.47it/s] 93%|█████████████████████████████████████████████████████████████████████     | 489447/524288 [00:09<00:00, 51476.99it/s] 94%|█████████████████████████████████████████████████████████████████████▊    | 494615/524288 [00:09<00:00, 51534.02it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 499828/524288 [00:09<00:00, 51709.72it/s] 96%|███████████████████████████████████████████████████████████████████████▎  | 505019/524288 [00:09<00:00, 51768.99it/s] 97%|████████████████████████████████████████████████████████████████████████  | 510207/524288 [00:09<00:00, 51799.97it/s] 98%|████████████████████████████████████████████████████████████████████████▋ | 515392/524288 [00:09<00:00, 51813.94it/s] 99%|█████████████████████████████████████████████████████████████████████████▍| 520574/524288 [00:10<00:00, 51724.20it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:10<00:00, 50918.25it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.79s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  2.01s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:08,  2.21s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:11,  2.42s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:14,  2.57s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:16,  2.64s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:19,  2.71s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:22,  2.80s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:25,  2.82s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:28,  2.86s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:31,  2.91s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:34,  3.05s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:37,  3.05s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:40,  3.04s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:43,  3.01s/it]16it [00:43,  2.74s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:03,  4.28it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:05,  2.73it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:06,  1.89it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:07,  1.53it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:08,  1.23it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:09,  1.07it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:09,  1.02s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:08,  1.09s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:08<00:08,  1.15s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:07,  1.19s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:10<00:06,  1.23s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:12<00:05,  1.26s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:13<00:03,  1.31s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:15<00:02,  1.35s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:16<00:01,  1.36s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.37s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.11s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4762/524288 [00:00<00:10, 47612.55it/s]  2%|█▍                                                                          | 9640/524288 [00:00<00:10, 48297.44it/s]  3%|██                                                                         | 14507/524288 [00:00<00:10, 48463.67it/s]  4%|██▊                                                                        | 19354/524288 [00:00<00:10, 48320.43it/s]  5%|███▍                                                                       | 24187/524288 [00:00<00:10, 48196.60it/s]  6%|████▏                                                                      | 29007/524288 [00:00<00:10, 47779.35it/s]  6%|████▊                                                                      | 33786/524288 [00:00<00:10, 47547.69it/s]  7%|█████▌                                                                     | 38542/524288 [00:00<00:10, 47358.86it/s]  8%|██████▏                                                                    | 43279/524288 [00:00<00:10, 47010.93it/s]  9%|██████▊                                                                    | 47981/524288 [00:01<00:10, 46817.15it/s] 10%|███████▌                                                                   | 52664/524288 [00:01<00:10, 46566.92it/s] 11%|████████▏                                                                  | 57321/524288 [00:01<00:10, 46344.22it/s] 12%|████████▊                                                                  | 61956/524288 [00:01<00:09, 46261.26it/s] 13%|█████████▌                                                                 | 66653/524288 [00:01<00:09, 46471.60it/s] 14%|██████████▏                                                                | 71337/524288 [00:01<00:09, 46578.56it/s] 14%|██████████▊                                                                | 76011/524288 [00:01<00:09, 46626.21it/s] 15%|███████████▌                                                               | 80674/524288 [00:01<00:09, 46328.79it/s] 16%|████████████▏                                                              | 85308/524288 [00:01<00:09, 46243.14it/s] 17%|████████████▉                                                              | 90016/524288 [00:01<00:09, 46491.82it/s] 18%|█████████████▌                                                             | 94666/524288 [00:02<00:09, 46450.44it/s] 19%|██████████████▏                                                            | 99312/524288 [00:02<00:09, 46307.07it/s] 20%|██████████████▋                                                           | 103943/524288 [00:02<00:09, 46206.28it/s] 21%|███████████████▎                                                          | 108585/524288 [00:02<00:08, 46266.99it/s] 22%|███████████████▉                                                          | 113266/524288 [00:02<00:08, 46426.89it/s] 22%|████████████████▋                                                         | 117909/524288 [00:02<00:08, 46363.98it/s] 23%|█████████████████▎                                                        | 122546/524288 [00:02<00:08, 46058.86it/s] 24%|█████████████████▉                                                        | 127153/524288 [00:02<00:08, 45634.35it/s] 25%|██████████████████▌                                                       | 131796/524288 [00:02<00:08, 45867.96it/s] 26%|███████████████████▎                                                      | 136461/524288 [00:02<00:08, 46097.13it/s] 27%|███████████████████▉                                                      | 141098/524288 [00:03<00:08, 46175.76it/s] 28%|████████████████████▌                                                     | 145762/524288 [00:03<00:08, 46313.61it/s] 29%|█████████████████████▏                                                    | 150436/524288 [00:03<00:08, 46439.23it/s] 30%|█████████████████████▉                                                    | 155081/524288 [00:03<00:07, 46293.30it/s] 30%|██████████████████████▌                                                   | 159711/524288 [00:03<00:07, 46095.71it/s] 31%|███████████████████████▏                                                  | 164359/524288 [00:03<00:07, 46207.51it/s] 32%|███████████████████████▊                                                  | 169039/524288 [00:03<00:07, 46382.62it/s] 33%|████████████████████████▌                                                 | 173678/524288 [00:03<00:07, 46127.98it/s] 34%|█████████████████████████▏                                                | 178292/524288 [00:03<00:07, 46063.22it/s] 35%|█████████████████████████▊                                                | 182938/524288 [00:03<00:07, 46179.92it/s] 36%|██████████████████████████▍                                               | 187587/524288 [00:04<00:07, 46270.41it/s] 37%|███████████████████████████▏                                              | 192215/524288 [00:04<00:07, 46175.26it/s] 38%|███████████████████████████▊                                              | 196833/524288 [00:04<00:07, 46159.77it/s] 38%|████████████████████████████▍                                             | 201450/524288 [00:04<00:07, 46106.04it/s] 39%|█████████████████████████████                                             | 206061/524288 [00:04<00:06, 45993.62it/s] 40%|█████████████████████████████▋                                            | 210661/524288 [00:04<00:06, 45879.75it/s] 41%|██████████████████████████████▍                                           | 215250/524288 [00:04<00:06, 45765.23it/s] 42%|███████████████████████████████                                           | 219832/524288 [00:04<00:06, 45780.58it/s] 43%|███████████████████████████████▋                                          | 224417/524288 [00:04<00:06, 45797.70it/s] 44%|████████████████████████████████▎                                         | 228997/524288 [00:04<00:06, 45745.85it/s] 45%|████████████████████████████████▉                                         | 233660/524288 [00:05<00:06, 46007.59it/s] 45%|█████████████████████████████████▋                                        | 238292/524288 [00:05<00:06, 46098.19it/s] 46%|██████████████████████████████████▎                                       | 242964/524288 [00:05<00:06, 46283.52it/s] 47%|██████████████████████████████████▉                                       | 247632/524288 [00:05<00:05, 46400.37it/s] 48%|███████████████████████████████████▌                                      | 252273/524288 [00:05<00:05, 46320.73it/s] 49%|████████████████████████████████████▎                                     | 256906/524288 [00:05<00:05, 46246.35it/s] 50%|████████████████████████████████████▉                                     | 261557/524288 [00:05<00:05, 46323.88it/s] 51%|█████████████████████████████████████▌                                    | 266213/524288 [00:05<00:05, 46392.29it/s] 52%|██████████████████████████████████████▏                                   | 270853/524288 [00:05<00:05, 46272.01it/s] 53%|██████████████████████████████████████▉                                   | 275493/524288 [00:05<00:05, 46307.51it/s] 53%|███████████████████████████████████████▌                                  | 280162/524288 [00:06<00:05, 46419.36it/s] 54%|████████████████████████████████████████▏                                 | 284805/524288 [00:06<00:05, 46361.96it/s] 55%|████████████████████████████████████████▊                                 | 289442/524288 [00:06<00:05, 46279.67it/s] 56%|█████████████████████████████████████████▌                                | 294104/524288 [00:06<00:04, 46380.49it/s] 57%|██████████████████████████████████████████▏                               | 298758/524288 [00:06<00:04, 46426.15it/s] 58%|██████████████████████████████████████████▊                               | 303401/524288 [00:06<00:04, 46382.82it/s] 59%|███████████████████████████████████████████▍                              | 308047/524288 [00:06<00:04, 46404.72it/s] 60%|████████████████████████████████████████████▏                             | 312704/524288 [00:06<00:04, 46452.97it/s] 61%|████████████████████████████████████████████▊                             | 317350/524288 [00:06<00:04, 46426.16it/s] 61%|█████████████████████████████████████████████▍                            | 321993/524288 [00:06<00:04, 46366.73it/s] 62%|██████████████████████████████████████████████                            | 326630/524288 [00:07<00:04, 46303.74it/s] 63%|██████████████████████████████████████████████▊                           | 331265/524288 [00:07<00:04, 46314.49it/s] 64%|███████████████████████████████████████████████▍                          | 335897/524288 [00:07<00:04, 46299.99it/s] 65%|████████████████████████████████████████████████                          | 340576/524288 [00:07<00:03, 46445.88it/s] 66%|████████████████████████████████████████████████▋                         | 345224/524288 [00:07<00:03, 46453.40it/s] 67%|█████████████████████████████████████████████████▍                        | 349871/524288 [00:07<00:03, 46457.19it/s] 68%|██████████████████████████████████████████████████                        | 354539/524288 [00:07<00:03, 46521.92it/s] 69%|██████████████████████████████████████████████████▋                       | 359192/524288 [00:07<00:03, 46509.56it/s] 69%|███████████████████████████████████████████████████▎                      | 363843/524288 [00:07<00:03, 46313.89it/s] 70%|████████████████████████████████████████████████████                      | 368475/524288 [00:07<00:03, 46224.71it/s] 71%|████████████████████████████████████████████████████▋                     | 373098/524288 [00:08<00:03, 46193.72it/s] 72%|█████████████████████████████████████████████████████▎                    | 377718/524288 [00:08<00:03, 45805.62it/s] 73%|█████████████████████████████████████████████████████▉                    | 382330/524288 [00:08<00:03, 45897.17it/s] 74%|██████████████████████████████████████████████████████▌                   | 386959/524288 [00:08<00:02, 46013.74it/s] 75%|███████████████████████████████████████████████████████▎                  | 391599/524288 [00:08<00:02, 46126.34it/s] 76%|███████████████████████████████████████████████████████▉                  | 396213/524288 [00:08<00:02, 45992.24it/s] 76%|████████████████████████████████████████████████████████▌                 | 400837/524288 [00:08<00:02, 46065.26it/s] 77%|█████████████████████████████████████████████████████████▏                | 405469/524288 [00:08<00:02, 46140.65it/s] 78%|█████████████████████████████████████████████████████████▉                | 410084/524288 [00:08<00:02, 46138.82it/s] 79%|██████████████████████████████████████████████████████████▌               | 414699/524288 [00:08<00:02, 46140.37it/s] 80%|███████████████████████████████████████████████████████████▏              | 419350/524288 [00:09<00:02, 46248.34it/s] 81%|███████████████████████████████████████████████████████████▊              | 423975/524288 [00:09<00:02, 46233.32it/s] 82%|████████████████████████████████████████████████████████████▍             | 428612/524288 [00:09<00:02, 46271.03it/s] 83%|█████████████████████████████████████████████████████████████▏            | 433265/524288 [00:09<00:01, 46346.77it/s] 84%|█████████████████████████████████████████████████████████████▊            | 437912/524288 [00:09<00:01, 46380.95it/s] 84%|██████████████████████████████████████████████████████████████▍           | 442551/524288 [00:09<00:01, 46325.94it/s] 85%|███████████████████████████████████████████████████████████████           | 447184/524288 [00:09<00:01, 46290.92it/s] 86%|███████████████████████████████████████████████████████████████▊          | 451814/524288 [00:09<00:01, 46142.44it/s] 87%|████████████████████████████████████████████████████████████████▍         | 456429/524288 [00:09<00:01, 46069.66it/s] 88%|█████████████████████████████████████████████████████████████████         | 461046/524288 [00:09<00:01, 46096.75it/s] 89%|█████████████████████████████████████████████████████████████████▋        | 465696/524288 [00:10<00:01, 46215.04it/s] 90%|██████████████████████████████████████████████████████████████████▍       | 470318/524288 [00:10<00:01, 46042.89it/s] 91%|███████████████████████████████████████████████████████████████████       | 474923/524288 [00:10<00:01, 46034.63it/s] 91%|███████████████████████████████████████████████████████████████████▋      | 479527/524288 [00:10<00:00, 46011.64it/s] 92%|████████████████████████████████████████████████████████████████████▎     | 484162/524288 [00:10<00:00, 46111.64it/s] 93%|████████████████████████████████████████████████████████████████████▉     | 488774/524288 [00:10<00:00, 46096.12it/s] 94%|█████████████████████████████████████████████████████████████████████▋    | 493384/524288 [00:10<00:00, 46079.59it/s] 95%|██████████████████████████████████████████████████████████████████████▎   | 498017/524288 [00:10<00:00, 46154.07it/s] 96%|██████████████████████████████████████████████████████████████████████▉   | 502642/524288 [00:10<00:00, 46181.38it/s] 97%|███████████████████████████████████████████████████████████████████████▌  | 507288/524288 [00:10<00:00, 46262.74it/s] 98%|████████████████████████████████████████████████████████████████████████▎ | 511916/524288 [00:11<00:00, 46267.17it/s] 99%|████████████████████████████████████████████████████████████████████████▉ | 516543/524288 [00:11<00:00, 46202.92it/s] 99%|█████████████████████████████████████████████████████████████████████████▌| 521164/524288 [00:11<00:00, 45906.20it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:11<00:00, 45677.98it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:02,  2.31s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:04,  2.26s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:07,  2.50s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:10,  2.66s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:13,  2.83s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:16,  2.94s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:19,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:22,  3.05s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:26,  3.11s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:29,  3.12s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:32,  3.14s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:35,  3.18s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:38,  3.17s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:41,  3.13s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:44,  3.11s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:48,  3.13s/it]16it [00:48,  3.00s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:06,  2.18it/s] 12%|██████████▊                                                                           | 2/16 [00:01<00:08,  1.65it/s] 19%|████████████████▏                                                                     | 3/16 [00:02<00:10,  1.30it/s] 25%|█████████████████████▌                                                                | 4/16 [00:03<00:10,  1.12it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:04<00:11,  1.02s/it] 38%|████████████████████████████████▎                                                     | 6/16 [00:05<00:11,  1.11s/it] 44%|█████████████████████████████████████▋                                                | 7/16 [00:07<00:10,  1.18s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:08<00:09,  1.23s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:09<00:08,  1.26s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:11<00:07,  1.28s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:12<00:06,  1.29s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:13<00:05,  1.31s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:15<00:04,  1.34s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:16<00:02,  1.36s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:17<00:01,  1.37s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:19<00:00,  1.36s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:19<00:00,  1.20s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▌                                                                           | 4147/524288 [00:00<00:12, 41459.86it/s]  2%|█▏                                                                          | 8293/524288 [00:00<00:12, 41429.52it/s]  2%|█▊                                                                         | 12436/524288 [00:00<00:12, 41252.22it/s]  3%|██▎                                                                        | 16562/524288 [00:00<00:12, 40876.30it/s]  4%|██▉                                                                        | 20651/524288 [00:00<00:12, 40482.67it/s]  5%|███▌                                                                       | 24700/524288 [00:00<00:12, 40342.82it/s]  5%|████                                                                       | 28735/524288 [00:00<00:12, 40297.62it/s]  6%|████▋                                                                      | 32765/524288 [00:00<00:12, 40260.06it/s]  7%|█████▎                                                                     | 36792/524288 [00:00<00:12, 40235.46it/s]  8%|█████▊                                                                     | 40816/524288 [00:01<00:12, 38930.80it/s]  9%|██████▍                                                                    | 44801/524288 [00:01<00:12, 39204.15it/s]  9%|██████▉                                                                    | 48772/524288 [00:01<00:12, 39354.68it/s] 10%|███████▌                                                                   | 52765/524288 [00:01<00:11, 39525.01it/s] 11%|████████                                                                   | 56722/524288 [00:01<00:11, 39502.23it/s] 12%|████████▋                                                                  | 60680/524288 [00:01<00:11, 39522.22it/s] 12%|█████████▎                                                                 | 64677/524288 [00:01<00:11, 39655.48it/s] 13%|█████████▊                                                                 | 68669/524288 [00:01<00:11, 39731.52it/s] 14%|██████████▍                                                                | 72665/524288 [00:01<00:11, 39799.13it/s] 15%|██████████▉                                                                | 76647/524288 [00:01<00:11, 39804.61it/s] 15%|███████████▌                                                               | 80628/524288 [00:02<00:11, 39710.05it/s] 16%|████████████                                                               | 84600/524288 [00:02<00:11, 39688.93it/s] 17%|████████████▋                                                              | 88573/524288 [00:02<00:10, 39698.86it/s] 18%|█████████████▏                                                             | 92595/524288 [00:02<00:10, 39854.24it/s] 18%|█████████████▊                                                             | 96615/524288 [00:02<00:10, 39955.71it/s] 19%|██████████████▏                                                           | 100646/524288 [00:02<00:10, 40058.47it/s] 20%|██████████████▊                                                           | 104652/524288 [00:02<00:10, 39996.38it/s] 21%|███████████████▎                                                          | 108686/524288 [00:02<00:10, 40096.15it/s] 21%|███████████████▉                                                          | 112701/524288 [00:02<00:10, 40109.95it/s] 22%|████████████████▍                                                         | 116737/524288 [00:02<00:10, 40183.79it/s] 23%|█████████████████                                                         | 120756/524288 [00:03<00:10, 39889.32it/s] 24%|█████████████████▌                                                        | 124765/524288 [00:03<00:10, 39946.33it/s] 25%|██████████████████▏                                                       | 128792/524288 [00:03<00:09, 40040.86it/s] 25%|██████████████████▋                                                       | 132822/524288 [00:03<00:09, 40115.07it/s] 26%|███████████████████▎                                                      | 136863/524288 [00:03<00:09, 40201.52it/s] 27%|███████████████████▉                                                      | 140907/524288 [00:03<00:09, 40269.75it/s] 28%|████████████████████▍                                                     | 144936/524288 [00:03<00:09, 40274.74it/s] 28%|█████████████████████                                                     | 148965/524288 [00:03<00:09, 40276.33it/s] 29%|█████████████████████▌                                                    | 152993/524288 [00:03<00:09, 40178.30it/s] 30%|██████████████████████▏                                                   | 157011/524288 [00:03<00:09, 40106.80it/s] 31%|██████████████████████▋                                                   | 161022/524288 [00:04<00:09, 40030.47it/s] 31%|███████████████████████▎                                                  | 165026/524288 [00:04<00:09, 39812.26it/s] 32%|███████████████████████▊                                                  | 169073/524288 [00:04<00:08, 40007.50it/s] 33%|████████████████████████▍                                                 | 173084/524288 [00:04<00:08, 40035.02it/s] 34%|████████████████████████▉                                                 | 177090/524288 [00:04<00:08, 40039.42it/s] 35%|█████████████████████████▌                                                | 181095/524288 [00:04<00:08, 39980.42it/s] 35%|██████████████████████████▏                                               | 185110/524288 [00:04<00:08, 40028.03it/s] 36%|██████████████████████████▋                                               | 189113/524288 [00:04<00:08, 39997.82it/s] 37%|███████████████████████████▎                                              | 193113/524288 [00:04<00:08, 39968.58it/s] 38%|███████████████████████████▊                                              | 197123/524288 [00:04<00:08, 40005.20it/s] 38%|████████████████████████████▍                                             | 201128/524288 [00:05<00:08, 40018.01it/s] 39%|████████████████████████████▉                                             | 205137/524288 [00:05<00:07, 40038.82it/s] 40%|█████████████████████████████▌                                            | 209141/524288 [00:05<00:08, 38827.90it/s] 41%|██████████████████████████████                                            | 213179/524288 [00:05<00:07, 39281.15it/s] 41%|██████████████████████████████▋                                           | 217177/524288 [00:05<00:07, 39484.44it/s] 42%|███████████████████████████████▏                                          | 221166/524288 [00:05<00:07, 39603.03it/s] 43%|███████████████████████████████▊                                          | 225166/524288 [00:05<00:07, 39720.11it/s] 44%|████████████████████████████████▎                                         | 229180/524288 [00:05<00:07, 39843.09it/s] 44%|████████████████████████████████▉                                         | 233212/524288 [00:05<00:07, 39983.51it/s] 45%|█████████████████████████████████▍                                        | 237246/524288 [00:05<00:07, 40086.95it/s] 46%|██████████████████████████████████                                        | 241291/524288 [00:06<00:07, 40193.97it/s] 47%|██████████████████████████████████▋                                       | 245329/524288 [00:06<00:06, 40247.27it/s] 48%|███████████████████████████████████▏                                      | 249372/524288 [00:06<00:06, 40299.88it/s] 48%|███████████████████████████████████▊                                      | 253403/524288 [00:06<00:06, 40235.98it/s] 49%|████████████████████████████████████▎                                     | 257427/524288 [00:06<00:06, 40076.69it/s] 50%|████████████████████████████████████▉                                     | 261456/524288 [00:06<00:06, 40137.06it/s] 51%|█████████████████████████████████████▍                                    | 265470/524288 [00:06<00:06, 39753.26it/s] 51%|██████████████████████████████████████                                    | 269486/524288 [00:06<00:06, 39872.11it/s] 52%|██████████████████████████████████████▌                                   | 273517/524288 [00:06<00:06, 39999.55it/s] 53%|███████████████████████████████████████▏                                  | 277518/524288 [00:06<00:06, 39960.60it/s] 54%|███████████████████████████████████████▋                                  | 281515/524288 [00:07<00:06, 39939.20it/s] 54%|████████████████████████████████████████▎                                 | 285510/524288 [00:07<00:05, 39874.40it/s] 55%|████████████████████████████████████████▊                                 | 289498/524288 [00:07<00:05, 39873.10it/s] 56%|█████████████████████████████████████████▍                                | 293515/524288 [00:07<00:05, 39958.66it/s] 57%|█████████████████████████████████████████▉                                | 297511/524288 [00:07<00:05, 39932.16it/s] 58%|██████████████████████████████████████████▌                               | 301505/524288 [00:07<00:05, 39922.66it/s] 58%|███████████████████████████████████████████                               | 305504/524288 [00:07<00:05, 39940.99it/s] 59%|███████████████████████████████████████████▋                              | 309540/524288 [00:07<00:05, 40065.78it/s] 60%|████████████████████████████████████████████▎                             | 313549/524288 [00:07<00:05, 40070.76it/s] 61%|████████████████████████████████████████████▊                             | 317567/524288 [00:07<00:05, 40100.80it/s] 61%|█████████████████████████████████████████████▍                            | 321591/524288 [00:08<00:05, 40139.74it/s] 62%|█████████████████████████████████████████████▉                            | 325605/524288 [00:08<00:04, 40108.29it/s] 63%|██████████████████████████████████████████████▌                           | 329628/524288 [00:08<00:04, 40143.72it/s] 64%|███████████████████████████████████████████████                           | 333643/524288 [00:08<00:04, 39844.72it/s] 64%|███████████████████████████████████████████████▋                          | 337646/524288 [00:08<00:04, 39899.24it/s] 65%|████████████████████████████████████████████████▏                         | 341641/524288 [00:08<00:04, 39913.48it/s] 66%|████████████████████████████████████████████████▊                         | 345679/524288 [00:08<00:04, 40050.48it/s] 67%|█████████████████████████████████████████████████▎                        | 349685/524288 [00:08<00:04, 40049.80it/s] 67%|█████████████████████████████████████████████████▉                        | 353691/524288 [00:08<00:04, 39951.86it/s] 68%|██████████████████████████████████████████████████▍                       | 357687/524288 [00:08<00:04, 39886.62it/s] 69%|███████████████████████████████████████████████████                       | 361676/524288 [00:09<00:04, 39787.36it/s] 70%|███████████████████████████████████████████████████▌                      | 365665/524288 [00:09<00:03, 39815.21it/s] 71%|████████████████████████████████████████████████████▏                     | 369647/524288 [00:09<00:03, 39796.27it/s] 71%|████████████████████████████████████████████████████▋                     | 373627/524288 [00:09<00:03, 39768.11it/s] 72%|█████████████████████████████████████████████████████▎                    | 377604/524288 [00:09<00:03, 39732.76it/s] 73%|█████████████████████████████████████████████████████▊                    | 381578/524288 [00:09<00:03, 39716.71it/s] 74%|██████████████████████████████████████████████████████▍                   | 385550/524288 [00:09<00:03, 39704.61it/s] 74%|██████████████████████████████████████████████████████▉                   | 389521/524288 [00:09<00:03, 39578.78it/s] 75%|███████████████████████████████████████████████████████▌                  | 393496/524288 [00:09<00:03, 39628.04it/s] 76%|████████████████████████████████████████████████████████                  | 397487/524288 [00:09<00:03, 39710.26it/s] 77%|████████████████████████████████████████████████████████▋                 | 401459/524288 [00:10<00:03, 39414.08it/s] 77%|█████████████████████████████████████████████████████████▏                | 405436/524288 [00:10<00:03, 39517.06it/s] 78%|█████████████████████████████████████████████████████████▊                | 409416/524288 [00:10<00:02, 39598.21it/s] 79%|██████████████████████████████████████████████████████████▎               | 413404/524288 [00:10<00:02, 39679.65it/s] 80%|██████████████████████████████████████████████████████████▉               | 417373/524288 [00:10<00:02, 39638.41it/s] 80%|███████████████████████████████████████████████████████████▍              | 421338/524288 [00:10<00:02, 39631.68it/s] 81%|████████████████████████████████████████████████████████████              | 425322/524288 [00:10<00:02, 39690.61it/s] 82%|████████████████████████████████████████████████████████████▌             | 429292/524288 [00:10<00:02, 39676.09it/s] 83%|█████████████████████████████████████████████████████████████▏            | 433267/524288 [00:10<00:02, 39694.93it/s] 83%|█████████████████████████████████████████████████████████████▋            | 437242/524288 [00:10<00:02, 39710.71it/s] 84%|██████████████████████████████████████████████████████████████▎           | 441222/524288 [00:11<00:02, 39736.50it/s] 85%|██████████████████████████████████████████████████████████████▊           | 445211/524288 [00:11<00:01, 39780.29it/s] 86%|███████████████████████████████████████████████████████████████▍          | 449190/524288 [00:11<00:01, 39715.21it/s] 86%|███████████████████████████████████████████████████████████████▉          | 453167/524288 [00:11<00:01, 39729.33it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457140/524288 [00:11<00:01, 39669.94it/s] 88%|█████████████████████████████████████████████████████████████████         | 461126/524288 [00:11<00:01, 39723.74it/s] 89%|█████████████████████████████████████████████████████████████████▋        | 465132/524288 [00:11<00:01, 39822.17it/s] 89%|██████████████████████████████████████████████████████████████████▏       | 469115/524288 [00:11<00:01, 39747.73it/s] 90%|██████████████████████████████████████████████████████████████████▊       | 473104/524288 [00:11<00:01, 39788.32it/s] 91%|███████████████████████████████████████████████████████████████████▎      | 477087/524288 [00:11<00:01, 39799.54it/s] 92%|███████████████████████████████████████████████████████████████████▉      | 481114/524288 [00:12<00:01, 39937.71it/s] 93%|████████████████████████████████████████████████████████████████████▍     | 485150/524288 [00:12<00:00, 40061.19it/s] 93%|█████████████████████████████████████████████████████████████████████     | 489157/524288 [00:12<00:00, 40056.34it/s] 94%|█████████████████████████████████████████████████████████████████████▌    | 493164/524288 [00:12<00:00, 40059.85it/s] 95%|██████████████████████████████████████████████████████████████████████▏   | 497171/524288 [00:12<00:00, 39840.41it/s] 96%|██████████████████████████████████████████████████████████████████████▋   | 501156/524288 [00:12<00:00, 39827.68it/s] 96%|███████████████████████████████████████████████████████████████████████▎  | 505140/524288 [00:12<00:00, 39830.07it/s] 97%|███████████████████████████████████████████████████████████████████████▊  | 509124/524288 [00:12<00:00, 39747.05it/s] 98%|████████████████████████████████████████████████████████████████████████▍ | 513099/524288 [00:12<00:00, 39597.23it/s] 99%|████████████████████████████████████████████████████████████████████████▉ | 517059/524288 [00:12<00:00, 39552.09it/s] 99%|█████████████████████████████████████████████████████████████████████████▌| 521015/524288 [00:13<00:00, 39368.73it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:13<00:00, 39507.83it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.84s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.93s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:06,  2.09s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:08,  2.22s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:11,  2.39s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:14,  2.55s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:16,  2.66s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:19,  2.76s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:22,  2.84s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:25,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:28,  2.92s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:31,  2.96s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:35,  3.02s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:38,  3.04s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:41,  3.04s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:44,  3.11s/it]16it [00:44,  2.79s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:04,  3.16it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:06,  2.23it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:07,  1.65it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:08,  1.39it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:09,  1.18it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:09,  1.06it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:09,  1.01s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:07<00:08,  1.07s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:08<00:07,  1.12s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:06,  1.17s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:10<00:05,  1.19s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:12<00:04,  1.22s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:13<00:03,  1.25s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:14<00:02,  1.29s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:16<00:01,  1.32s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.31s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.10s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4532/524288 [00:00<00:11, 45310.64it/s]  2%|█▎                                                                          | 9154/524288 [00:00<00:11, 45838.79it/s]  3%|█▉                                                                         | 13738/524288 [00:00<00:11, 45625.80it/s]  3%|██▌                                                                        | 18301/524288 [00:00<00:11, 45143.96it/s]  4%|███▎                                                                       | 22817/524288 [00:00<00:11, 44828.80it/s]  5%|███▉                                                                       | 27301/524288 [00:00<00:11, 44759.44it/s]  6%|████▌                                                                      | 31800/524288 [00:00<00:10, 44832.83it/s]  7%|█████▏                                                                     | 36284/524288 [00:00<00:10, 44404.41it/s]  8%|█████▊                                                                     | 40726/524288 [00:00<00:10, 44187.99it/s]  9%|██████▍                                                                    | 45146/524288 [00:01<00:10, 44134.82it/s]  9%|███████                                                                    | 49560/524288 [00:01<00:10, 44100.72it/s] 10%|███████▋                                                                   | 53980/524288 [00:01<00:10, 44130.14it/s] 11%|████████▎                                                                  | 58394/524288 [00:01<00:10, 43942.41it/s] 12%|████████▉                                                                  | 62789/524288 [00:01<00:10, 43792.31it/s] 13%|█████████▌                                                                 | 67169/524288 [00:01<00:10, 43697.40it/s] 14%|██████████▏                                                                | 71539/524288 [00:01<00:10, 43684.01it/s] 14%|██████████▊                                                                | 75908/524288 [00:01<00:10, 43644.83it/s] 15%|███████████▍                                                               | 80303/524288 [00:01<00:10, 43735.38it/s] 16%|████████████                                                               | 84729/524288 [00:01<00:10, 43889.36it/s] 17%|████████████▊                                                              | 89135/524288 [00:02<00:09, 43939.41it/s] 18%|█████████████▍                                                             | 93545/524288 [00:02<00:09, 43986.64it/s] 19%|██████████████                                                             | 97944/524288 [00:02<00:09, 43921.61it/s] 20%|██████████████▍                                                           | 102337/524288 [00:02<00:09, 43868.64it/s] 20%|███████████████                                                           | 106725/524288 [00:02<00:09, 43869.77it/s] 21%|███████████████▋                                                          | 111115/524288 [00:02<00:09, 43875.71it/s] 22%|████████████████▎                                                         | 115520/524288 [00:02<00:09, 43924.97it/s] 23%|████████████████▉                                                         | 119913/524288 [00:02<00:09, 43871.40it/s] 24%|█████████████████▌                                                        | 124301/524288 [00:02<00:09, 43813.40it/s] 25%|██████████████████▏                                                       | 128683/524288 [00:02<00:09, 43778.89it/s] 25%|██████████████████▊                                                       | 133061/524288 [00:03<00:09, 43147.71it/s] 26%|███████████████████▍                                                      | 137433/524288 [00:03<00:08, 43314.86it/s] 27%|████████████████████                                                      | 141792/524288 [00:03<00:08, 43395.05it/s] 28%|████████████████████▋                                                     | 146135/524288 [00:03<00:08, 43404.44it/s] 29%|█████████████████████▏                                                    | 150525/524288 [00:03<00:08, 43550.44it/s] 30%|█████████████████████▊                                                    | 154922/524288 [00:03<00:08, 43672.79it/s] 30%|██████████████████████▍                                                   | 159320/524288 [00:03<00:08, 43762.49it/s] 31%|███████████████████████                                                   | 163710/524288 [00:03<00:08, 43801.01it/s] 32%|███████████████████████▋                                                  | 168091/524288 [00:03<00:08, 43751.67it/s] 33%|████████████████████████▎                                                 | 172467/524288 [00:03<00:08, 43700.50it/s] 34%|████████████████████████▉                                                 | 176838/524288 [00:04<00:07, 43686.23it/s] 35%|█████████████████████████▌                                                | 181207/524288 [00:04<00:07, 43610.33it/s] 35%|██████████████████████████▏                                               | 185569/524288 [00:04<00:07, 43607.95it/s] 36%|██████████████████████████▊                                               | 189939/524288 [00:04<00:07, 43633.00it/s] 37%|███████████████████████████▍                                              | 194327/524288 [00:04<00:07, 43704.74it/s] 38%|████████████████████████████                                              | 198725/524288 [00:04<00:07, 43784.50it/s] 39%|████████████████████████████▋                                             | 203104/524288 [00:04<00:07, 43393.99it/s] 40%|█████████████████████████████▎                                            | 207533/524288 [00:04<00:07, 43659.87it/s] 40%|█████████████████████████████▉                                            | 211974/524288 [00:04<00:07, 43882.76it/s] 41%|██████████████████████████████▌                                           | 216453/524288 [00:04<00:06, 44152.42it/s] 42%|███████████████████████████████▏                                          | 220947/524288 [00:05<00:06, 44386.59it/s] 43%|███████████████████████████████▊                                          | 225398/524288 [00:05<00:06, 44420.52it/s] 44%|████████████████████████████████▍                                         | 229841/524288 [00:05<00:06, 44381.97it/s] 45%|█████████████████████████████████                                         | 234280/524288 [00:05<00:06, 44203.62it/s] 46%|█████████████████████████████████▋                                        | 238701/524288 [00:05<00:06, 44140.38it/s] 46%|██████████████████████████████████▎                                       | 243116/524288 [00:05<00:06, 44050.45it/s] 47%|██████████████████████████████████▉                                       | 247522/524288 [00:05<00:06, 43894.95it/s] 48%|███████████████████████████████████▌                                      | 251912/524288 [00:05<00:06, 43833.17it/s] 49%|████████████████████████████████████▏                                     | 256296/524288 [00:05<00:06, 43825.33it/s] 50%|████████████████████████████████████▊                                     | 260701/524288 [00:05<00:06, 43890.44it/s] 51%|█████████████████████████████████████▍                                    | 265109/524288 [00:06<00:05, 43943.83it/s] 51%|██████████████████████████████████████                                    | 269563/524288 [00:06<00:05, 44120.13it/s] 52%|██████████████████████████████████████▋                                   | 273976/524288 [00:06<00:05, 44066.60it/s] 53%|███████████████████████████████████████▎                                  | 278383/524288 [00:06<00:05, 43952.84it/s] 54%|███████████████████████████████████████▉                                  | 282779/524288 [00:06<00:05, 43917.35it/s] 55%|████████████████████████████████████████▌                                 | 287171/524288 [00:06<00:05, 43856.59it/s] 56%|█████████████████████████████████████████▏                                | 291557/524288 [00:06<00:05, 43824.00it/s] 56%|█████████████████████████████████████████▊                                | 295940/524288 [00:06<00:05, 43797.43it/s] 57%|██████████████████████████████████████████▍                               | 300320/524288 [00:06<00:05, 43752.97it/s] 58%|███████████████████████████████████████████                               | 304730/524288 [00:06<00:05, 43855.91it/s] 59%|███████████████████████████████████████████▋                              | 309116/524288 [00:07<00:04, 43778.46it/s] 60%|████████████████████████████████████████████▎                             | 313521/524288 [00:07<00:04, 43858.80it/s] 61%|████████████████████████████████████████████▊                             | 317928/524288 [00:07<00:04, 43920.37it/s] 61%|█████████████████████████████████████████████▍                            | 322321/524288 [00:07<00:04, 43820.12it/s] 62%|██████████████████████████████████████████████                            | 326704/524288 [00:07<00:04, 43717.57it/s] 63%|██████████████████████████████████████████████▋                           | 331076/524288 [00:07<00:04, 43604.02it/s] 64%|███████████████████████████████████████████████▎                          | 335439/524288 [00:07<00:04, 43609.50it/s] 65%|███████████████████████████████████████████████▉                          | 339801/524288 [00:07<00:04, 43541.70it/s] 66%|████████████████████████████████████████████████▌                         | 344156/524288 [00:07<00:04, 43528.80it/s] 66%|█████████████████████████████████████████████████▏                        | 348509/524288 [00:07<00:04, 43495.91it/s] 67%|█████████████████████████████████████████████████▊                        | 352859/524288 [00:08<00:03, 43406.67it/s] 68%|██████████████████████████████████████████████████▍                       | 357207/524288 [00:08<00:03, 43427.28it/s] 69%|███████████████████████████████████████████████████                       | 361550/524288 [00:08<00:03, 43374.92it/s] 70%|███████████████████████████████████████████████████▋                      | 365888/524288 [00:08<00:03, 43368.97it/s] 71%|████████████████████████████████████████████████████▎                     | 370277/524288 [00:08<00:03, 43523.36it/s] 71%|████████████████████████████████████████████████████▉                     | 374630/524288 [00:08<00:03, 43486.10it/s] 72%|█████████████████████████████████████████████████████▍                    | 379005/524288 [00:08<00:03, 43563.92it/s] 73%|██████████████████████████████████████████████████████                    | 383364/524288 [00:08<00:03, 43568.38it/s] 74%|██████████████████████████████████████████████████████▋                   | 387750/524288 [00:08<00:03, 43654.59it/s] 75%|███████████████████████████████████████████████████████▎                  | 392116/524288 [00:08<00:03, 43644.12it/s] 76%|███████████████████████████████████████████████████████▉                  | 396481/524288 [00:09<00:02, 43643.81it/s] 76%|████████████████████████████████████████████████████████▌                 | 400846/524288 [00:09<00:02, 43614.84it/s] 77%|█████████████████████████████████████████████████████████▏                | 405208/524288 [00:09<00:02, 43555.76it/s] 78%|█████████████████████████████████████████████████████████▊                | 409615/524288 [00:09<00:02, 43707.40it/s] 79%|██████████████████████████████████████████████████████████▍               | 413986/524288 [00:09<00:02, 43694.08it/s] 80%|███████████████████████████████████████████████████████████               | 418391/524288 [00:09<00:02, 43799.17it/s] 81%|███████████████████████████████████████████████████████████▋              | 422771/524288 [00:09<00:02, 43753.33it/s] 81%|████████████████████████████████████████████████████████████▎             | 427147/524288 [00:09<00:02, 43630.08it/s] 82%|████████████████████████████████████████████████████████████▉             | 431538/524288 [00:09<00:02, 43710.96it/s] 83%|█████████████████████████████████████████████████████████████▌            | 435910/524288 [00:09<00:02, 43623.60it/s] 84%|██████████████████████████████████████████████████████████████▏           | 440273/524288 [00:10<00:01, 43598.66it/s] 85%|██████████████████████████████████████████████████████████████▊           | 444633/524288 [00:10<00:01, 43569.70it/s] 86%|███████████████████████████████████████████████████████████████▎          | 449010/524288 [00:10<00:01, 43627.46it/s] 86%|███████████████████████████████████████████████████████████████▉          | 453373/524288 [00:10<00:01, 43357.00it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457780/524288 [00:10<00:01, 43567.05it/s] 88%|█████████████████████████████████████████████████████████████████▏        | 462145/524288 [00:10<00:01, 43590.23it/s] 89%|█████████████████████████████████████████████████████████████████▊        | 466505/524288 [00:10<00:01, 43557.41it/s] 90%|██████████████████████████████████████████████████████████████████▍       | 470874/524288 [00:10<00:01, 43595.82it/s] 91%|███████████████████████████████████████████████████████████████████       | 475250/524288 [00:10<00:01, 43644.44it/s] 91%|███████████████████████████████████████████████████████████████████▋      | 479615/524288 [00:10<00:01, 43607.68it/s] 92%|████████████████████████████████████████████████████████████████████▎     | 483976/524288 [00:11<00:00, 43589.08it/s] 93%|████████████████████████████████████████████████████████████████████▉     | 488335/524288 [00:11<00:00, 43535.05it/s] 94%|█████████████████████████████████████████████████████████████████████▌    | 492727/524288 [00:11<00:00, 43648.87it/s] 95%|██████████████████████████████████████████████████████████████████████▏   | 497110/524288 [00:11<00:00, 43700.09it/s] 96%|██████████████████████████████████████████████████████████████████████▊   | 501481/524288 [00:11<00:00, 43639.43it/s] 96%|███████████████████████████████████████████████████████████████████████▍  | 505849/524288 [00:11<00:00, 43649.69it/s] 97%|████████████████████████████████████████████████████████████████████████  | 510215/524288 [00:11<00:00, 43547.33it/s] 98%|████████████████████████████████████████████████████████████████████████▋ | 514592/524288 [00:11<00:00, 43612.76it/s] 99%|█████████████████████████████████████████████████████████████████████████▎| 518977/524288 [00:11<00:00, 43683.10it/s]100%|█████████████████████████████████████████████████████████████████████████▊| 523346/524288 [00:11<00:00, 43672.61it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:12<00:00, 43321.11it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.92s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:06,  2.07s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:08,  2.19s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:11,  2.35s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:13,  2.50s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:16,  2.60s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:19,  2.67s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:22,  2.77s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:25,  2.80s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:28,  2.82s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:31,  2.84s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:34,  2.94s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:37,  2.96s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:40,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:43,  2.99s/it]16it [00:43,  2.71s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:04,  3.67it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:05,  2.44it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:07,  1.77it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:08,  1.45it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:09,  1.21it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:09,  1.09it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:08,  1.01it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:08,  1.04s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:08<00:07,  1.09s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:06,  1.15s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:10<00:05,  1.18s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:11<00:04,  1.21s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:13<00:03,  1.25s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:14<00:02,  1.28s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:15<00:01,  1.30s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.32s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.08s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4691/524288 [00:00<00:11, 46905.01it/s]  2%|█▎                                                                          | 9382/524288 [00:00<00:10, 46848.51it/s]  3%|██                                                                         | 14119/524288 [00:00<00:10, 47084.85it/s]  4%|██▋                                                                        | 18964/524288 [00:00<00:10, 47619.31it/s]  5%|███▍                                                                       | 23803/524288 [00:00<00:10, 47894.93it/s]  5%|████                                                                       | 28626/524288 [00:00<00:10, 48005.53it/s]  6%|████▊                                                                      | 33427/524288 [00:00<00:10, 47749.66it/s]  7%|█████▍                                                                     | 38311/524288 [00:00<00:10, 48093.90it/s]  8%|██████▏                                                                    | 43127/524288 [00:00<00:10, 48112.77it/s]  9%|██████▊                                                                    | 47939/524288 [00:01<00:09, 47986.58it/s] 10%|███████▌                                                                   | 52738/524288 [00:01<00:09, 47893.26it/s] 11%|████████▏                                                                  | 57528/524288 [00:01<00:09, 47277.35it/s] 12%|████████▉                                                                  | 62258/524288 [00:01<00:09, 46484.85it/s] 13%|█████████▌                                                                 | 66910/524288 [00:01<00:09, 45917.20it/s] 14%|██████████▏                                                                | 71505/524288 [00:01<00:09, 45397.66it/s] 15%|██████████▉                                                                | 76047/524288 [00:01<00:09, 45193.78it/s] 15%|███████████▌                                                               | 80568/524288 [00:01<00:09, 45036.26it/s] 16%|████████████▏                                                              | 85084/524288 [00:01<00:09, 45071.09it/s] 17%|████████████▊                                                              | 89627/524288 [00:01<00:09, 45175.69it/s] 18%|█████████████▍                                                             | 94151/524288 [00:02<00:09, 45187.21it/s] 19%|██████████████▏                                                            | 98801/524288 [00:02<00:09, 45578.47it/s] 20%|██████████████▌                                                           | 103444/524288 [00:02<00:09, 45831.97it/s] 21%|███████████████▎                                                          | 108233/524288 [00:02<00:08, 46444.41it/s] 22%|███████████████▉                                                          | 112979/524288 [00:02<00:08, 46747.02it/s] 22%|████████████████▌                                                         | 117655/524288 [00:02<00:08, 46694.22it/s] 23%|█████████████████▎                                                        | 122325/524288 [00:02<00:08, 46672.84it/s] 24%|█████████████████▉                                                        | 127020/524288 [00:02<00:08, 46753.90it/s] 25%|██████████████████▌                                                       | 131730/524288 [00:02<00:08, 46855.98it/s] 26%|███████████████████▎                                                      | 136418/524288 [00:02<00:08, 46860.21it/s] 27%|███████████████████▉                                                      | 141105/524288 [00:03<00:08, 46830.72it/s] 28%|████████████████████▌                                                     | 145789/524288 [00:03<00:08, 46635.60it/s] 29%|█████████████████████▏                                                    | 150528/524288 [00:03<00:07, 46860.38it/s] 30%|█████████████████████▉                                                    | 155289/524288 [00:03<00:07, 47081.99it/s] 31%|██████████████████████▌                                                   | 159998/524288 [00:03<00:07, 46903.54it/s] 31%|███████████████████████▏                                                  | 164701/524288 [00:03<00:07, 46938.83it/s] 32%|███████████████████████▉                                                  | 169428/524288 [00:03<00:07, 47036.34it/s] 33%|████████████████████████▌                                                 | 174224/524288 [00:03<00:07, 47312.22it/s] 34%|█████████████████████████▎                                                | 178972/524288 [00:03<00:07, 47361.86it/s] 35%|█████████████████████████▉                                                | 183709/524288 [00:03<00:07, 47205.20it/s] 36%|██████████████████████████▌                                               | 188430/524288 [00:04<00:07, 47204.30it/s] 37%|███████████████████████████▎                                              | 193160/524288 [00:04<00:07, 47229.59it/s] 38%|███████████████████████████▉                                              | 197884/524288 [00:04<00:06, 47198.98it/s] 39%|████████████████████████████▌                                             | 202604/524288 [00:04<00:06, 47092.69it/s] 40%|█████████████████████████████▎                                            | 207314/524288 [00:04<00:06, 46889.79it/s] 40%|█████████████████████████████▉                                            | 212004/524288 [00:04<00:06, 46701.04it/s] 41%|██████████████████████████████▌                                           | 216736/524288 [00:04<00:06, 46884.23it/s] 42%|███████████████████████████████▎                                          | 221506/524288 [00:04<00:06, 47126.78it/s] 43%|███████████████████████████████▉                                          | 226256/524288 [00:04<00:06, 47237.06it/s] 44%|████████████████████████████████▌                                         | 230993/524288 [00:04<00:06, 47274.27it/s] 45%|█████████████████████████████████▎                                        | 235721/524288 [00:05<00:06, 47012.79it/s] 46%|█████████████████████████████████▉                                        | 240430/524288 [00:05<00:06, 47033.77it/s] 47%|██████████████████████████████████▌                                       | 245220/524288 [00:05<00:05, 47292.03it/s] 48%|███████████████████████████████████▎                                      | 249950/524288 [00:05<00:05, 47208.37it/s] 49%|███████████████████████████████████▉                                      | 254672/524288 [00:05<00:05, 47082.70it/s] 49%|████████████████████████████████████▌                                     | 259381/524288 [00:05<00:05, 46837.02it/s] 50%|█████████████████████████████████████▎                                    | 264066/524288 [00:05<00:05, 46568.53it/s] 51%|█████████████████████████████████████▉                                    | 268817/524288 [00:05<00:05, 46846.55it/s] 52%|██████████████████████████████████████▌                                   | 273503/524288 [00:05<00:05, 46778.15it/s] 53%|███████████████████████████████████████▎                                  | 278182/524288 [00:05<00:05, 46682.69it/s] 54%|███████████████████████████████████████▉                                  | 282851/524288 [00:06<00:05, 46612.98it/s] 55%|████████████████████████████████████████▌                                 | 287516/524288 [00:06<00:05, 46622.52it/s] 56%|█████████████████████████████████████████▏                                | 292242/524288 [00:06<00:04, 46810.67it/s] 57%|█████████████████████████████████████████▉                                | 296952/524288 [00:06<00:04, 46894.93it/s] 58%|██████████████████████████████████████████▌                               | 301642/524288 [00:06<00:04, 46881.03it/s] 58%|███████████████████████████████████████████▏                              | 306331/524288 [00:06<00:04, 46853.51it/s] 59%|███████████████████████████████████████████▉                              | 311132/524288 [00:06<00:04, 47198.69it/s] 60%|████████████████████████████████████████████▌                             | 315852/524288 [00:06<00:04, 47185.64it/s] 61%|█████████████████████████████████████████████▏                            | 320571/524288 [00:06<00:04, 47046.84it/s] 62%|█████████████████████████████████████████████▉                            | 325277/524288 [00:06<00:04, 47047.67it/s] 63%|██████████████████████████████████████████████▌                           | 330044/524288 [00:07<00:04, 47230.54it/s] 64%|███████████████████████████████████████████████▎                          | 334855/524288 [00:07<00:03, 47491.14it/s] 65%|███████████████████████████████████████████████▉                          | 339605/524288 [00:07<00:03, 47154.12it/s] 66%|████████████████████████████████████████████████▌                         | 344322/524288 [00:07<00:03, 47042.68it/s] 67%|█████████████████████████████████████████████████▎                        | 349027/524288 [00:07<00:03, 46997.89it/s] 67%|█████████████████████████████████████████████████▉                        | 353734/524288 [00:07<00:03, 47017.49it/s] 68%|██████████████████████████████████████████████████▌                       | 358463/524288 [00:07<00:03, 47096.63it/s] 69%|███████████████████████████████████████████████████▎                      | 363173/524288 [00:07<00:03, 47051.83it/s] 70%|███████████████████████████████████████████████████▉                      | 367879/524288 [00:07<00:03, 47038.24it/s] 71%|████████████████████████████████████████████████████▌                     | 372591/524288 [00:07<00:03, 47061.29it/s] 72%|█████████████████████████████████████████████████████▎                    | 377368/524288 [00:08<00:03, 47272.32it/s] 73%|█████████████████████████████████████████████████████▉                    | 382110/524288 [00:08<00:03, 47314.02it/s] 74%|██████████████████████████████████████████████████████▌                   | 386842/524288 [00:08<00:02, 47286.73it/s] 75%|███████████████████████████████████████████████████████▎                  | 391571/524288 [00:08<00:02, 47244.68it/s] 76%|███████████████████████████████████████████████████████▉                  | 396296/524288 [00:08<00:02, 47190.63it/s] 76%|████████████████████████████████████████████████████████▌                 | 401020/524288 [00:08<00:02, 47203.27it/s] 77%|█████████████████████████████████████████████████████████▎                | 405763/524288 [00:08<00:02, 47268.32it/s] 78%|█████████████████████████████████████████████████████████▉                | 410505/524288 [00:08<00:02, 47310.38it/s] 79%|██████████████████████████████████████████████████████████▌               | 415237/524288 [00:08<00:02, 47211.67it/s] 80%|███████████████████████████████████████████████████████████▎              | 419959/524288 [00:08<00:02, 47060.59it/s] 81%|███████████████████████████████████████████████████████████▉              | 424688/524288 [00:09<00:02, 47127.80it/s] 82%|████████████████████████████████████████████████████████████▌             | 429401/524288 [00:09<00:02, 47052.20it/s] 83%|█████████████████████████████████████████████████████████████▎            | 434107/524288 [00:09<00:01, 46619.25it/s] 84%|█████████████████████████████████████████████████████████████▉            | 438794/524288 [00:09<00:01, 46690.57it/s] 85%|██████████████████████████████████████████████████████████████▌           | 443503/524288 [00:09<00:01, 46807.46it/s] 85%|███████████████████████████████████████████████████████████████▎          | 448246/524288 [00:09<00:01, 46991.16it/s] 86%|███████████████████████████████████████████████████████████████▉          | 452963/524288 [00:09<00:01, 47043.29it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457668/524288 [00:09<00:01, 46907.24it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 462360/524288 [00:09<00:01, 46869.48it/s] 89%|█████████████████████████████████████████████████████████████████▉        | 467048/524288 [00:09<00:01, 46753.50it/s] 90%|██████████████████████████████████████████████████████████████████▌       | 471744/524288 [00:10<00:01, 46812.51it/s] 91%|███████████████████████████████████████████████████████████████████▏      | 476435/524288 [00:10<00:01, 46838.08it/s] 92%|███████████████████████████████████████████████████████████████████▉      | 481119/524288 [00:10<00:00, 46732.46it/s] 93%|████████████████████████████████████████████████████████████████████▌     | 485851/524288 [00:10<00:00, 46906.67it/s] 94%|█████████████████████████████████████████████████████████████████████▏    | 490542/524288 [00:10<00:00, 46856.18it/s] 94%|█████████████████████████████████████████████████████████████████████▉    | 495234/524288 [00:10<00:00, 46872.55it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 499922/524288 [00:10<00:00, 46758.33it/s] 96%|███████████████████████████████████████████████████████████████████████▏  | 504598/524288 [00:10<00:00, 46712.37it/s] 97%|███████████████████████████████████████████████████████████████████████▉  | 509284/524288 [00:10<00:00, 46755.62it/s] 98%|████████████████████████████████████████████████████████████████████████▌ | 513985/524288 [00:10<00:00, 46829.09it/s] 99%|█████████████████████████████████████████████████████████████████████████▏| 518754/524288 [00:11<00:00, 47083.86it/s]100%|█████████████████████████████████████████████████████████████████████████▉| 523471/524288 [00:11<00:00, 47107.60it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:11<00:00, 46471.97it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.66s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.68s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.97s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:08,  2.14s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:10,  2.37s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:13,  2.56s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:16,  2.72s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:19,  2.83s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:22,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:25,  2.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:28,  2.86s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:31,  2.91s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:34,  2.91s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:37,  2.91s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:40,  2.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:43,  3.10s/it]16it [00:43,  2.74s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:03,  3.96it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:05,  2.59it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:07,  1.82it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:08,  1.48it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:09,  1.22it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:09,  1.09it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:08,  1.01it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:08,  1.05s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:08<00:07,  1.11s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:06,  1.15s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:10<00:05,  1.19s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:11<00:04,  1.22s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:13<00:03,  1.26s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:14<00:02,  1.28s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:15<00:01,  1.30s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.31s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:17<00:00,  1.08s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4772/524288 [00:00<00:10, 47716.75it/s]  2%|█▍                                                                          | 9605/524288 [00:00<00:10, 48071.97it/s]  3%|██                                                                         | 14413/524288 [00:00<00:10, 47826.69it/s]  4%|██▋                                                                        | 19196/524288 [00:00<00:10, 47703.90it/s]  5%|███▍                                                                       | 23967/524288 [00:00<00:10, 47356.08it/s]  5%|████                                                                       | 28716/524288 [00:00<00:10, 47398.43it/s]  6%|████▊                                                                      | 33457/524288 [00:00<00:10, 47285.99it/s]  7%|█████▍                                                                     | 38186/524288 [00:00<00:10, 47226.72it/s]  8%|██████▏                                                                    | 42909/524288 [00:00<00:10, 47217.10it/s]  9%|██████▊                                                                    | 47631/524288 [00:01<00:10, 47207.69it/s] 10%|███████▍                                                                   | 52352/524288 [00:01<00:10, 46818.64it/s] 11%|████████▏                                                                  | 57035/524288 [00:01<00:10, 46458.25it/s] 12%|████████▊                                                                  | 61682/524288 [00:01<00:10, 46059.53it/s] 13%|█████████▍                                                                 | 66289/524288 [00:01<00:09, 46044.02it/s] 14%|██████████▏                                                                | 70940/524288 [00:01<00:09, 46182.08it/s] 14%|██████████▊                                                                | 75665/524288 [00:01<00:09, 46498.99it/s] 15%|███████████▍                                                               | 80316/524288 [00:01<00:09, 46395.05it/s] 16%|████████████▏                                                              | 84998/524288 [00:01<00:09, 46520.23it/s] 17%|████████████▊                                                              | 89741/524288 [00:01<00:09, 46791.49it/s] 18%|█████████████▌                                                             | 94565/524288 [00:02<00:09, 47221.21it/s] 19%|██████████████▏                                                            | 99288/524288 [00:02<00:09, 47221.83it/s] 20%|██████████████▋                                                           | 104011/524288 [00:02<00:08, 47207.83it/s] 21%|███████████████▎                                                          | 108741/524288 [00:02<00:08, 47233.01it/s] 22%|████████████████                                                          | 113465/524288 [00:02<00:08, 47227.99it/s] 23%|████████████████▋                                                         | 118188/524288 [00:02<00:08, 46786.03it/s] 23%|█████████████████▎                                                        | 122868/524288 [00:02<00:08, 46549.77it/s] 24%|█████████████████▉                                                        | 127524/524288 [00:02<00:08, 46268.83it/s] 25%|██████████████████▋                                                       | 132152/524288 [00:02<00:08, 46260.27it/s] 26%|███████████████████▎                                                      | 136779/524288 [00:02<00:08, 45950.76it/s] 27%|███████████████████▉                                                      | 141376/524288 [00:03<00:08, 45954.41it/s] 28%|████████████████████▌                                                     | 145972/524288 [00:03<00:08, 45872.22it/s] 29%|█████████████████████▎                                                    | 150560/524288 [00:03<00:08, 45852.94it/s] 30%|█████████████████████▉                                                    | 155146/524288 [00:03<00:08, 45760.10it/s] 30%|██████████████████████▌                                                   | 159780/524288 [00:03<00:07, 45932.05it/s] 31%|███████████████████████▏                                                  | 164387/524288 [00:03<00:07, 45971.84it/s] 32%|███████████████████████▊                                                  | 169016/524288 [00:03<00:07, 46066.22it/s] 33%|████████████████████████▌                                                 | 173623/524288 [00:03<00:07, 46020.93it/s] 34%|█████████████████████████▏                                                | 178243/524288 [00:03<00:07, 46073.22it/s] 35%|█████████████████████████▊                                                | 182851/524288 [00:03<00:07, 46074.24it/s] 36%|██████████████████████████▍                                               | 187518/524288 [00:04<00:07, 46251.13it/s] 37%|███████████████████████████                                               | 192144/524288 [00:04<00:07, 46061.01it/s] 38%|███████████████████████████▊                                              | 196799/524288 [00:04<00:07, 46204.12it/s] 38%|████████████████████████████▍                                             | 201420/524288 [00:04<00:07, 46056.54it/s] 39%|█████████████████████████████                                             | 206027/524288 [00:04<00:06, 46057.32it/s] 40%|█████████████████████████████▋                                            | 210633/524288 [00:04<00:06, 45915.65it/s] 41%|██████████████████████████████▍                                           | 215225/524288 [00:04<00:06, 45543.74it/s] 42%|███████████████████████████████                                           | 219819/524288 [00:04<00:06, 45658.46it/s] 43%|███████████████████████████████▋                                          | 224420/524288 [00:04<00:06, 45760.43it/s] 44%|████████████████████████████████▎                                         | 228997/524288 [00:04<00:06, 45650.39it/s] 45%|████████████████████████████████▉                                         | 233582/524288 [00:05<00:06, 45707.76it/s] 45%|█████████████████████████████████▌                                        | 238154/524288 [00:05<00:06, 45634.40it/s] 46%|██████████████████████████████████▎                                       | 242738/524288 [00:05<00:06, 45694.38it/s] 47%|██████████████████████████████████▉                                       | 247308/524288 [00:05<00:06, 45564.77it/s] 48%|███████████████████████████████████▌                                      | 251894/524288 [00:05<00:05, 45651.59it/s] 49%|████████████████████████████████████▏                                     | 256460/524288 [00:05<00:05, 45568.24it/s] 50%|████████████████████████████████████▊                                     | 261053/524288 [00:05<00:05, 45673.40it/s] 51%|█████████████████████████████████████▍                                    | 265621/524288 [00:05<00:05, 45574.54it/s] 52%|██████████████████████████████████████▏                                   | 270179/524288 [00:05<00:05, 45547.02it/s] 52%|██████████████████████████████████████▊                                   | 274737/524288 [00:05<00:05, 45553.98it/s] 53%|███████████████████████████████████████▍                                  | 279306/524288 [00:06<00:05, 45593.87it/s] 54%|████████████████████████████████████████                                  | 283866/524288 [00:06<00:05, 45563.99it/s] 55%|████████████████████████████████████████▋                                 | 288459/524288 [00:06<00:05, 45671.10it/s] 56%|█████████████████████████████████████████▎                                | 293027/524288 [00:06<00:05, 45484.77it/s] 57%|██████████████████████████████████████████                                | 297602/524288 [00:06<00:04, 45561.20it/s] 58%|██████████████████████████████████████████▋                               | 302159/524288 [00:06<00:04, 45419.88it/s] 59%|███████████████████████████████████████████▎                              | 306741/524288 [00:06<00:04, 45537.50it/s] 59%|███████████████████████████████████████████▉                              | 311295/524288 [00:06<00:04, 45467.67it/s] 60%|████████████████████████████████████████████▌                             | 315913/524288 [00:06<00:04, 45679.97it/s] 61%|█████████████████████████████████████████████▏                            | 320482/524288 [00:06<00:04, 44269.14it/s] 62%|█████████████████████████████████████████████▉                            | 325190/524288 [00:07<00:04, 45091.85it/s] 63%|██████████████████████████████████████████████▌                           | 329880/524288 [00:07<00:04, 45622.70it/s] 64%|███████████████████████████████████████████████▏                          | 334586/524288 [00:07<00:04, 46047.59it/s] 65%|███████████████████████████████████████████████▉                          | 339260/524288 [00:07<00:04, 46250.27it/s] 66%|████████████████████████████████████████████████▌                         | 343889/524288 [00:07<00:03, 46138.97it/s] 66%|█████████████████████████████████████████████████▏                        | 348506/524288 [00:07<00:03, 45926.61it/s] 67%|█████████████████████████████████████████████████▊                        | 353109/524288 [00:07<00:03, 45955.48it/s] 68%|██████████████████████████████████████████████████▍                       | 357706/524288 [00:07<00:03, 45613.62it/s] 69%|███████████████████████████████████████████████████▏                      | 362341/524288 [00:07<00:03, 45831.78it/s] 70%|███████████████████████████████████████████████████▊                      | 366926/524288 [00:07<00:03, 45742.20it/s] 71%|████████████████████████████████████████████████████▍                     | 371561/524288 [00:08<00:03, 45921.19it/s] 72%|█████████████████████████████████████████████████████                     | 376154/524288 [00:08<00:03, 45763.33it/s] 73%|█████████████████████████████████████████████████████▋                    | 380757/524288 [00:08<00:03, 45839.75it/s] 73%|██████████████████████████████████████████████████████▍                   | 385342/524288 [00:08<00:03, 45770.04it/s] 74%|███████████████████████████████████████████████████████                   | 389920/524288 [00:08<00:02, 45765.63it/s] 75%|███████████████████████████████████████████████████████▋                  | 394497/524288 [00:08<00:02, 45737.13it/s] 76%|████████████████████████████████████████████████████████▎                 | 399094/524288 [00:08<00:02, 45805.30it/s] 77%|████████████████████████████████████████████████████████▉                 | 403675/524288 [00:08<00:02, 45671.32it/s] 78%|█████████████████████████████████████████████████████████▋                | 408288/524288 [00:08<00:02, 45805.68it/s] 79%|██████████████████████████████████████████████████████████▎               | 412869/524288 [00:08<00:02, 45609.69it/s] 80%|██████████████████████████████████████████████████████████▉               | 417431/524288 [00:09<00:02, 45562.96it/s] 80%|███████████████████████████████████████████████████████████▌              | 421988/524288 [00:09<00:02, 45396.52it/s] 81%|████████████████████████████████████████████████████████████▏             | 426528/524288 [00:09<00:02, 45371.56it/s] 82%|████████████████████████████████████████████████████████████▊             | 431066/524288 [00:09<00:02, 45338.18it/s] 83%|█████████████████████████████████████████████████████████████▍            | 435629/524288 [00:09<00:01, 45424.14it/s] 84%|██████████████████████████████████████████████████████████████▏           | 440177/524288 [00:09<00:01, 45437.63it/s] 85%|██████████████████████████████████████████████████████████████▊           | 444726/524288 [00:09<00:01, 45451.15it/s] 86%|███████████████████████████████████████████████████████████████▍          | 449279/524288 [00:09<00:01, 45473.52it/s] 87%|████████████████████████████████████████████████████████████████          | 453844/524288 [00:09<00:01, 45525.45it/s] 87%|████████████████████████████████████████████████████████████████▋         | 458397/524288 [00:09<00:01, 45518.73it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 462949/524288 [00:10<00:01, 45354.33it/s] 89%|█████████████████████████████████████████████████████████████████▉        | 467485/524288 [00:10<00:01, 45043.96it/s] 90%|██████████████████████████████████████████████████████████████████▌       | 471990/524288 [00:10<00:01, 45015.78it/s] 91%|███████████████████████████████████████████████████████████████████▎      | 476492/524288 [00:10<00:01, 44956.41it/s] 92%|███████████████████████████████████████████████████████████████████▉      | 480988/524288 [00:10<00:00, 44913.69it/s] 93%|████████████████████████████████████████████████████████████████████▌     | 485480/524288 [00:10<00:00, 44689.56it/s] 93%|█████████████████████████████████████████████████████████████████████▏    | 489950/524288 [00:10<00:00, 44652.95it/s] 94%|█████████████████████████████████████████████████████████████████████▊    | 494424/524288 [00:10<00:00, 44676.75it/s] 95%|██████████████████████████████████████████████████████████████████████▍   | 498947/524288 [00:10<00:00, 44839.21it/s] 96%|███████████████████████████████████████████████████████████████████████   | 503432/524288 [00:10<00:00, 44762.90it/s] 97%|███████████████████████████████████████████████████████████████████████▋  | 507978/524288 [00:11<00:00, 44970.10it/s] 98%|████████████████████████████████████████████████████████████████████████▎ | 512476/524288 [00:11<00:00, 44969.13it/s] 99%|████████████████████████████████████████████████████████████████████████▉ | 517014/524288 [00:11<00:00, 45090.28it/s] 99%|█████████████████████████████████████████████████████████████████████████▌| 521524/524288 [00:11<00:00, 44876.37it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:11<00:00, 45537.51it/s]
