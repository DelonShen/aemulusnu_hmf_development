
CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
To initialize your shell, run

    $ conda init <SHELL_NAME>

Currently supported shells are:
  - bash
  - fish
  - tcsh
  - xonsh
  - zsh
  - powershell

See 'conda init --help' for more information and options.

IMPORTANT: You may need to close and restart your shell after running 'conda init'.


0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.77s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.61s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.78s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  1.95s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:10,  2.17s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:12,  2.35s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:15,  2.47s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:18,  2.59s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:21,  2.74s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:24,  2.81s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:27,  2.87s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:30,  2.94s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:33,  2.95s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:36,  2.96s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:39,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:42,  3.03s/it]16it [00:42,  2.66s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:02,  5.51it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:04,  3.41it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:05,  2.26it/s] 25%|█████████████████████▌                                                                | 4/16 [00:01<00:06,  1.78it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:07,  1.40it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:03<00:08,  1.21it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:08,  1.08it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:07,  1.01it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:07<00:07,  1.06s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:08<00:06,  1.11s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:09<00:05,  1.16s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:11<00:04,  1.20s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:12<00:03,  1.25s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:13<00:02,  1.28s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:15<00:01,  1.31s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.33s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.04s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▊                                                                           | 5344/524288 [00:00<00:09, 53428.59it/s]  2%|█▌                                                                         | 10704/524288 [00:00<00:09, 53527.41it/s]  3%|██▎                                                                        | 16057/524288 [00:00<00:09, 52767.33it/s]  4%|███                                                                        | 21335/524288 [00:00<00:09, 52246.36it/s]  5%|███▊                                                                       | 26561/524288 [00:00<00:09, 51861.31it/s]  6%|████▌                                                                      | 31748/524288 [00:00<00:09, 51347.50it/s]  7%|█████▎                                                                     | 36884/524288 [00:00<00:09, 51048.27it/s]  8%|██████                                                                     | 41990/524288 [00:00<00:09, 50908.49it/s]  9%|██████▋                                                                    | 47082/524288 [00:00<00:09, 50811.14it/s] 10%|███████▍                                                                   | 52164/524288 [00:01<00:09, 50570.06it/s] 11%|████████▏                                                                  | 57222/524288 [00:01<00:09, 50529.54it/s] 12%|████████▉                                                                  | 62275/524288 [00:01<00:09, 50496.26it/s] 13%|█████████▋                                                                 | 67325/524288 [00:01<00:09, 50418.80it/s] 14%|██████████▎                                                                | 72367/524288 [00:01<00:08, 50372.80it/s] 15%|███████████                                                                | 77446/524288 [00:01<00:08, 50494.57it/s] 16%|███████████▊                                                               | 82521/524288 [00:01<00:08, 50568.27it/s] 17%|████████████▌                                                              | 87578/524288 [00:01<00:08, 50473.30it/s] 18%|█████████████▎                                                             | 92626/524288 [00:01<00:08, 50041.32it/s] 19%|█████████████▉                                                             | 97680/524288 [00:01<00:08, 50188.38it/s] 20%|██████████████▌                                                           | 102770/524288 [00:02<00:08, 50397.44it/s] 21%|███████████████▏                                                          | 107871/524288 [00:02<00:08, 50577.99it/s] 22%|███████████████▉                                                          | 112930/524288 [00:02<00:08, 50568.00it/s] 23%|████████████████▋                                                         | 117988/524288 [00:02<00:08, 50540.14it/s] 23%|█████████████████▎                                                        | 123043/524288 [00:02<00:07, 50534.85it/s] 24%|██████████████████                                                        | 128152/524288 [00:02<00:07, 50699.19it/s] 25%|██████████████████▊                                                       | 133234/524288 [00:02<00:07, 50734.00it/s] 26%|███████████████████▌                                                      | 138308/524288 [00:02<00:07, 50677.10it/s] 27%|████████████████████▏                                                     | 143376/524288 [00:02<00:07, 50582.95it/s] 28%|████████████████████▉                                                     | 148435/524288 [00:02<00:07, 50487.47it/s] 29%|█████████████████████▋                                                    | 153503/524288 [00:03<00:07, 50544.46it/s] 30%|██████████████████████▍                                                   | 158558/524288 [00:03<00:07, 50505.51it/s] 31%|███████████████████████                                                   | 163609/524288 [00:03<00:07, 50487.30it/s] 32%|███████████████████████▊                                                  | 168658/524288 [00:03<00:07, 50453.53it/s] 33%|████████████████████████▌                                                 | 173704/524288 [00:03<00:06, 50391.40it/s] 34%|█████████████████████████▏                                                | 178758/524288 [00:03<00:06, 50434.50it/s] 35%|█████████████████████████▉                                                | 183802/524288 [00:03<00:06, 50314.52it/s] 36%|██████████████████████████▋                                               | 188834/524288 [00:03<00:06, 50259.39it/s] 37%|███████████████████████████▎                                              | 193860/524288 [00:03<00:06, 50241.74it/s] 38%|████████████████████████████                                              | 198897/524288 [00:03<00:06, 50278.50it/s] 39%|████████████████████████████▊                                             | 203944/524288 [00:04<00:06, 50332.60it/s] 40%|█████████████████████████████▍                                            | 208980/524288 [00:04<00:06, 50338.27it/s] 41%|██████████████████████████████▏                                           | 214021/524288 [00:04<00:06, 50358.31it/s] 42%|██████████████████████████████▉                                           | 219057/524288 [00:04<00:06, 50338.43it/s] 43%|███████████████████████████████▋                                          | 224091/524288 [00:04<00:05, 50249.99it/s] 44%|████████████████████████████████▎                                         | 229117/524288 [00:04<00:05, 50219.11it/s] 45%|█████████████████████████████████                                         | 234139/524288 [00:04<00:05, 50211.65it/s] 46%|█████████████████████████████████▊                                        | 239161/524288 [00:04<00:05, 50117.79it/s] 47%|██████████████████████████████████▍                                       | 244173/524288 [00:04<00:05, 50056.74it/s] 48%|███████████████████████████████████▏                                      | 249189/524288 [00:04<00:05, 50084.22it/s] 48%|███████████████████████████████████▉                                      | 254214/524288 [00:05<00:05, 50131.16it/s] 49%|████████████████████████████████████▌                                     | 259256/524288 [00:05<00:05, 50215.28it/s] 50%|█████████████████████████████████████▎                                    | 264278/524288 [00:05<00:05, 50210.25it/s] 51%|██████████████████████████████████████                                    | 269300/524288 [00:05<00:05, 50191.41it/s] 52%|██████████████████████████████████████▋                                   | 274324/524288 [00:05<00:04, 50203.05it/s] 53%|███████████████████████████████████████▍                                  | 279358/524288 [00:05<00:04, 50242.11it/s] 54%|████████████████████████████████████████▏                                 | 284400/524288 [00:05<00:04, 50294.14it/s] 55%|████████████████████████████████████████▊                                 | 289430/524288 [00:05<00:04, 50213.48it/s] 56%|█████████████████████████████████████████▌                                | 294492/524288 [00:05<00:04, 50331.94it/s] 57%|██████████████████████████████████████████▎                               | 299551/524288 [00:05<00:04, 50407.17it/s] 58%|██████████████████████████████████████████▉                               | 304596/524288 [00:06<00:04, 50419.23it/s] 59%|███████████████████████████████████████████▋                              | 309638/524288 [00:06<00:04, 50365.21it/s] 60%|████████████████████████████████████████████▍                             | 314675/524288 [00:06<00:04, 50292.43it/s] 61%|█████████████████████████████████████████████                             | 319705/524288 [00:06<00:04, 50217.41it/s] 62%|█████████████████████████████████████████████▊                            | 324731/524288 [00:06<00:03, 50229.46it/s] 63%|██████████████████████████████████████████████▌                           | 329754/524288 [00:06<00:03, 50200.81it/s] 64%|███████████████████████████████████████████████▎                          | 334775/524288 [00:06<00:03, 50150.18it/s] 65%|███████████████████████████████████████████████▉                          | 339796/524288 [00:06<00:03, 50166.89it/s] 66%|████████████████████████████████████████████████▋                         | 344817/524288 [00:06<00:03, 50176.63it/s] 67%|█████████████████████████████████████████████████▍                        | 349835/524288 [00:06<00:03, 50166.11it/s] 68%|██████████████████████████████████████████████████                        | 354853/524288 [00:07<00:03, 50166.95it/s] 69%|██████████████████████████████████████████████████▊                       | 359870/524288 [00:07<00:03, 50081.32it/s] 70%|███████████████████████████████████████████████████▌                      | 364879/524288 [00:07<00:03, 50070.10it/s] 71%|████████████████████████████████████████████████████▏                     | 369913/524288 [00:07<00:03, 50149.15it/s] 72%|████████████████████████████████████████████████████▉                     | 374950/524288 [00:07<00:02, 50212.70it/s] 72%|█████████████████████████████████████████████████████▋                    | 379985/524288 [00:07<00:02, 50250.68it/s] 73%|██████████████████████████████████████████████████████▎                   | 385011/524288 [00:07<00:02, 50241.13it/s] 74%|███████████████████████████████████████████████████████                   | 390047/524288 [00:07<00:02, 50273.62it/s] 75%|███████████████████████████████████████████████████████▊                  | 395075/524288 [00:07<00:02, 50250.22it/s] 76%|████████████████████████████████████████████████████████▍                 | 400101/524288 [00:07<00:02, 50189.38it/s] 77%|█████████████████████████████████████████████████████████▏                | 405120/524288 [00:08<00:02, 50099.97it/s] 78%|█████████████████████████████████████████████████████████▉                | 410135/524288 [00:08<00:02, 50111.53it/s] 79%|██████████████████████████████████████████████████████████▌               | 415147/524288 [00:08<00:02, 49918.94it/s] 80%|███████████████████████████████████████████████████████████▎              | 420162/524288 [00:08<00:02, 49984.87it/s] 81%|████████████████████████████████████████████████████████████              | 425164/524288 [00:08<00:01, 49992.87it/s] 82%|████████████████████████████████████████████████████████████▋             | 430165/524288 [00:08<00:01, 49997.37it/s] 83%|█████████████████████████████████████████████████████████████▍            | 435167/524288 [00:08<00:01, 50000.63it/s] 84%|██████████████████████████████████████████████████████████████▏           | 440179/524288 [00:08<00:01, 50034.34it/s] 85%|██████████████████████████████████████████████████████████████▊           | 445192/524288 [00:08<00:01, 50062.35it/s] 86%|███████████████████████████████████████████████████████████████▌          | 450201/524288 [00:08<00:01, 50068.80it/s] 87%|████████████████████████████████████████████████████████████████▎         | 455216/524288 [00:09<00:01, 50091.98it/s] 88%|████████████████████████████████████████████████████████████████▉         | 460226/524288 [00:09<00:01, 50057.68it/s] 89%|█████████████████████████████████████████████████████████████████▋        | 465232/524288 [00:09<00:01, 49974.34it/s] 90%|██████████████████████████████████████████████████████████████████▎       | 470245/524288 [00:09<00:01, 50018.37it/s] 91%|███████████████████████████████████████████████████████████████████       | 475247/524288 [00:09<00:00, 49757.61it/s] 92%|███████████████████████████████████████████████████████████████████▊      | 480261/524288 [00:09<00:00, 49870.72it/s] 93%|████████████████████████████████████████████████████████████████████▍     | 485268/524288 [00:09<00:00, 49928.05it/s] 94%|█████████████████████████████████████████████████████████████████████▏    | 490269/524288 [00:09<00:00, 49949.78it/s] 94%|█████████████████████████████████████████████████████████████████████▉    | 495265/524288 [00:09<00:00, 46175.81it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 500329/524288 [00:09<00:00, 47439.57it/s] 96%|███████████████████████████████████████████████████████████████████████▎  | 505430/524288 [00:10<00:00, 48465.30it/s] 97%|████████████████████████████████████████████████████████████████████████  | 510530/524288 [00:10<00:00, 49203.33it/s] 98%|████████████████████████████████████████████████████████████████████████▊ | 515612/524288 [00:10<00:00, 49677.31it/s] 99%|█████████████████████████████████████████████████████████████████████████▍| 520666/524288 [00:10<00:00, 49931.37it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:10<00:00, 49791.49it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.90s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.64s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.76s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  1.96s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:10,  2.18s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:12,  2.36s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:15,  2.46s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:18,  2.57s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:21,  2.68s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:23,  2.71s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:26,  2.79s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:30,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:33,  2.93s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:36,  2.96s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:39,  3.00s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:42,  3.07s/it]16it [00:42,  2.65s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:02,  5.86it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:03,  3.62it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:05,  2.38it/s] 25%|█████████████████████▌                                                                | 4/16 [00:01<00:06,  1.84it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:07,  1.44it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:03<00:08,  1.24it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:04<00:08,  1.12it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:05<00:07,  1.05it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:07<00:07,  1.01s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:08<00:06,  1.08s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:09<00:05,  1.12s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:10<00:04,  1.17s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:12<00:03,  1.22s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:13<00:02,  1.27s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:14<00:01,  1.30s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.33s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.02s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 5004/524288 [00:00<00:10, 50029.19it/s]  2%|█▍                                                                         | 10159/524288 [00:00<00:10, 50917.17it/s]  3%|██▏                                                                        | 15320/524288 [00:00<00:09, 51230.50it/s]  4%|██▉                                                                        | 20444/524288 [00:00<00:09, 51038.72it/s]  5%|███▋                                                                       | 25548/524288 [00:00<00:09, 50602.71it/s]  6%|████▍                                                                      | 30609/524288 [00:00<00:09, 50499.70it/s]  7%|█████                                                                      | 35660/524288 [00:00<00:09, 50502.04it/s]  8%|█████▊                                                                     | 40718/524288 [00:00<00:09, 50523.98it/s]  9%|██████▌                                                                    | 45771/524288 [00:00<00:09, 50464.41it/s] 10%|███████▎                                                                   | 50818/524288 [00:01<00:09, 50356.39it/s] 11%|███████▉                                                                   | 55883/524288 [00:01<00:09, 50444.95it/s] 12%|████████▋                                                                  | 60937/524288 [00:01<00:09, 50472.02it/s] 13%|█████████▍                                                                 | 65985/524288 [00:01<00:09, 50347.73it/s] 14%|██████████▏                                                                | 71020/524288 [00:01<00:09, 50142.74it/s] 15%|██████████▉                                                                | 76035/524288 [00:01<00:09, 49592.01it/s] 15%|███████████▌                                                               | 81011/524288 [00:01<00:08, 49638.78it/s] 16%|████████████▎                                                              | 85992/524288 [00:01<00:08, 49686.84it/s] 17%|█████████████                                                              | 90962/524288 [00:01<00:08, 49623.65it/s] 18%|█████████████▋                                                             | 95925/524288 [00:01<00:08, 49441.37it/s] 19%|██████████████▏                                                           | 100870/524288 [00:02<00:08, 49313.18it/s] 20%|██████████████▉                                                           | 105849/524288 [00:02<00:08, 49452.05it/s] 21%|███████████████▋                                                          | 110842/524288 [00:02<00:08, 49592.06it/s] 22%|████████████████▎                                                         | 115819/524288 [00:02<00:08, 49644.00it/s] 23%|█████████████████                                                         | 120801/524288 [00:02<00:08, 49694.83it/s] 24%|█████████████████▊                                                        | 125815/524288 [00:02<00:07, 49826.54it/s] 25%|██████████████████▍                                                       | 130819/524288 [00:02<00:07, 49888.39it/s] 26%|███████████████████▏                                                      | 135838/524288 [00:02<00:07, 49977.57it/s] 27%|███████████████████▉                                                      | 140882/524288 [00:02<00:07, 50114.73it/s] 28%|████████████████████▌                                                     | 145894/524288 [00:02<00:07, 50026.84it/s] 29%|█████████████████████▎                                                    | 150897/524288 [00:03<00:07, 49691.94it/s] 30%|██████████████████████                                                    | 155878/524288 [00:03<00:07, 49723.95it/s] 31%|██████████████████████▋                                                   | 160851/524288 [00:03<00:07, 49643.23it/s] 32%|███████████████████████▍                                                  | 165816/524288 [00:03<00:07, 49633.88it/s] 33%|████████████████████████                                                  | 170780/524288 [00:03<00:07, 49603.57it/s] 34%|████████████████████████▊                                                 | 175754/524288 [00:03<00:07, 49641.40it/s] 34%|█████████████████████████▌                                                | 180719/524288 [00:03<00:06, 49458.54it/s] 35%|██████████████████████████▏                                               | 185761/524288 [00:03<00:06, 49744.31it/s] 36%|██████████████████████████▉                                               | 190748/524288 [00:03<00:06, 49778.52it/s] 37%|███████████████████████████▋                                              | 195727/524288 [00:03<00:06, 49709.72it/s] 38%|████████████████████████████▎                                             | 200708/524288 [00:04<00:06, 49738.36it/s] 39%|█████████████████████████████                                             | 205682/524288 [00:04<00:06, 49729.95it/s] 40%|█████████████████████████████▋                                            | 210656/524288 [00:04<00:06, 49668.97it/s] 41%|██████████████████████████████▍                                           | 215623/524288 [00:04<00:06, 49518.41it/s] 42%|███████████████████████████████▏                                          | 220581/524288 [00:04<00:06, 49535.46it/s] 43%|███████████████████████████████▊                                          | 225573/524288 [00:04<00:06, 49647.55it/s] 44%|████████████████████████████████▌                                         | 230542/524288 [00:04<00:05, 49657.37it/s] 45%|█████████████████████████████████▏                                        | 235523/524288 [00:04<00:05, 49699.99it/s] 46%|█████████████████████████████████▉                                        | 240494/524288 [00:04<00:05, 49650.60it/s] 47%|██████████████████████████████████▋                                       | 245460/524288 [00:04<00:05, 49632.37it/s] 48%|███████████████████████████████████▎                                      | 250424/524288 [00:05<00:05, 49575.81it/s] 49%|████████████████████████████████████                                      | 255382/524288 [00:05<00:05, 49515.99it/s] 50%|████████████████████████████████████▋                                     | 260336/524288 [00:05<00:05, 49522.16it/s] 51%|█████████████████████████████████████▍                                    | 265291/524288 [00:05<00:05, 49527.37it/s] 52%|██████████████████████████████████████▏                                   | 270268/524288 [00:05<00:05, 49597.30it/s] 52%|██████████████████████████████████████▊                                   | 275235/524288 [00:05<00:05, 49618.18it/s] 53%|███████████████████████████████████████▌                                  | 280197/524288 [00:05<00:04, 49233.85it/s] 54%|████████████████████████████████████████▏                                 | 285169/524288 [00:05<00:04, 49376.75it/s] 55%|████████████████████████████████████████▉                                 | 290108/524288 [00:05<00:04, 49338.06it/s] 56%|█████████████████████████████████████████▋                                | 295046/524288 [00:05<00:04, 49347.27it/s] 57%|██████████████████████████████████████████▎                               | 299981/524288 [00:06<00:04, 49319.77it/s] 58%|███████████████████████████████████████████                               | 304942/524288 [00:06<00:04, 49404.20it/s] 59%|███████████████████████████████████████████▋                              | 309888/524288 [00:06<00:04, 49419.62it/s] 60%|████████████████████████████████████████████▍                             | 314831/524288 [00:06<00:04, 49259.51it/s] 61%|█████████████████████████████████████████████▏                            | 319758/524288 [00:06<00:04, 49184.53it/s] 62%|█████████████████████████████████████████████▊                            | 324677/524288 [00:06<00:04, 49112.68it/s] 63%|██████████████████████████████████████████████▌                           | 329608/524288 [00:06<00:03, 49168.19it/s] 64%|███████████████████████████████████████████████▏                          | 334529/524288 [00:06<00:03, 49177.70it/s] 65%|███████████████████████████████████████████████▉                          | 339447/524288 [00:06<00:03, 49077.79it/s] 66%|████████████████████████████████████████████████▌                         | 344365/524288 [00:06<00:03, 49107.69it/s] 67%|█████████████████████████████████████████████████▎                        | 349276/524288 [00:07<00:03, 49091.36it/s] 68%|█████████████████████████████████████████████████▉                        | 354212/524288 [00:07<00:03, 49171.14it/s] 68%|██████████████████████████████████████████████████▋                       | 359137/524288 [00:07<00:03, 49192.15it/s] 69%|███████████████████████████████████████████████████▍                      | 364075/524288 [00:07<00:03, 49246.36it/s] 70%|████████████████████████████████████████████████████                      | 369000/524288 [00:07<00:03, 49242.89it/s] 71%|████████████████████████████████████████████████████▊                     | 373925/524288 [00:07<00:03, 49172.06it/s] 72%|█████████████████████████████████████████████████████▍                    | 378877/524288 [00:07<00:02, 49273.25it/s] 73%|██████████████████████████████████████████████████████▏                   | 383805/524288 [00:07<00:02, 49000.65it/s] 74%|██████████████████████████████████████████████████████▊                   | 388706/524288 [00:07<00:02, 48874.22it/s] 75%|███████████████████████████████████████████████████████▌                  | 393594/524288 [00:07<00:02, 47657.39it/s] 76%|████████████████████████████████████████████████████████▎                 | 398535/524288 [00:08<00:02, 48171.14it/s] 77%|████████████████████████████████████████████████████████▉                 | 403502/524288 [00:08<00:02, 48611.93it/s] 78%|█████████████████████████████████████████████████████████▋                | 408407/524288 [00:08<00:02, 48740.36it/s] 79%|██████████████████████████████████████████████████████████▎               | 413358/524288 [00:08<00:02, 48966.82it/s] 80%|███████████████████████████████████████████████████████████               | 418298/524288 [00:08<00:02, 49093.35it/s] 81%|███████████████████████████████████████████████████████████▋              | 423221/524288 [00:08<00:02, 49132.49it/s] 82%|████████████████████████████████████████████████████████████▍             | 428136/524288 [00:08<00:01, 49096.55it/s] 83%|█████████████████████████████████████████████████████████████             | 433051/524288 [00:08<00:01, 49109.27it/s] 84%|█████████████████████████████████████████████████████████████▊            | 437963/524288 [00:08<00:01, 48992.65it/s] 84%|██████████████████████████████████████████████████████████████▌           | 442867/524288 [00:08<00:01, 49004.28it/s] 85%|███████████████████████████████████████████████████████████████▏          | 447792/524288 [00:09<00:01, 49075.33it/s] 86%|███████████████████████████████████████████████████████████████▉          | 452719/524288 [00:09<00:01, 49131.17it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457633/524288 [00:09<00:01, 48944.75it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 462528/524288 [00:09<00:01, 48926.17it/s] 89%|█████████████████████████████████████████████████████████████████▉        | 467421/524288 [00:09<00:01, 48852.72it/s] 90%|██████████████████████████████████████████████████████████████████▋       | 472316/524288 [00:09<00:01, 48879.46it/s] 91%|███████████████████████████████████████████████████████████████████▎      | 477213/524288 [00:09<00:00, 48904.07it/s] 92%|████████████████████████████████████████████████████████████████████      | 482120/524288 [00:09<00:00, 48951.27it/s] 93%|████████████████████████████████████████████████████████████████████▋     | 487016/524288 [00:09<00:00, 48759.65it/s] 94%|█████████████████████████████████████████████████████████████████████▍    | 491893/524288 [00:09<00:00, 48643.46it/s] 95%|██████████████████████████████████████████████████████████████████████    | 496758/524288 [00:10<00:00, 48619.56it/s] 96%|██████████████████████████████████████████████████████████████████████▊   | 501621/524288 [00:10<00:00, 48607.34it/s] 97%|███████████████████████████████████████████████████████████████████████▍  | 506492/524288 [00:10<00:00, 48635.27it/s] 98%|████████████████████████████████████████████████████████████████████████▏ | 511396/524288 [00:10<00:00, 48754.81it/s] 98%|████████████████████████████████████████████████████████████████████████▉ | 516328/524288 [00:10<00:00, 48922.80it/s] 99%|█████████████████████████████████████████████████████████████████████████▌| 521221/524288 [00:10<00:00, 48870.18it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:10<00:00, 49394.98it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.75s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.67s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  1.81s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  1.97s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:10,  2.16s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:12,  2.31s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:15,  2.41s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:17,  2.48s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:20,  2.57s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:23,  2.61s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:26,  2.67s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:29,  2.72s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:32,  2.84s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:35,  2.89s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:38,  2.92s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:41,  2.91s/it]16it [00:41,  2.56s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:02,  6.29it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:03,  3.79it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:05,  2.49it/s] 25%|█████████████████████▌                                                                | 4/16 [00:01<00:06,  1.95it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:07,  1.53it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:03<00:07,  1.33it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:04<00:07,  1.20it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:05<00:07,  1.12it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:06<00:06,  1.05it/s] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:07<00:06,  1.01s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:08<00:05,  1.05s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:10<00:04,  1.09s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:11<00:03,  1.14s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:12<00:02,  1.18s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:13<00:01,  1.21s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:15<00:00,  1.24s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:15<00:00,  1.05it/s]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▊                                                                           | 5538/524288 [00:00<00:09, 55368.96it/s]  2%|█▌                                                                         | 11075/524288 [00:00<00:09, 54529.44it/s]  3%|██▎                                                                        | 16529/524288 [00:00<00:09, 53643.15it/s]  4%|███▏                                                                       | 21935/524288 [00:00<00:09, 53804.27it/s]  5%|███▉                                                                       | 27322/524288 [00:00<00:09, 53824.46it/s]  6%|████▋                                                                      | 32709/524288 [00:00<00:09, 53835.92it/s]  7%|█████▍                                                                     | 38099/524288 [00:00<00:09, 53855.12it/s]  8%|██████▏                                                                    | 43485/524288 [00:00<00:08, 53563.88it/s]  9%|██████▉                                                                    | 48842/524288 [00:00<00:09, 50178.01it/s] 10%|███████▊                                                                   | 54288/524288 [00:01<00:09, 51435.14it/s] 11%|████████▌                                                                  | 59701/524288 [00:01<00:08, 52229.96it/s] 12%|█████████▎                                                                 | 65077/524288 [00:01<00:08, 52681.10it/s] 13%|██████████                                                                 | 70453/524288 [00:01<00:08, 53001.63it/s] 14%|██████████▊                                                                | 75971/524288 [00:01<00:08, 53649.73it/s] 16%|███████████▋                                                               | 81490/524288 [00:01<00:08, 54108.69it/s] 17%|████████████▍                                                              | 86992/524288 [00:01<00:08, 54378.33it/s] 18%|█████████████▏                                                             | 92491/524288 [00:01<00:07, 54559.25it/s] 19%|██████████████                                                             | 97994/524288 [00:01<00:07, 54697.53it/s] 20%|██████████████▌                                                           | 103467/524288 [00:01<00:07, 54614.83it/s] 21%|███████████████▍                                                          | 108958/524288 [00:02<00:07, 54701.35it/s] 22%|████████████████▏                                                         | 114430/524288 [00:02<00:07, 54663.26it/s] 23%|████████████████▉                                                         | 119898/524288 [00:02<00:07, 54657.87it/s] 24%|█████████████████▋                                                        | 125365/524288 [00:02<00:07, 54491.28it/s] 25%|██████████████████▍                                                       | 130815/524288 [00:02<00:07, 54226.04it/s] 26%|███████████████████▏                                                      | 136239/524288 [00:02<00:07, 54159.19it/s] 27%|███████████████████▉                                                      | 141656/524288 [00:02<00:07, 54001.14it/s] 28%|████████████████████▊                                                     | 147077/524288 [00:02<00:06, 54060.32it/s] 29%|█████████████████████▌                                                    | 152512/524288 [00:02<00:06, 54145.67it/s] 30%|██████████████████████▎                                                   | 158017/524288 [00:02<00:06, 54412.67it/s] 31%|███████████████████████                                                   | 163475/524288 [00:03<00:06, 54459.56it/s] 32%|███████████████████████▊                                                  | 168954/524288 [00:03<00:06, 54556.23it/s] 33%|████████████████████████▌                                                 | 174410/524288 [00:03<00:06, 54486.91it/s] 34%|█████████████████████████▍                                                | 179859/524288 [00:03<00:06, 54281.21it/s] 35%|██████████████████████████▏                                               | 185288/524288 [00:03<00:06, 54163.09it/s] 36%|██████████████████████████▉                                               | 190735/524288 [00:03<00:06, 54251.39it/s] 37%|███████████████████████████▋                                              | 196161/524288 [00:03<00:06, 53887.99it/s] 38%|████████████████████████████▍                                             | 201629/524288 [00:03<00:05, 54120.72it/s] 39%|█████████████████████████████▏                                            | 207060/524288 [00:03<00:05, 54175.93it/s] 41%|█████████████████████████████▉                                            | 212500/524288 [00:03<00:05, 54240.74it/s] 42%|██████████████████████████████▊                                           | 217946/524288 [00:04<00:05, 54302.96it/s] 43%|███████████████████████████████▌                                          | 223377/524288 [00:04<00:05, 54149.43it/s] 44%|████████████████████████████████▎                                         | 228793/524288 [00:04<00:05, 54075.42it/s] 45%|█████████████████████████████████                                         | 234214/524288 [00:04<00:05, 54114.25it/s] 46%|█████████████████████████████████▊                                        | 239670/524288 [00:04<00:05, 54244.90it/s] 47%|██████████████████████████████████▌                                       | 245131/524288 [00:04<00:05, 54351.51it/s] 48%|███████████████████████████████████▎                                      | 250567/524288 [00:04<00:05, 54297.20it/s] 49%|████████████████████████████████████▏                                     | 255997/524288 [00:04<00:04, 54241.23it/s] 50%|████████████████████████████████████▉                                     | 261422/524288 [00:04<00:04, 54156.72it/s] 51%|█████████████████████████████████████▋                                    | 266848/524288 [00:04<00:04, 54185.29it/s] 52%|██████████████████████████████████████▍                                   | 272275/524288 [00:05<00:04, 54208.62it/s] 53%|███████████████████████████████████████▏                                  | 277696/524288 [00:05<00:04, 54160.22it/s] 54%|███████████████████████████████████████▉                                  | 283113/524288 [00:05<00:04, 54106.67it/s] 55%|████████████████████████████████████████▋                                 | 288533/524288 [00:05<00:04, 54131.89it/s] 56%|█████████████████████████████████████████▍                                | 293979/524288 [00:05<00:04, 54228.55it/s] 57%|██████████████████████████████████████████▎                               | 299436/524288 [00:05<00:04, 54328.07it/s] 58%|███████████████████████████████████████████                               | 304869/524288 [00:05<00:04, 54325.60it/s] 59%|███████████████████████████████████████████▊                              | 310302/524288 [00:05<00:03, 54215.12it/s] 60%|████████████████████████████████████████████▌                             | 315724/524288 [00:05<00:03, 54109.54it/s] 61%|█████████████████████████████████████████████▎                            | 321136/524288 [00:05<00:03, 54109.91it/s] 62%|██████████████████████████████████████████████                            | 326548/524288 [00:06<00:03, 54088.81it/s] 63%|██████████████████████████████████████████████▊                           | 331960/524288 [00:06<00:03, 54095.50it/s] 64%|███████████████████████████████████████████████▌                          | 337388/524288 [00:06<00:03, 54147.67it/s] 65%|████████████████████████████████████████████████▍                         | 342838/524288 [00:06<00:03, 54250.38it/s] 66%|█████████████████████████████████████████████████▏                        | 348314/524288 [00:06<00:03, 54401.90it/s] 67%|█████████████████████████████████████████████████▉                        | 353778/524288 [00:06<00:03, 54469.73it/s] 69%|██████████████████████████████████████████████████▋                       | 359226/524288 [00:06<00:03, 54470.96it/s] 70%|███████████████████████████████████████████████████▍                      | 364674/524288 [00:06<00:02, 54367.24it/s] 71%|████████████████████████████████████████████████████▏                     | 370111/524288 [00:06<00:02, 54228.17it/s] 72%|█████████████████████████████████████████████████████                     | 375543/524288 [00:06<00:02, 54252.13it/s] 73%|█████████████████████████████████████████████████████▊                    | 380969/524288 [00:07<00:02, 54247.49it/s] 74%|██████████████████████████████████████████████████████▌                   | 386394/524288 [00:07<00:02, 54236.52it/s] 75%|███████████████████████████████████████████████████████▎                  | 391818/524288 [00:07<00:02, 54166.31it/s] 76%|████████████████████████████████████████████████████████                  | 397251/524288 [00:07<00:02, 54213.95it/s] 77%|████████████████████████████████████████████████████████▊                 | 402695/524288 [00:07<00:02, 54280.10it/s] 78%|█████████████████████████████████████████████████████████▌                | 408124/524288 [00:07<00:02, 54247.34it/s] 79%|██████████████████████████████████████████████████████████▎               | 413549/524288 [00:07<00:02, 54141.78it/s] 80%|███████████████████████████████████████████████████████████▏              | 418964/524288 [00:07<00:01, 54109.81it/s] 81%|███████████████████████████████████████████████████████████▉              | 424418/524288 [00:07<00:01, 54237.78it/s] 82%|████████████████████████████████████████████████████████████▋             | 429860/524288 [00:07<00:01, 54290.72it/s] 83%|█████████████████████████████████████████████████████████████▍            | 435293/524288 [00:08<00:01, 54299.32it/s] 84%|██████████████████████████████████████████████████████████████▏           | 440723/524288 [00:08<00:01, 54285.88it/s] 85%|██████████████████████████████████████████████████████████████▉           | 446191/524288 [00:08<00:01, 54400.63it/s] 86%|███████████████████████████████████████████████████████████████▋          | 451648/524288 [00:08<00:01, 54449.84it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457094/524288 [00:08<00:01, 54417.18it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 462547/524288 [00:08<00:01, 54447.71it/s] 89%|██████████████████████████████████████████████████████████████████        | 467992/524288 [00:08<00:01, 53979.88it/s] 90%|██████████████████████████████████████████████████████████████████▊       | 473434/524288 [00:08<00:00, 54107.74it/s] 91%|███████████████████████████████████████████████████████████████████▌      | 478850/524288 [00:08<00:00, 54121.97it/s] 92%|████████████████████████████████████████████████████████████████████▎     | 484272/524288 [00:08<00:00, 54147.60it/s] 93%|█████████████████████████████████████████████████████████████████████     | 489710/524288 [00:09<00:00, 54214.58it/s] 94%|█████████████████████████████████████████████████████████████████████▉    | 495132/524288 [00:09<00:00, 54187.89it/s] 95%|██████████████████████████████████████████████████████████████████████▋   | 500551/524288 [00:09<00:00, 54123.64it/s] 97%|███████████████████████████████████████████████████████████████████████▍  | 505979/524288 [00:09<00:00, 54167.57it/s] 98%|████████████████████████████████████████████████████████████████████████▏ | 511411/524288 [00:09<00:00, 54210.78it/s] 99%|████████████████████████████████████████████████████████████████████████▉ | 516866/524288 [00:09<00:00, 54311.84it/s]100%|█████████████████████████████████████████████████████████████████████████▋| 522298/524288 [00:09<00:00, 54160.54it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:09<00:00, 53470.52it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:02,  2.12s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:04,  2.12s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:06,  2.31s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:09,  2.50s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:12,  2.67s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:15,  2.84s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:18,  2.93s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:21,  3.00s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:25,  3.09s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:28,  3.11s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:31,  3.12s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:34,  3.13s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:37,  3.08s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:40,  3.04s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:43,  3.02s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:46,  3.05s/it]16it [00:46,  2.92s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:05,  2.71it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:07,  1.98it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:08,  1.49it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:09,  1.27it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:10,  1.08it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:05<00:10,  1.02s/it] 44%|█████████████████████████████████████▋                                                | 7/16 [00:06<00:09,  1.11s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:07<00:09,  1.17s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:09<00:08,  1.22s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:10<00:07,  1.25s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:11<00:06,  1.28s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:13<00:05,  1.30s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:14<00:03,  1.33s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:15<00:02,  1.35s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:17<00:01,  1.36s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.38s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.17s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4484/524288 [00:00<00:11, 44831.81it/s]  2%|█▎                                                                          | 9028/524288 [00:00<00:11, 45188.24it/s]  3%|█▉                                                                         | 13562/524288 [00:00<00:11, 45256.27it/s]  3%|██▌                                                                        | 18088/524288 [00:00<00:11, 45157.37it/s]  4%|███▏                                                                       | 22622/524288 [00:00<00:11, 45220.00it/s]  5%|███▉                                                                       | 27145/524288 [00:00<00:11, 45082.67it/s]  6%|████▌                                                                      | 31654/524288 [00:00<00:10, 44981.06it/s]  7%|█████▏                                                                     | 36162/524288 [00:00<00:10, 45011.00it/s]  8%|█████▊                                                                     | 40664/524288 [00:00<00:10, 44975.60it/s]  9%|██████▍                                                                    | 45174/524288 [00:01<00:10, 45010.95it/s]  9%|███████                                                                    | 49678/524288 [00:01<00:10, 45016.86it/s] 10%|███████▊                                                                   | 54209/524288 [00:01<00:10, 45103.40it/s] 11%|████████▍                                                                  | 58730/524288 [00:01<00:10, 45133.59it/s] 12%|█████████                                                                  | 63244/524288 [00:01<00:10, 44959.58it/s] 13%|█████████▋                                                                 | 67741/524288 [00:01<00:10, 44824.48it/s] 14%|██████████▎                                                                | 72224/524288 [00:01<00:10, 44732.95it/s] 15%|██████████▉                                                                | 76698/524288 [00:01<00:10, 44542.33it/s] 15%|███████████▌                                                               | 81153/524288 [00:01<00:09, 44460.14it/s] 16%|████████████▏                                                              | 85631/524288 [00:01<00:09, 44554.22it/s] 17%|████████████▉                                                              | 90087/524288 [00:02<00:09, 44491.47it/s] 18%|█████████████▌                                                             | 94537/524288 [00:02<00:09, 44440.40it/s] 19%|██████████████▏                                                            | 98982/524288 [00:02<00:09, 44365.18it/s] 20%|██████████████▌                                                           | 103419/524288 [00:02<00:09, 44307.41it/s] 21%|███████████████▏                                                          | 107888/524288 [00:02<00:09, 44421.00it/s] 21%|███████████████▊                                                          | 112349/524288 [00:02<00:09, 44475.52it/s] 22%|████████████████▍                                                         | 116832/524288 [00:02<00:09, 44578.70it/s] 23%|█████████████████                                                         | 121290/524288 [00:02<00:09, 44576.65it/s] 24%|█████████████████▋                                                        | 125748/524288 [00:02<00:08, 44565.44it/s] 25%|██████████████████▍                                                       | 130205/524288 [00:02<00:08, 44558.41it/s] 26%|███████████████████                                                       | 134661/524288 [00:03<00:08, 44498.63it/s] 27%|███████████████████▋                                                      | 139111/524288 [00:03<00:08, 44428.77it/s] 27%|████████████████████▎                                                     | 143554/524288 [00:03<00:08, 44407.31it/s] 28%|████████████████████▉                                                     | 148011/524288 [00:03<00:08, 44453.25it/s] 29%|█████████████████████▌                                                    | 152526/524288 [00:03<00:08, 44660.00it/s] 30%|██████████████████████▏                                                   | 156993/524288 [00:03<00:08, 41547.62it/s] 31%|██████████████████████▊                                                   | 161497/524288 [00:03<00:08, 42539.67it/s] 32%|███████████████████████▍                                                  | 165946/524288 [00:03<00:08, 43101.87it/s] 32%|████████████████████████                                                  | 170389/524288 [00:03<00:08, 43487.11it/s] 33%|████████████████████████▋                                                 | 174830/524288 [00:03<00:07, 43756.79it/s] 34%|█████████████████████████▎                                                | 179267/524288 [00:04<00:07, 43934.77it/s] 35%|█████████████████████████▉                                                | 183706/524288 [00:04<00:07, 44069.25it/s] 36%|██████████████████████████▌                                               | 188158/524288 [00:04<00:07, 44202.40it/s] 37%|███████████████████████████▏                                              | 192645/524288 [00:04<00:07, 44399.94it/s] 38%|███████████████████████████▊                                              | 197089/524288 [00:04<00:07, 44242.69it/s] 38%|████████████████████████████▍                                             | 201561/524288 [00:04<00:07, 44383.68it/s] 39%|█████████████████████████████                                             | 206009/524288 [00:04<00:07, 44409.52it/s] 40%|█████████████████████████████▋                                            | 210463/524288 [00:04<00:07, 44445.15it/s] 41%|██████████████████████████████▎                                           | 214929/524288 [00:04<00:06, 44507.28it/s] 42%|██████████████████████████████▉                                           | 219382/524288 [00:04<00:06, 44512.67it/s] 43%|███████████████████████████████▌                                          | 223890/524288 [00:05<00:06, 44681.96it/s] 44%|████████████████████████████████▏                                         | 228373/524288 [00:05<00:06, 44723.06it/s] 44%|████████████████████████████████▊                                         | 232852/524288 [00:05<00:06, 44741.26it/s] 45%|█████████████████████████████████▍                                        | 237327/524288 [00:05<00:06, 44674.55it/s] 46%|██████████████████████████████████▏                                       | 241816/524288 [00:05<00:06, 44736.36it/s] 47%|██████████████████████████████████▊                                       | 246290/524288 [00:05<00:06, 44688.61it/s] 48%|███████████████████████████████████▍                                      | 250759/524288 [00:05<00:06, 44643.12it/s] 49%|████████████████████████████████████                                      | 255277/524288 [00:05<00:06, 44800.82it/s] 50%|████████████████████████████████████▋                                     | 259758/524288 [00:05<00:05, 44751.73it/s] 50%|█████████████████████████████████████▎                                    | 264249/524288 [00:05<00:05, 44795.59it/s] 51%|█████████████████████████████████████▉                                    | 268737/524288 [00:06<00:05, 44817.69it/s] 52%|██████████████████████████████████████▌                                   | 273219/524288 [00:06<00:05, 44751.78it/s] 53%|███████████████████████████████████████▏                                  | 277696/524288 [00:06<00:05, 44754.41it/s] 54%|███████████████████████████████████████▊                                  | 282172/524288 [00:06<00:05, 44754.21it/s] 55%|████████████████████████████████████████▍                                 | 286648/524288 [00:06<00:05, 44732.27it/s] 56%|█████████████████████████████████████████                                 | 291122/524288 [00:06<00:05, 44650.75it/s] 56%|█████████████████████████████████████████▋                                | 295588/524288 [00:06<00:05, 44624.90it/s] 57%|██████████████████████████████████████████▎                               | 300051/524288 [00:06<00:05, 44477.58it/s] 58%|██████████████████████████████████████████▉                               | 304499/524288 [00:06<00:04, 44437.40it/s] 59%|███████████████████████████████████████████▌                              | 308943/524288 [00:06<00:04, 44375.51it/s] 60%|████████████████████████████████████████████▏                             | 313381/524288 [00:07<00:04, 44302.96it/s] 61%|████████████████████████████████████████████▊                             | 317828/524288 [00:07<00:04, 44350.98it/s] 61%|█████████████████████████████████████████████▍                            | 322264/524288 [00:07<00:04, 44234.92it/s] 62%|██████████████████████████████████████████████                            | 326688/524288 [00:07<00:04, 44230.02it/s] 63%|██████████████████████████████████████████████▋                           | 331167/524288 [00:07<00:04, 44396.48it/s] 64%|███████████████████████████████████████████████▍                          | 335652/524288 [00:07<00:04, 44531.28it/s] 65%|████████████████████████████████████████████████                          | 340179/524288 [00:07<00:04, 44750.10it/s] 66%|████████████████████████████████████████████████▋                         | 344682/524288 [00:07<00:04, 44833.29it/s] 67%|█████████████████████████████████████████████████▎                        | 349166/524288 [00:07<00:03, 44823.18it/s] 67%|█████████████████████████████████████████████████▉                        | 353649/524288 [00:07<00:03, 44692.69it/s] 68%|██████████████████████████████████████████████████▌                       | 358119/524288 [00:08<00:03, 44648.58it/s] 69%|███████████████████████████████████████████████████▏                      | 362584/524288 [00:08<00:03, 44628.60it/s] 70%|███████████████████████████████████████████████████▊                      | 367047/524288 [00:08<00:03, 44619.07it/s] 71%|████████████████████████████████████████████████████▍                     | 371532/524288 [00:08<00:03, 44686.01it/s] 72%|█████████████████████████████████████████████████████                     | 376051/524288 [00:08<00:03, 44835.38it/s] 73%|█████████████████████████████████████████████████████▋                    | 380545/524288 [00:08<00:03, 44863.48it/s] 73%|██████████████████████████████████████████████████████▎                   | 385060/524288 [00:08<00:03, 44946.02it/s] 74%|██████████████████████████████████████████████████████▉                   | 389555/524288 [00:08<00:03, 44885.43it/s] 75%|███████████████████████████████████████████████████████▌                  | 394076/524288 [00:08<00:02, 44980.88it/s] 76%|████████████████████████████████████████████████████████▎                 | 398575/524288 [00:08<00:02, 44945.28it/s] 77%|████████████████████████████████████████████████████████▉                 | 403079/524288 [00:09<00:02, 44972.97it/s] 78%|█████████████████████████████████████████████████████████▌                | 407577/524288 [00:09<00:02, 44963.62it/s] 79%|██████████████████████████████████████████████████████████▏               | 412074/524288 [00:09<00:02, 44803.97it/s] 79%|██████████████████████████████████████████████████████████▊               | 416616/524288 [00:09<00:02, 44985.21it/s] 80%|███████████████████████████████████████████████████████████▍              | 421121/524288 [00:09<00:02, 45002.75it/s] 81%|████████████████████████████████████████████████████████████              | 425646/524288 [00:09<00:02, 45074.28it/s] 82%|████████████████████████████████████████████████████████████▋             | 430154/524288 [00:09<00:02, 44969.34it/s] 83%|█████████████████████████████████████████████████████████████▎            | 434652/524288 [00:09<00:01, 44930.29it/s] 84%|█████████████████████████████████████████████████████████████▉            | 439150/524288 [00:09<00:01, 44942.65it/s] 85%|██████████████████████████████████████████████████████████████▌           | 443645/524288 [00:09<00:01, 44872.42it/s] 85%|███████████████████████████████████████████████████████████████▎          | 448136/524288 [00:10<00:01, 44880.83it/s] 86%|███████████████████████████████████████████████████████████████▉          | 452634/524288 [00:10<00:01, 44907.59it/s] 87%|████████████████████████████████████████████████████████████████▌         | 457132/524288 [00:10<00:01, 44925.35it/s] 88%|█████████████████████████████████████████████████████████████████▏        | 461625/524288 [00:10<00:01, 44915.69it/s] 89%|█████████████████████████████████████████████████████████████████▊        | 466117/524288 [00:10<00:01, 44851.47it/s] 90%|██████████████████████████████████████████████████████████████████▍       | 470616/524288 [00:10<00:01, 44891.41it/s] 91%|███████████████████████████████████████████████████████████████████       | 475108/524288 [00:10<00:01, 44898.58it/s] 91%|███████████████████████████████████████████████████████████████████▋      | 479610/524288 [00:10<00:00, 44931.71it/s] 92%|████████████████████████████████████████████████████████████████████▎     | 484113/524288 [00:10<00:00, 44958.81it/s] 93%|████████████████████████████████████████████████████████████████████▉     | 488646/524288 [00:10<00:00, 45068.62it/s] 94%|█████████████████████████████████████████████████████████████████████▌    | 493173/524288 [00:11<00:00, 45126.15it/s] 95%|██████████████████████████████████████████████████████████████████████▏   | 497686/524288 [00:11<00:00, 44985.40it/s] 96%|██████████████████████████████████████████████████████████████████████▉   | 502185/524288 [00:11<00:00, 44875.23it/s] 97%|███████████████████████████████████████████████████████████████████████▌  | 506673/524288 [00:11<00:00, 44852.82it/s] 98%|████████████████████████████████████████████████████████████████████████▏ | 511191/524288 [00:11<00:00, 44948.53it/s] 98%|████████████████████████████████████████████████████████████████████████▊ | 515686/524288 [00:11<00:00, 44838.94it/s] 99%|█████████████████████████████████████████████████████████████████████████▍| 520170/524288 [00:11<00:00, 44730.03it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:11<00:00, 44470.09it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.92s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:04,  2.49s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:07,  2.52s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:10,  2.61s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:13,  2.75s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:16,  2.90s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:19,  2.94s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:22,  3.01s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:25,  3.07s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:28,  3.08s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:31,  3.10s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:35,  3.14s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:38,  3.13s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:41,  3.26s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:44,  3.19s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:48,  3.18s/it]16it [00:48,  3.00s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:05,  2.83it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:06,  2.02it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:08,  1.51it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:09,  1.27it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:10,  1.07it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:05<00:10,  1.03s/it] 44%|█████████████████████████████████████▋                                                | 7/16 [00:06<00:10,  1.12s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:07<00:09,  1.17s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:09<00:08,  1.23s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:10<00:07,  1.26s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:11<00:06,  1.28s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:13<00:05,  1.30s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:14<00:03,  1.33s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:15<00:02,  1.35s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:17<00:01,  1.35s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.36s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.17s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▌                                                                           | 4180/524288 [00:00<00:12, 41795.36it/s]  2%|█▏                                                                          | 8397/524288 [00:00<00:12, 42008.33it/s]  2%|█▊                                                                         | 12598/524288 [00:00<00:12, 41792.65it/s]  3%|██▍                                                                        | 16778/524288 [00:00<00:12, 41393.86it/s]  4%|██▉                                                                        | 20918/524288 [00:00<00:12, 41135.91it/s]  5%|███▌                                                                       | 25054/524288 [00:00<00:12, 41209.90it/s]  6%|████▏                                                                      | 29176/524288 [00:00<00:12, 41195.13it/s]  6%|████▊                                                                      | 33337/524288 [00:00<00:11, 41323.07it/s]  7%|█████▎                                                                     | 37495/524288 [00:00<00:11, 41399.87it/s]  8%|█████▉                                                                     | 41665/524288 [00:01<00:11, 41489.03it/s]  9%|██████▌                                                                    | 45815/524288 [00:01<00:11, 41489.19it/s] 10%|███████▏                                                                   | 49965/524288 [00:01<00:11, 41432.04it/s] 10%|███████▋                                                                   | 54109/524288 [00:01<00:11, 41388.33it/s] 11%|████████▎                                                                  | 58250/524288 [00:01<00:11, 41392.20it/s] 12%|████████▉                                                                  | 62390/524288 [00:01<00:11, 41313.59it/s] 13%|█████████▌                                                                 | 66522/524288 [00:01<00:11, 41265.60it/s] 13%|██████████                                                                 | 70649/524288 [00:01<00:11, 41215.12it/s] 14%|██████████▋                                                                | 74780/524288 [00:01<00:10, 41240.47it/s] 15%|███████████▎                                                               | 78905/524288 [00:01<00:10, 41165.87it/s] 16%|███████████▉                                                               | 83038/524288 [00:02<00:10, 41213.62it/s] 17%|████████████▍                                                              | 87160/524288 [00:02<00:10, 41149.85it/s] 17%|█████████████                                                              | 91276/524288 [00:02<00:10, 41043.33it/s] 18%|█████████████▋                                                             | 95393/524288 [00:02<00:10, 41079.02it/s] 19%|██████████████▏                                                            | 99501/524288 [00:02<00:10, 40896.93it/s] 20%|██████████████▌                                                           | 103591/524288 [00:02<00:10, 40565.89it/s] 21%|███████████████▏                                                          | 107714/524288 [00:02<00:10, 40762.47it/s] 21%|███████████████▊                                                          | 111791/524288 [00:02<00:10, 39689.93it/s] 22%|████████████████▎                                                         | 115932/524288 [00:02<00:10, 40191.87it/s] 23%|████████████████▉                                                         | 120042/524288 [00:02<00:09, 40457.19it/s] 24%|█████████████████▌                                                        | 124206/524288 [00:03<00:09, 40806.10it/s] 24%|██████████████████                                                        | 128325/524288 [00:03<00:09, 40917.71it/s] 25%|██████████████████▋                                                       | 132476/524288 [00:03<00:09, 41091.79it/s] 26%|███████████████████▎                                                      | 136626/524288 [00:03<00:09, 41213.06it/s] 27%|███████████████████▊                                                      | 140804/524288 [00:03<00:09, 41381.72it/s] 28%|████████████████████▍                                                     | 144944/524288 [00:03<00:09, 41294.47it/s] 28%|█████████████████████                                                     | 149075/524288 [00:03<00:09, 41155.50it/s] 29%|█████████████████████▌                                                    | 153193/524288 [00:03<00:09, 41160.31it/s] 30%|██████████████████████▏                                                   | 157310/524288 [00:03<00:08, 40926.98it/s] 31%|██████████████████████▊                                                   | 161424/524288 [00:03<00:08, 40986.94it/s] 32%|███████████████████████▎                                                  | 165542/524288 [00:04<00:08, 41043.68it/s] 32%|███████████████████████▉                                                  | 169660/524288 [00:04<00:08, 41082.06it/s] 33%|████████████████████████▌                                                 | 173769/524288 [00:04<00:08, 41067.07it/s] 34%|█████████████████████████                                                 | 177907/524288 [00:04<00:08, 41157.96it/s] 35%|█████████████████████████▋                                                | 182054/524288 [00:04<00:08, 41250.25it/s] 36%|██████████████████████████▎                                               | 186180/524288 [00:04<00:08, 41097.83it/s] 36%|██████████████████████████▊                                               | 190290/524288 [00:04<00:08, 41002.24it/s] 37%|███████████████████████████▍                                              | 194391/524288 [00:04<00:08, 40987.22it/s] 38%|████████████████████████████                                              | 198524/524288 [00:04<00:07, 41088.35it/s] 39%|████████████████████████████▌                                             | 202637/524288 [00:04<00:07, 41098.22it/s] 39%|█████████████████████████████▏                                            | 206747/524288 [00:05<00:07, 40977.58it/s] 40%|█████████████████████████████▊                                            | 210845/524288 [00:05<00:07, 40850.16it/s] 41%|██████████████████████████████▎                                           | 214931/524288 [00:05<00:07, 40796.90it/s] 42%|██████████████████████████████▉                                           | 219011/524288 [00:05<00:07, 40627.49it/s] 43%|███████████████████████████████▍                                          | 223074/524288 [00:05<00:07, 40544.17it/s] 43%|████████████████████████████████                                          | 227169/524288 [00:05<00:07, 40661.97it/s] 44%|████████████████████████████████▋                                         | 231329/524288 [00:05<00:07, 40941.33it/s] 45%|█████████████████████████████████▏                                        | 235482/524288 [00:05<00:07, 41115.31it/s] 46%|█████████████████████████████████▊                                        | 239594/524288 [00:05<00:06, 41092.97it/s] 46%|██████████████████████████████████▍                                       | 243706/524288 [00:05<00:06, 41100.28it/s] 47%|██████████████████████████████████▉                                       | 247823/524288 [00:06<00:06, 41120.33it/s] 48%|███████████████████████████████████▌                                      | 251936/524288 [00:06<00:06, 41034.98it/s] 49%|████████████████████████████████████▏                                     | 256040/524288 [00:06<00:06, 41015.74it/s] 50%|████████████████████████████████████▋                                     | 260160/524288 [00:06<00:06, 41070.40it/s] 50%|█████████████████████████████████████▎                                    | 264269/524288 [00:06<00:06, 41073.08it/s] 51%|█████████████████████████████████████▉                                    | 268377/524288 [00:06<00:06, 41000.99it/s] 52%|██████████████████████████████████████▍                                   | 272478/524288 [00:06<00:06, 40850.10it/s] 53%|███████████████████████████████████████                                   | 276564/524288 [00:06<00:06, 40773.63it/s] 54%|███████████████████████████████████████▌                                  | 280689/524288 [00:06<00:05, 40914.79it/s] 54%|████████████████████████████████████████▏                                 | 284797/524288 [00:06<00:05, 40961.33it/s] 55%|████████████████████████████████████████▊                                 | 288894/524288 [00:07<00:05, 40926.78it/s] 56%|█████████████████████████████████████████▎                                | 293001/524288 [00:07<00:05, 40969.05it/s] 57%|█████████████████████████████████████████▉                                | 297144/524288 [00:07<00:05, 41105.94it/s] 57%|██████████████████████████████████████████▌                               | 301289/524288 [00:07<00:05, 41207.47it/s] 58%|███████████████████████████████████████████                               | 305410/524288 [00:07<00:05, 41182.57it/s] 59%|███████████████████████████████████████████▋                              | 309530/524288 [00:07<00:05, 41186.98it/s] 60%|████████████████████████████████████████████▎                             | 313676/524288 [00:07<00:05, 41267.69it/s] 61%|████████████████████████████████████████████▊                             | 317803/524288 [00:07<00:05, 41161.58it/s] 61%|█████████████████████████████████████████████▍                            | 321971/524288 [00:07<00:04, 41314.89it/s] 62%|██████████████████████████████████████████████                            | 326103/524288 [00:07<00:04, 41233.84it/s] 63%|██████████████████████████████████████████████▌                           | 330227/524288 [00:08<00:04, 41232.40it/s] 64%|███████████████████████████████████████████████▏                          | 334351/524288 [00:08<00:04, 40916.18it/s] 65%|███████████████████████████████████████████████▊                          | 338444/524288 [00:08<00:04, 40842.48it/s] 65%|████████████████████████████████████████████████▎                         | 342529/524288 [00:08<00:04, 40717.16it/s] 66%|████████████████████████████████████████████████▉                         | 346601/524288 [00:08<00:04, 40669.12it/s] 67%|█████████████████████████████████████████████████▍                        | 350669/524288 [00:08<00:04, 40551.95it/s] 68%|██████████████████████████████████████████████████                        | 354725/524288 [00:08<00:04, 40122.29it/s] 68%|██████████████████████████████████████████████████▋                       | 358739/524288 [00:08<00:04, 39228.12it/s] 69%|███████████████████████████████████████████████████▏                      | 362666/524288 [00:08<00:04, 39080.17it/s] 70%|███████████████████████████████████████████████████▊                      | 366668/524288 [00:08<00:04, 39353.31it/s] 71%|████████████████████████████████████████████████████▎                     | 370705/524288 [00:09<00:03, 39650.77it/s] 71%|████████████████████████████████████████████████████▉                     | 374740/524288 [00:09<00:03, 39856.71it/s] 72%|█████████████████████████████████████████████████████▍                    | 378769/524288 [00:09<00:03, 39985.07it/s] 73%|██████████████████████████████████████████████████████                    | 382769/524288 [00:09<00:03, 39988.00it/s] 74%|██████████████████████████████████████████████████████▌                   | 386779/524288 [00:09<00:03, 40020.93it/s] 75%|███████████████████████████████████████████████████████▏                  | 390795/524288 [00:09<00:03, 40060.87it/s] 75%|███████████████████████████████████████████████████████▋                  | 394828/524288 [00:09<00:03, 40139.48it/s] 76%|████████████████████████████████████████████████████████▎                 | 398850/524288 [00:09<00:03, 40161.55it/s] 77%|████████████████████████████████████████████████████████▊                 | 402896/524288 [00:09<00:03, 40249.58it/s] 78%|█████████████████████████████████████████████████████████▍                | 406929/524288 [00:09<00:02, 40271.22it/s] 78%|██████████████████████████████████████████████████████████                | 410962/524288 [00:10<00:02, 40285.35it/s] 79%|██████████████████████████████████████████████████████████▌               | 414991/524288 [00:10<00:02, 40258.40it/s] 80%|███████████████████████████████████████████████████████████▏              | 419017/524288 [00:10<00:02, 40224.68it/s] 81%|███████████████████████████████████████████████████████████▋              | 423040/524288 [00:10<00:02, 40168.69it/s] 81%|████████████████████████████████████████████████████████████▎             | 427057/524288 [00:10<00:02, 40151.95it/s] 82%|████████████████████████████████████████████████████████████▊             | 431073/524288 [00:10<00:02, 40005.13it/s] 83%|█████████████████████████████████████████████████████████████▍            | 435095/524288 [00:10<00:02, 40068.33it/s] 84%|█████████████████████████████████████████████████████████████▉            | 439133/524288 [00:10<00:02, 40157.93it/s] 85%|██████████████████████████████████████████████████████████████▌           | 443149/524288 [00:10<00:02, 40124.28it/s] 85%|███████████████████████████████████████████████████████████████           | 447162/524288 [00:10<00:01, 40045.38it/s] 86%|███████████████████████████████████████████████████████████████▋          | 451167/524288 [00:11<00:01, 40030.39it/s] 87%|████████████████████████████████████████████████████████████████▏         | 455171/524288 [00:11<00:01, 39917.44it/s] 88%|████████████████████████████████████████████████████████████████▊         | 459163/524288 [00:11<00:01, 39836.91it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 463147/524288 [00:11<00:01, 39691.28it/s] 89%|█████████████████████████████████████████████████████████████████▉        | 467167/524288 [00:11<00:01, 39841.85it/s] 90%|██████████████████████████████████████████████████████████████████▌       | 471172/524288 [00:11<00:01, 39900.71it/s] 91%|███████████████████████████████████████████████████████████████████       | 475217/524288 [00:11<00:01, 40063.75it/s] 91%|███████████████████████████████████████████████████████████████████▋      | 479267/524288 [00:11<00:01, 40191.20it/s] 92%|████████████████████████████████████████████████████████████████████▏     | 483311/524288 [00:11<00:01, 40264.31it/s] 93%|████████████████████████████████████████████████████████████████████▊     | 487338/524288 [00:11<00:00, 40104.84it/s] 94%|█████████████████████████████████████████████████████████████████████▎    | 491357/524288 [00:12<00:00, 40129.53it/s] 94%|█████████████████████████████████████████████████████████████████████▉    | 495395/524288 [00:12<00:00, 40201.63it/s] 95%|██████████████████████████████████████████████████████████████████████▍   | 499429/524288 [00:12<00:00, 40241.53it/s] 96%|███████████████████████████████████████████████████████████████████████   | 503468/524288 [00:12<00:00, 40282.89it/s] 97%|███████████████████████████████████████████████████████████████████████▋  | 507522/524288 [00:12<00:00, 40357.11it/s] 98%|████████████████████████████████████████████████████████████████████████▏ | 511560/524288 [00:12<00:00, 40363.43it/s] 98%|████████████████████████████████████████████████████████████████████████▊ | 515615/524288 [00:12<00:00, 40417.91it/s] 99%|█████████████████████████████████████████████████████████████████████████▎| 519698/524288 [00:12<00:00, 40538.40it/s]100%|█████████████████████████████████████████████████████████████████████████▉| 523771/524288 [00:12<00:00, 40592.54it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:12<00:00, 40371.02it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:03,  3.26s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:05,  2.55s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:07,  2.56s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:10,  2.65s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:13,  2.77s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:16,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:19,  2.91s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:22,  2.97s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:25,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:28,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:31,  3.00s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:34,  3.01s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:38,  3.05s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:40,  3.02s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:43,  2.99s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:46,  2.99s/it]16it [00:46,  2.93s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:06,  2.47it/s] 12%|██████████▊                                                                           | 2/16 [00:01<00:07,  1.81it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:09,  1.39it/s] 25%|█████████████████████▌                                                                | 4/16 [00:03<00:10,  1.18it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:04<00:10,  1.03it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:05<00:10,  1.06s/it] 44%|█████████████████████████████████████▋                                                | 7/16 [00:06<00:10,  1.12s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:07<00:09,  1.17s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:09<00:08,  1.22s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:10<00:07,  1.26s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:11<00:06,  1.28s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:13<00:05,  1.31s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:14<00:03,  1.33s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:16<00:02,  1.34s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:17<00:01,  1.36s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.36s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.18s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4426/524288 [00:00<00:11, 44249.91it/s]  2%|█▎                                                                          | 8877/524288 [00:00<00:11, 44398.12it/s]  3%|█▉                                                                         | 13351/524288 [00:00<00:11, 44552.44it/s]  3%|██▌                                                                        | 17807/524288 [00:00<00:11, 44304.75it/s]  4%|███▏                                                                       | 22238/524288 [00:00<00:11, 44056.44it/s]  5%|███▊                                                                       | 26644/524288 [00:00<00:11, 43912.40it/s]  6%|████▍                                                                      | 31036/524288 [00:00<00:11, 43611.10it/s]  7%|█████                                                                      | 35398/524288 [00:00<00:11, 43388.61it/s]  8%|█████▋                                                                     | 39738/524288 [00:00<00:11, 43226.93it/s]  8%|██████▎                                                                    | 44061/524288 [00:01<00:11, 43117.66it/s]  9%|██████▉                                                                    | 48373/524288 [00:01<00:11, 42982.49it/s] 10%|███████▌                                                                   | 52672/524288 [00:01<00:10, 42876.33it/s] 11%|████████▏                                                                  | 56960/524288 [00:01<00:10, 42759.45it/s] 12%|████████▊                                                                  | 61236/524288 [00:01<00:10, 42725.87it/s] 12%|█████████▎                                                                 | 65509/524288 [00:01<00:10, 42704.72it/s] 13%|█████████▉                                                                 | 69780/524288 [00:01<00:10, 42688.89it/s] 14%|██████████▌                                                                | 74049/524288 [00:01<00:10, 42661.10it/s] 15%|███████████▏                                                               | 78316/524288 [00:01<00:10, 41358.43it/s] 16%|███████████▊                                                               | 82604/524288 [00:01<00:10, 41802.51it/s] 17%|████████████▍                                                              | 86844/524288 [00:02<00:10, 41976.75it/s] 17%|█████████████                                                              | 91144/524288 [00:02<00:10, 42279.21it/s] 18%|█████████████▋                                                             | 95418/524288 [00:02<00:10, 42413.81it/s] 19%|██████████████▎                                                            | 99689/524288 [00:02<00:09, 42501.10it/s] 20%|██████████████▋                                                           | 103998/524288 [00:02<00:09, 42675.42it/s] 21%|███████████████▎                                                          | 108268/524288 [00:02<00:09, 42628.27it/s] 21%|███████████████▉                                                          | 112532/524288 [00:02<00:09, 42555.76it/s] 22%|████████████████▍                                                         | 116789/524288 [00:02<00:09, 42555.14it/s] 23%|█████████████████                                                         | 121052/524288 [00:02<00:09, 42575.01it/s] 24%|█████████████████▋                                                        | 125347/524288 [00:02<00:09, 42685.47it/s] 25%|██████████████████▎                                                       | 129622/524288 [00:03<00:09, 42704.09it/s] 26%|██████████████████▉                                                       | 133918/524288 [00:03<00:09, 42778.12it/s] 26%|███████████████████▌                                                      | 138214/524288 [00:03<00:09, 42829.50it/s] 27%|████████████████████                                                      | 142524/524288 [00:03<00:08, 42908.45it/s] 28%|████████████████████▋                                                     | 146815/524288 [00:03<00:08, 42860.38it/s] 29%|█████████████████████▎                                                    | 151102/524288 [00:03<00:08, 42842.89it/s] 30%|█████████████████████▉                                                    | 155387/524288 [00:03<00:08, 42814.02it/s] 30%|██████████████████████▌                                                   | 159669/524288 [00:03<00:08, 42774.54it/s] 31%|███████████████████████▏                                                  | 163947/524288 [00:03<00:08, 42559.12it/s] 32%|███████████████████████▋                                                  | 168204/524288 [00:03<00:08, 42501.02it/s] 33%|████████████████████████▎                                                 | 172455/524288 [00:04<00:08, 42484.92it/s] 34%|████████████████████████▉                                                 | 176704/524288 [00:04<00:08, 42476.46it/s] 35%|█████████████████████████▌                                                | 181004/524288 [00:04<00:08, 42629.74it/s] 35%|██████████████████████████▏                                               | 185268/524288 [00:04<00:07, 42594.48it/s] 36%|██████████████████████████▊                                               | 189557/524288 [00:04<00:07, 42680.33it/s] 37%|███████████████████████████▎                                              | 193833/524288 [00:04<00:07, 42702.44it/s] 38%|███████████████████████████▉                                              | 198121/524288 [00:04<00:07, 42754.35it/s] 39%|████████████████████████████▌                                             | 202397/524288 [00:04<00:07, 42681.77it/s] 39%|█████████████████████████████▏                                            | 206666/524288 [00:04<00:07, 42603.15it/s] 40%|█████████████████████████████▊                                            | 210969/524288 [00:04<00:07, 42729.89it/s] 41%|██████████████████████████████▍                                           | 215243/524288 [00:05<00:07, 42617.82it/s] 42%|██████████████████████████████▉                                           | 219505/524288 [00:05<00:07, 42488.70it/s] 43%|███████████████████████████████▌                                          | 223754/524288 [00:05<00:07, 42447.66it/s] 43%|████████████████████████████████▏                                         | 228010/524288 [00:05<00:06, 42480.70it/s] 44%|████████████████████████████████▊                                         | 232259/524288 [00:05<00:06, 42204.39it/s] 45%|█████████████████████████████████▍                                        | 236489/524288 [00:05<00:06, 42229.93it/s] 46%|█████████████████████████████████▉                                        | 240882/524288 [00:05<00:06, 42736.18it/s] 47%|██████████████████████████████████▌                                       | 245157/524288 [00:05<00:06, 42699.47it/s] 48%|███████████████████████████████████▏                                      | 249462/524288 [00:05<00:06, 42801.43it/s] 48%|███████████████████████████████████▊                                      | 253743/524288 [00:05<00:06, 42775.13it/s] 49%|████████████████████████████████████▍                                     | 258021/524288 [00:06<00:06, 42673.82it/s] 50%|█████████████████████████████████████                                     | 262309/524288 [00:06<00:06, 42733.85it/s] 51%|█████████████████████████████████████▋                                    | 266583/524288 [00:06<00:06, 42665.06it/s] 52%|██████████████████████████████████████▏                                   | 270857/524288 [00:06<00:05, 42686.24it/s] 52%|██████████████████████████████████████▊                                   | 275144/524288 [00:06<00:05, 42740.70it/s] 53%|███████████████████████████████████████▍                                  | 279448/524288 [00:06<00:05, 42828.03it/s] 54%|████████████████████████████████████████                                  | 283747/524288 [00:06<00:05, 42875.30it/s] 55%|████████████████████████████████████████▋                                 | 288039/524288 [00:06<00:05, 42886.47it/s] 56%|█████████████████████████████████████████▎                                | 292376/524288 [00:06<00:05, 43027.96it/s] 57%|█████████████████████████████████████████▊                                | 296679/524288 [00:06<00:05, 43004.94it/s] 57%|██████████████████████████████████████████▍                               | 300983/524288 [00:07<00:05, 43012.67it/s] 58%|███████████████████████████████████████████                               | 305285/524288 [00:07<00:05, 42845.65it/s] 59%|███████████████████████████████████████████▋                              | 309570/524288 [00:07<00:05, 42675.32it/s] 60%|████████████████████████████████████████████▎                             | 313895/524288 [00:07<00:04, 42845.41it/s] 61%|████████████████████████████████████████████▉                             | 318180/524288 [00:07<00:04, 42809.08it/s] 62%|█████████████████████████████████████████████▌                            | 322462/524288 [00:07<00:04, 42676.12it/s] 62%|██████████████████████████████████████████████                            | 326730/524288 [00:07<00:04, 42540.03it/s] 63%|██████████████████████████████████████████████▋                           | 330985/524288 [00:07<00:04, 42515.52it/s] 64%|███████████████████████████████████████████████▎                          | 335241/524288 [00:07<00:04, 42527.01it/s] 65%|███████████████████████████████████████████████▉                          | 339494/524288 [00:07<00:04, 42504.54it/s] 66%|████████████████████████████████████████████████▌                         | 343745/524288 [00:08<00:04, 42379.25it/s] 66%|█████████████████████████████████████████████████                         | 347984/524288 [00:08<00:04, 42375.80it/s] 67%|█████████████████████████████████████████████████▋                        | 352222/524288 [00:08<00:04, 42370.63it/s] 68%|██████████████████████████████████████████████████▎                       | 356514/524288 [00:08<00:03, 42533.48it/s] 69%|██████████████████████████████████████████████████▉                       | 360773/524288 [00:08<00:03, 42549.05it/s] 70%|███████████████████████████████████████████████████▌                      | 365040/524288 [00:08<00:03, 42584.61it/s] 70%|████████████████████████████████████████████████████                      | 369299/524288 [00:08<00:03, 42566.71it/s] 71%|████████████████████████████████████████████████████▋                     | 373567/524288 [00:08<00:03, 42598.43it/s] 72%|█████████████████████████████████████████████████████▎                    | 377827/524288 [00:08<00:03, 42576.81it/s] 73%|█████████████████████████████████████████████████████▉                    | 382085/524288 [00:08<00:03, 42560.35it/s] 74%|██████████████████████████████████████████████████████▌                   | 386342/524288 [00:09<00:03, 42552.28it/s] 75%|███████████████████████████████████████████████████████▏                  | 390598/524288 [00:09<00:03, 42453.66it/s] 75%|███████████████████████████████████████████████████████▋                  | 394863/524288 [00:09<00:03, 42510.93it/s] 76%|████████████████████████████████████████████████████████▎                 | 399135/524288 [00:09<00:02, 42571.62it/s] 77%|████████████████████████████████████████████████████████▉                 | 403393/524288 [00:09<00:02, 42570.43it/s] 78%|█████████████████████████████████████████████████████████▌                | 407651/524288 [00:09<00:02, 42462.73it/s] 79%|██████████████████████████████████████████████████████████▏               | 411898/524288 [00:09<00:02, 42343.40it/s] 79%|██████████████████████████████████████████████████████████▋               | 416202/524288 [00:09<00:02, 42550.23it/s] 80%|███████████████████████████████████████████████████████████▎              | 420483/524288 [00:09<00:02, 42626.96it/s] 81%|███████████████████████████████████████████████████████████▉              | 424746/524288 [00:09<00:02, 42559.19it/s] 82%|████████████████████████████████████████████████████████████▌             | 429003/524288 [00:10<00:02, 42431.43it/s] 83%|█████████████████████████████████████████████████████████████▏            | 433286/524288 [00:10<00:02, 42549.28it/s] 83%|█████████████████████████████████████████████████████████████▊            | 437590/524288 [00:10<00:02, 42693.25it/s] 84%|██████████████████████████████████████████████████████████████▎           | 441860/524288 [00:10<00:01, 42688.85it/s] 85%|██████████████████████████████████████████████████████████████▉           | 446129/524288 [00:10<00:01, 42575.12it/s] 86%|███████████████████████████████████████████████████████████████▌          | 450387/524288 [00:10<00:01, 42444.01it/s] 87%|████████████████████████████████████████████████████████████████▏         | 454638/524288 [00:10<00:01, 42463.04it/s] 88%|████████████████████████████████████████████████████████████████▊         | 458939/524288 [00:10<00:01, 42624.43it/s] 88%|█████████████████████████████████████████████████████████████████▍        | 463202/524288 [00:10<00:01, 42623.74it/s] 89%|█████████████████████████████████████████████████████████████████▉        | 467465/524288 [00:10<00:01, 42506.57it/s] 90%|██████████████████████████████████████████████████████████████████▌       | 471755/524288 [00:11<00:01, 42621.94it/s] 91%|███████████████████████████████████████████████████████████████████▏      | 476027/524288 [00:11<00:01, 42650.30it/s] 92%|███████████████████████████████████████████████████████████████████▊      | 480296/524288 [00:11<00:01, 42661.17it/s] 92%|████████████████████████████████████████████████████████████████████▍     | 484563/524288 [00:11<00:00, 42641.38it/s] 93%|████████████████████████████████████████████████████████████████████▉     | 488828/524288 [00:11<00:00, 42627.92it/s] 94%|█████████████████████████████████████████████████████████████████████▌    | 493091/524288 [00:11<00:00, 42618.54it/s] 95%|██████████████████████████████████████████████████████████████████████▏   | 497361/524288 [00:11<00:00, 42640.90it/s] 96%|██████████████████████████████████████████████████████████████████████▊   | 501658/524288 [00:11<00:00, 42737.28it/s] 96%|███████████████████████████████████████████████████████████████████████▍  | 505932/524288 [00:11<00:00, 42709.13it/s] 97%|████████████████████████████████████████████████████████████████████████  | 510203/524288 [00:11<00:00, 42700.49it/s] 98%|████████████████████████████████████████████████████████████████████████▌ | 514474/524288 [00:12<00:00, 42675.57it/s] 99%|█████████████████████████████████████████████████████████████████████████▏| 518742/524288 [00:12<00:00, 42634.99it/s]100%|█████████████████████████████████████████████████████████████████████████▊| 523006/524288 [00:12<00:00, 42605.86it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:12<00:00, 42149.86it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.90s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:06,  2.10s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:08,  2.29s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:11,  2.46s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:14,  2.62s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:17,  2.72s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:20,  2.80s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:23,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:26,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:29,  2.91s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:32,  2.92s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:35,  2.99s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:38,  2.97s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:41,  2.96s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:44,  2.96s/it]16it [00:44,  2.76s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:04,  3.26it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:06,  2.24it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:07,  1.66it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:08,  1.37it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:09,  1.14it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:09,  1.01it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:06<00:09,  1.07s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:07<00:09,  1.13s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:08<00:08,  1.17s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:07,  1.22s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:11<00:06,  1.24s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:12<00:05,  1.27s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:13<00:03,  1.30s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:15<00:02,  1.31s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:16<00:01,  1.34s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.34s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.13s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4585/524288 [00:00<00:11, 45842.39it/s]  2%|█▎                                                                          | 9303/524288 [00:00<00:11, 46623.90it/s]  3%|█▉                                                                         | 13966/524288 [00:00<00:10, 46433.12it/s]  4%|██▋                                                                        | 18610/524288 [00:00<00:10, 46119.68it/s]  4%|███▎                                                                       | 23223/524288 [00:00<00:10, 45937.70it/s]  5%|███▉                                                                       | 27817/524288 [00:00<00:10, 45826.09it/s]  6%|████▋                                                                      | 32400/524288 [00:00<00:10, 45706.00it/s]  7%|█████▎                                                                     | 36971/524288 [00:00<00:10, 45648.52it/s]  8%|█████▉                                                                     | 41536/524288 [00:00<00:10, 45597.12it/s]  9%|██████▌                                                                    | 46096/524288 [00:01<00:10, 45417.01it/s] 10%|███████▏                                                                   | 50642/524288 [00:01<00:10, 45427.40it/s] 11%|███████▉                                                                   | 55188/524288 [00:01<00:10, 45436.40it/s] 11%|████████▌                                                                  | 59732/524288 [00:01<00:10, 45370.84it/s] 12%|█████████▏                                                                 | 64289/524288 [00:01<00:10, 45429.10it/s] 13%|█████████▊                                                                 | 68832/524288 [00:01<00:10, 45363.15it/s] 14%|██████████▍                                                                | 73371/524288 [00:01<00:09, 45369.50it/s] 15%|███████████▏                                                               | 77908/524288 [00:01<00:09, 45236.48it/s] 16%|███████████▊                                                               | 82432/524288 [00:01<00:09, 45122.23it/s] 17%|████████████▍                                                              | 86945/524288 [00:01<00:09, 45103.63it/s] 17%|█████████████                                                              | 91473/524288 [00:02<00:09, 45154.40it/s] 18%|█████████████▋                                                             | 96015/524288 [00:02<00:09, 45233.15it/s] 19%|██████████████▏                                                           | 100548/524288 [00:02<00:09, 45260.05it/s] 20%|██████████████▊                                                           | 105086/524288 [00:02<00:09, 45294.40it/s] 21%|███████████████▍                                                          | 109625/524288 [00:02<00:09, 45319.86it/s] 22%|████████████████                                                          | 114180/524288 [00:02<00:09, 45385.51it/s] 23%|████████████████▊                                                         | 118719/524288 [00:02<00:08, 45332.09it/s] 24%|█████████████████▍                                                        | 123253/524288 [00:02<00:08, 45260.04it/s] 24%|██████████████████                                                        | 127780/524288 [00:02<00:08, 45224.94it/s] 25%|██████████████████▋                                                       | 132303/524288 [00:02<00:08, 45190.92it/s] 26%|███████████████████▎                                                      | 136848/524288 [00:03<00:08, 45265.44it/s] 27%|███████████████████▉                                                      | 141387/524288 [00:03<00:08, 45301.86it/s] 28%|████████████████████▌                                                     | 145918/524288 [00:03<00:08, 45263.50it/s] 29%|█████████████████████▏                                                    | 150445/524288 [00:03<00:08, 45247.58it/s] 30%|█████████████████████▊                                                    | 154970/524288 [00:03<00:08, 45152.97it/s] 30%|██████████████████████▌                                                   | 159486/524288 [00:03<00:08, 45016.60it/s] 31%|███████████████████████▏                                                  | 163988/524288 [00:03<00:08, 45001.28it/s] 32%|███████████████████████▊                                                  | 168489/524288 [00:03<00:07, 44803.58it/s] 33%|████████████████████████▍                                                 | 172994/524288 [00:03<00:07, 44873.95it/s] 34%|█████████████████████████                                                 | 177483/524288 [00:03<00:07, 44877.86it/s] 35%|█████████████████████████▋                                                | 182019/524288 [00:04<00:07, 45020.67it/s] 36%|██████████████████████████▎                                               | 186565/524288 [00:04<00:07, 45149.79it/s] 36%|██████████████████████████▉                                               | 191117/524288 [00:04<00:07, 45257.32it/s] 37%|███████████████████████████▌                                              | 195662/524288 [00:04<00:07, 45314.05it/s] 38%|████████████████████████████▎                                             | 200209/524288 [00:04<00:07, 45358.45it/s] 39%|████████████████████████████▉                                             | 204758/524288 [00:04<00:07, 45396.09it/s] 40%|█████████████████████████████▌                                            | 209298/524288 [00:04<00:07, 43276.42it/s] 41%|██████████████████████████████▏                                           | 213875/524288 [00:04<00:07, 43996.33it/s] 42%|██████████████████████████████▊                                           | 218425/524288 [00:04<00:06, 44434.68it/s] 43%|███████████████████████████████▍                                          | 222987/524288 [00:04<00:06, 44783.20it/s] 43%|████████████████████████████████                                          | 227545/524288 [00:05<00:06, 45016.67it/s] 44%|████████████████████████████████▊                                         | 232077/524288 [00:05<00:06, 45105.16it/s] 45%|█████████████████████████████████▍                                        | 236604/524288 [00:05<00:06, 45152.31it/s] 46%|██████████████████████████████████                                        | 241142/524288 [00:05<00:06, 45219.16it/s] 47%|██████████████████████████████████▋                                       | 245688/524288 [00:05<00:06, 45288.56it/s] 48%|███████████████████████████████████▎                                      | 250229/524288 [00:05<00:06, 45323.25it/s] 49%|███████████████████████████████████▉                                      | 254774/524288 [00:05<00:05, 45357.86it/s] 49%|████████████████████████████████████▌                                     | 259325/524288 [00:05<00:05, 45400.25it/s] 50%|█████████████████████████████████████▏                                    | 263876/524288 [00:05<00:05, 45430.47it/s] 51%|█████████████████████████████████████▉                                    | 268420/524288 [00:05<00:05, 45421.65it/s] 52%|██████████████████████████████████████▌                                   | 272963/524288 [00:06<00:05, 45354.20it/s] 53%|███████████████████████████████████████▏                                  | 277499/524288 [00:06<00:05, 45310.55it/s] 54%|███████████████████████████████████████▊                                  | 282033/524288 [00:06<00:05, 45316.28it/s] 55%|████████████████████████████████████████▍                                 | 286588/524288 [00:06<00:05, 45384.18it/s] 56%|█████████████████████████████████████████                                 | 291138/524288 [00:06<00:05, 45415.95it/s] 56%|█████████████████████████████████████████▋                                | 295704/524288 [00:06<00:05, 45487.18it/s] 57%|██████████████████████████████████████████▍                               | 300285/524288 [00:06<00:04, 45582.95it/s] 58%|███████████████████████████████████████████                               | 304871/524288 [00:06<00:04, 45664.80it/s] 59%|███████████████████████████████████████████▋                              | 309453/524288 [00:06<00:04, 45709.11it/s] 60%|████████████████████████████████████████████▎                             | 314024/524288 [00:06<00:04, 45678.23it/s] 61%|████████████████████████████████████████████▉                             | 318592/524288 [00:07<00:04, 45530.11it/s] 62%|█████████████████████████████████████████████▌                            | 323146/524288 [00:07<00:04, 45500.75it/s] 63%|██████████████████████████████████████████████▎                           | 327697/524288 [00:07<00:04, 45441.18it/s] 63%|██████████████████████████████████████████████▉                           | 332254/524288 [00:07<00:04, 45476.27it/s] 64%|███████████████████████████████████████████████▌                          | 336802/524288 [00:07<00:04, 45419.42it/s] 65%|████████████████████████████████████████████████▏                         | 341344/524288 [00:07<00:04, 45414.65it/s] 66%|████████████████████████████████████████████████▊                         | 345886/524288 [00:07<00:03, 45388.13it/s] 67%|█████████████████████████████████████████████████▍                        | 350425/524288 [00:07<00:03, 45262.97it/s] 68%|██████████████████████████████████████████████████                        | 354955/524288 [00:07<00:03, 45273.35it/s] 69%|██████████████████████████████████████████████████▋                       | 359500/524288 [00:07<00:03, 45325.01it/s] 69%|███████████████████████████████████████████████████▍                      | 364036/524288 [00:08<00:03, 45333.69it/s] 70%|████████████████████████████████████████████████████                      | 368570/524288 [00:08<00:03, 45305.94it/s] 71%|████████████████████████████████████████████████████▋                     | 373103/524288 [00:08<00:03, 45311.94it/s] 72%|█████████████████████████████████████████████████████▎                    | 377635/524288 [00:08<00:03, 44996.57it/s] 73%|█████████████████████████████████████████████████████▉                    | 382168/524288 [00:08<00:03, 45092.63it/s] 74%|██████████████████████████████████████████████████████▌                   | 386713/524288 [00:08<00:03, 45198.27it/s] 75%|███████████████████████████████████████████████████████▏                  | 391253/524288 [00:08<00:02, 45255.96it/s] 76%|███████████████████████████████████████████████████████▊                  | 395839/524288 [00:08<00:02, 45436.24it/s] 76%|████████████████████████████████████████████████████████▌                 | 400401/524288 [00:08<00:02, 45490.69it/s] 77%|█████████████████████████████████████████████████████████▏                | 404964/524288 [00:08<00:02, 45530.37it/s] 78%|█████████████████████████████████████████████████████████▊                | 409518/524288 [00:09<00:02, 45517.04it/s] 79%|██████████████████████████████████████████████████████████▍               | 414070/524288 [00:09<00:02, 45513.42it/s] 80%|███████████████████████████████████████████████████████████               | 418622/524288 [00:09<00:02, 45417.10it/s] 81%|███████████████████████████████████████████████████████████▋              | 423164/524288 [00:09<00:02, 45273.25it/s] 82%|████████████████████████████████████████████████████████████▎             | 427692/524288 [00:09<00:02, 45185.92it/s] 82%|█████████████████████████████████████████████████████████████             | 432211/524288 [00:09<00:02, 45006.40it/s] 83%|█████████████████████████████████████████████████████████████▋            | 436714/524288 [00:09<00:01, 45010.41it/s] 84%|██████████████████████████████████████████████████████████████▎           | 441216/524288 [00:09<00:01, 44908.98it/s] 85%|██████████████████████████████████████████████████████████████▉           | 445707/524288 [00:09<00:01, 44844.73it/s] 86%|███████████████████████████████████████████████████████████████▌          | 450218/524288 [00:09<00:01, 44922.97it/s] 87%|████████████████████████████████████████████████████████████████▏         | 454767/524288 [00:10<00:01, 45091.16it/s] 88%|████████████████████████████████████████████████████████████████▊         | 459277/524288 [00:10<00:01, 45062.84it/s] 88%|█████████████████████████████████████████████████████████████████▍        | 463784/524288 [00:10<00:01, 44843.50it/s] 89%|██████████████████████████████████████████████████████████████████        | 468269/524288 [00:10<00:01, 44843.76it/s] 90%|██████████████████████████████████████████████████████████████████▋       | 472779/524288 [00:10<00:01, 44919.20it/s] 91%|███████████████████████████████████████████████████████████████████▎      | 477293/524288 [00:10<00:01, 44981.99it/s] 92%|████████████████████████████████████████████████████████████████████      | 481799/524288 [00:10<00:00, 45004.59it/s] 93%|████████████████████████████████████████████████████████████████████▋     | 486300/524288 [00:10<00:00, 45000.28it/s] 94%|█████████████████████████████████████████████████████████████████████▎    | 490815/524288 [00:10<00:00, 45042.91it/s] 94%|█████████████████████████████████████████████████████████████████████▉    | 495328/524288 [00:10<00:00, 45067.62it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 499845/524288 [00:11<00:00, 45095.36it/s] 96%|███████████████████████████████████████████████████████████████████████▏  | 504372/524288 [00:11<00:00, 45146.33it/s] 97%|███████████████████████████████████████████████████████████████████████▊  | 508887/524288 [00:11<00:00, 45074.34it/s] 98%|████████████████████████████████████████████████████████████████████████▍ | 513403/524288 [00:11<00:00, 45097.28it/s] 99%|█████████████████████████████████████████████████████████████████████████ | 517929/524288 [00:11<00:00, 45142.61it/s]100%|█████████████████████████████████████████████████████████████████████████▋| 522444/524288 [00:11<00:00, 45090.44it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:11<00:00, 44758.54it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.90s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:06,  2.17s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:08,  2.32s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:11,  2.50s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:14,  2.65s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:17,  2.73s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:20,  2.80s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:23,  2.88s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:26,  2.92s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:29,  2.95s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:32,  3.00s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:35,  2.99s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:38,  2.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:41,  2.97s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:44,  3.02s/it]16it [00:44,  2.79s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:04,  3.23it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:06,  2.19it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:08,  1.61it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:09,  1.33it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:09,  1.13it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:09,  1.02it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:06<00:09,  1.06s/it] 50%|███████████████████████████████████████████                                           | 8/16 [00:07<00:08,  1.11s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:08<00:08,  1.16s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:07,  1.20s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:11<00:06,  1.23s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:12<00:05,  1.27s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:14<00:03,  1.32s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:15<00:02,  1.34s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:16<00:01,  1.37s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.38s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:18<00:00,  1.14s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4538/524288 [00:00<00:11, 45373.66it/s]  2%|█▎                                                                          | 9083/524288 [00:00<00:11, 45416.74it/s]  3%|█▉                                                                         | 13625/524288 [00:00<00:11, 44472.35it/s]  3%|██▌                                                                        | 18075/524288 [00:00<00:11, 43852.13it/s]  4%|███▏                                                                       | 22463/524288 [00:00<00:11, 43584.03it/s]  5%|███▊                                                                       | 26823/524288 [00:00<00:11, 43493.46it/s]  6%|████▍                                                                      | 31173/524288 [00:00<00:11, 43364.89it/s]  7%|█████                                                                      | 35523/524288 [00:00<00:11, 43404.54it/s]  8%|█████▋                                                                     | 39864/524288 [00:00<00:11, 43309.62it/s]  8%|██████▎                                                                    | 44196/524288 [00:01<00:11, 43176.70it/s]  9%|██████▉                                                                    | 48514/524288 [00:01<00:11, 43117.30it/s] 10%|███████▌                                                                   | 52846/524288 [00:01<00:10, 43177.11it/s] 11%|████████▏                                                                  | 57177/524288 [00:01<00:10, 43215.01it/s] 12%|████████▊                                                                  | 61499/524288 [00:01<00:10, 43132.99it/s] 13%|█████████▍                                                                 | 65813/524288 [00:01<00:10, 43118.58it/s] 13%|██████████                                                                 | 70125/524288 [00:01<00:10, 43116.40it/s] 14%|██████████▋                                                                | 74445/524288 [00:01<00:10, 43140.05it/s] 15%|███████████▎                                                               | 78760/524288 [00:01<00:10, 42804.69it/s] 16%|███████████▉                                                               | 83043/524288 [00:01<00:10, 42811.13it/s] 17%|████████████▍                                                              | 87347/524288 [00:02<00:10, 42876.83it/s] 17%|█████████████                                                              | 91637/524288 [00:02<00:10, 42880.29it/s] 18%|█████████████▋                                                             | 95963/524288 [00:02<00:09, 42991.48it/s] 19%|██████████████▏                                                           | 100273/524288 [00:02<00:09, 43021.45it/s] 20%|██████████████▊                                                           | 104576/524288 [00:02<00:09, 42938.95it/s] 21%|███████████████▎                                                          | 108925/524288 [00:02<00:09, 43102.82it/s] 22%|███████████████▉                                                          | 113269/524288 [00:02<00:09, 43201.99it/s] 22%|████████████████▌                                                         | 117595/524288 [00:02<00:09, 43217.99it/s] 23%|█████████████████▏                                                        | 121917/524288 [00:02<00:09, 43189.35it/s] 24%|█████████████████▊                                                        | 126251/524288 [00:02<00:09, 43231.11it/s] 25%|██████████████████▍                                                       | 130583/524288 [00:03<00:09, 43257.06it/s] 26%|███████████████████                                                       | 134919/524288 [00:03<00:08, 43287.13it/s] 27%|███████████████████▋                                                      | 139259/524288 [00:03<00:08, 43318.27it/s] 27%|████████████████████▎                                                     | 143707/524288 [00:03<00:08, 43665.25it/s] 28%|████████████████████▉                                                     | 148146/524288 [00:03<00:08, 43880.22it/s] 29%|█████████████████████▌                                                    | 152600/524288 [00:03<00:08, 44074.81it/s] 30%|██████████████████████▏                                                   | 157050/524288 [00:03<00:08, 44199.29it/s] 31%|██████████████████████▊                                                   | 161503/524288 [00:03<00:08, 44297.61it/s] 32%|███████████████████████▍                                                  | 165952/524288 [00:03<00:08, 44354.54it/s] 33%|████████████████████████                                                  | 170420/524288 [00:03<00:07, 44451.13it/s] 33%|████████████████████████▋                                                 | 174901/524288 [00:04<00:07, 44555.70it/s] 34%|█████████████████████████▎                                                | 179357/524288 [00:04<00:07, 44483.01it/s] 35%|█████████████████████████▉                                                | 183806/524288 [00:04<00:07, 44458.37it/s] 36%|██████████████████████████▌                                               | 188252/524288 [00:04<00:07, 44430.66it/s] 37%|███████████████████████████▏                                              | 192724/524288 [00:04<00:07, 44515.58it/s] 38%|███████████████████████████▊                                              | 197199/524288 [00:04<00:07, 44583.81it/s] 38%|████████████████████████████▍                                             | 201664/524288 [00:04<00:07, 44602.68it/s] 39%|█████████████████████████████                                             | 206125/524288 [00:04<00:07, 44138.11it/s] 40%|█████████████████████████████▋                                            | 210540/524288 [00:04<00:07, 43871.14it/s] 41%|██████████████████████████████▎                                           | 214929/524288 [00:04<00:07, 43726.17it/s] 42%|██████████████████████████████▉                                           | 219303/524288 [00:05<00:06, 43680.05it/s] 43%|███████████████████████████████▌                                          | 223672/524288 [00:05<00:06, 43611.06it/s] 43%|████████████████████████████████▏                                         | 228034/524288 [00:05<00:06, 43436.40it/s] 44%|████████████████████████████████▊                                         | 232378/524288 [00:05<00:06, 43236.36it/s] 45%|█████████████████████████████████▍                                        | 236702/524288 [00:05<00:06, 43121.86it/s] 46%|██████████████████████████████████                                        | 241015/524288 [00:05<00:06, 43062.10it/s] 47%|██████████████████████████████████▋                                       | 245322/524288 [00:05<00:06, 43053.85it/s] 48%|███████████████████████████████████▏                                      | 249655/524288 [00:05<00:06, 43133.59it/s] 48%|███████████████████████████████████▊                                      | 253969/524288 [00:05<00:06, 43118.70it/s] 49%|████████████████████████████████████▍                                     | 258281/524288 [00:05<00:06, 43090.30it/s] 50%|█████████████████████████████████████                                     | 262591/524288 [00:06<00:06, 42999.62it/s] 51%|█████████████████████████████████████▋                                    | 266892/524288 [00:06<00:05, 42996.12it/s] 52%|██████████████████████████████████████▎                                   | 271192/524288 [00:06<00:05, 42948.22it/s] 53%|██████████████████████████████████████▉                                   | 275495/524288 [00:06<00:05, 42970.01it/s] 53%|███████████████████████████████████████▍                                  | 279803/524288 [00:06<00:05, 43001.15it/s] 54%|████████████████████████████████████████                                  | 284104/524288 [00:06<00:05, 42916.62it/s] 55%|████████████████████████████████████████▋                                 | 288399/524288 [00:06<00:05, 42923.29it/s] 56%|█████████████████████████████████████████▎                                | 292702/524288 [00:06<00:05, 42952.04it/s] 57%|█████████████████████████████████████████▉                                | 296998/524288 [00:06<00:05, 42951.00it/s] 57%|██████████████████████████████████████████▌                               | 301294/524288 [00:06<00:05, 42807.67it/s] 58%|███████████████████████████████████████████▏                              | 305575/524288 [00:07<00:05, 42772.45it/s] 59%|███████████████████████████████████████████▋                              | 309853/524288 [00:07<00:05, 42752.98it/s] 60%|████████████████████████████████████████████▎                             | 314187/524288 [00:07<00:04, 42925.18it/s] 61%|████████████████████████████████████████████▉                             | 318525/524288 [00:07<00:04, 43058.86it/s] 62%|█████████████████████████████████████████████▌                            | 322836/524288 [00:07<00:04, 43072.35it/s] 62%|██████████████████████████████████████████████▏                           | 327144/524288 [00:07<00:04, 42891.51it/s] 63%|██████████████████████████████████████████████▊                           | 331434/524288 [00:07<00:04, 42771.40it/s] 64%|███████████████████████████████████████████████▍                          | 335712/524288 [00:07<00:04, 42321.51it/s] 65%|███████████████████████████████████████████████▉                          | 339958/524288 [00:07<00:04, 42360.53it/s] 66%|████████████████████████████████████████████████▌                         | 344205/524288 [00:07<00:04, 42392.18it/s] 66%|█████████████████████████████████████████████████▏                        | 348465/524288 [00:08<00:04, 42452.06it/s] 67%|█████████████████████████████████████████████████▊                        | 352738/524288 [00:08<00:04, 42534.00it/s] 68%|██████████████████████████████████████████████████▍                       | 357036/524288 [00:08<00:03, 42666.58it/s] 69%|███████████████████████████████████████████████████                       | 361347/524288 [00:08<00:03, 42797.44it/s] 70%|███████████████████████████████████████████████████▌                      | 365641/524288 [00:08<00:03, 42837.32it/s] 71%|████████████████████████████████████████████████████▏                     | 369925/524288 [00:08<00:03, 41875.21it/s] 71%|████████████████████████████████████████████████████▊                     | 374249/524288 [00:08<00:03, 42275.01it/s] 72%|█████████████████████████████████████████████████████▍                    | 378565/524288 [00:08<00:03, 42535.11it/s] 73%|██████████████████████████████████████████████████████                    | 382876/524288 [00:08<00:03, 42702.89it/s] 74%|██████████████████████████████████████████████████████▋                   | 387194/524288 [00:08<00:03, 42842.40it/s] 75%|███████████████████████████████████████████████████████▎                  | 391528/524288 [00:09<00:03, 42987.83it/s] 76%|███████████████████████████████████████████████████████▊                  | 395872/524288 [00:09<00:02, 43120.79it/s] 76%|████████████████████████████████████████████████████████▍                 | 400193/524288 [00:09<00:02, 43145.50it/s] 77%|█████████████████████████████████████████████████████████                 | 404509/524288 [00:09<00:02, 43038.56it/s] 78%|█████████████████████████████████████████████████████████▋                | 408814/524288 [00:09<00:02, 42987.48it/s] 79%|██████████████████████████████████████████████████████████▎               | 413114/524288 [00:09<00:02, 42887.70it/s] 80%|██████████████████████████████████████████████████████████▉               | 417404/524288 [00:09<00:02, 42852.79it/s] 80%|███████████████████████████████████████████████████████████▌              | 421722/524288 [00:09<00:02, 42949.27it/s] 81%|████████████████████████████████████████████████████████████▏             | 426025/524288 [00:09<00:02, 42969.86it/s] 82%|████████████████████████████████████████████████████████████▋             | 430323/524288 [00:09<00:02, 42963.95it/s] 83%|█████████████████████████████████████████████████████████████▎            | 434645/524288 [00:10<00:02, 43039.11it/s] 84%|█████████████████████████████████████████████████████████████▉            | 438949/524288 [00:10<00:01, 43016.33it/s] 85%|██████████████████████████████████████████████████████████████▌           | 443251/524288 [00:10<00:01, 42947.63it/s] 85%|███████████████████████████████████████████████████████████████▏          | 447546/524288 [00:10<00:01, 42919.86it/s] 86%|███████████████████████████████████████████████████████████████▊          | 451848/524288 [00:10<00:01, 42948.39it/s] 87%|████████████████████████████████████████████████████████████████▍         | 456163/524288 [00:10<00:01, 43006.20it/s] 88%|████████████████████████████████████████████████████████████████▉         | 460481/524288 [00:10<00:01, 43056.82it/s] 89%|█████████████████████████████████████████████████████████████████▌        | 464787/524288 [00:10<00:01, 43035.52it/s] 89%|██████████████████████████████████████████████████████████████████▏       | 469105/524288 [00:10<00:01, 43075.91it/s] 90%|██████████████████████████████████████████████████████████████████▊       | 473432/524288 [00:10<00:01, 43131.99it/s] 91%|███████████████████████████████████████████████████████████████████▍      | 477746/524288 [00:11<00:01, 43121.61it/s] 92%|████████████████████████████████████████████████████████████████████      | 482110/524288 [00:11<00:00, 43274.73it/s] 93%|████████████████████████████████████████████████████████████████████▋     | 486462/524288 [00:11<00:00, 43346.59it/s] 94%|█████████████████████████████████████████████████████████████████████▎    | 490797/524288 [00:11<00:00, 43314.21it/s] 94%|█████████████████████████████████████████████████████████████████████▉    | 495129/524288 [00:11<00:00, 43256.66it/s] 95%|██████████████████████████████████████████████████████████████████████▍   | 499455/524288 [00:11<00:00, 43125.42it/s] 96%|███████████████████████████████████████████████████████████████████████   | 503768/524288 [00:11<00:00, 42966.16it/s] 97%|███████████████████████████████████████████████████████████████████████▋  | 508065/524288 [00:11<00:00, 42864.89it/s] 98%|████████████████████████████████████████████████████████████████████████▎ | 512361/524288 [00:11<00:00, 42891.70it/s] 99%|████████████████████████████████████████████████████████████████████████▉ | 516715/524288 [00:11<00:00, 43084.41it/s] 99%|█████████████████████████████████████████████████████████████████████████▌| 521024/524288 [00:12<00:00, 42845.70it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:12<00:00, 43110.12it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.63s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.55s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:04,  1.67s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:07,  1.83s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:09,  1.94s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:11,  2.05s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:13,  2.09s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:15,  2.14s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:18,  2.20s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:20,  2.25s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:22,  2.26s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:25,  2.26s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:27,  2.31s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:29,  2.32s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:32,  2.30s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:34,  2.28s/it]16it [00:34,  2.14s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:03,  4.45it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:04,  3.03it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:05,  2.25it/s] 25%|█████████████████████▌                                                                | 4/16 [00:01<00:06,  1.88it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:02<00:06,  1.61it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:03<00:06,  1.46it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:04<00:06,  1.35it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:05<00:06,  1.28it/s] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:06<00:05,  1.24it/s] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:06<00:05,  1.20it/s] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:07<00:04,  1.16it/s] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:08<00:03,  1.12it/s] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:09<00:02,  1.09it/s] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:10<00:01,  1.07it/s] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:11<00:00,  1.06it/s]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:12<00:00,  1.05it/s]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:12<00:00,  1.26it/s]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▊                                                                           | 5835/524288 [00:00<00:08, 58338.23it/s]  2%|█▋                                                                         | 11798/524288 [00:00<00:08, 59093.51it/s]  3%|██▌                                                                        | 17708/524288 [00:00<00:08, 58839.27it/s]  5%|███▍                                                                       | 23593/524288 [00:00<00:08, 58357.99it/s]  6%|████▏                                                                      | 29473/524288 [00:00<00:08, 58512.74it/s]  7%|█████                                                                      | 35432/524288 [00:00<00:08, 58874.08it/s]  8%|█████▉                                                                     | 41324/524288 [00:00<00:08, 58885.27it/s]  9%|██████▊                                                                    | 47213/524288 [00:00<00:08, 57288.83it/s] 10%|███████▌                                                                   | 52951/524288 [00:00<00:08, 57142.36it/s] 11%|████████▍                                                                  | 58682/524288 [00:01<00:08, 57190.39it/s] 12%|█████████▏                                                                 | 64445/524288 [00:01<00:08, 57322.35it/s] 13%|██████████                                                                 | 70181/524288 [00:01<00:07, 57297.49it/s] 14%|██████████▊                                                                | 75913/524288 [00:01<00:07, 57211.74it/s] 16%|███████████▋                                                               | 81636/524288 [00:01<00:07, 57192.30it/s] 17%|████████████▍                                                              | 87378/524288 [00:01<00:07, 57257.15it/s] 18%|█████████████▎                                                             | 93137/524288 [00:01<00:07, 57354.85it/s] 19%|██████████████▏                                                            | 98888/524288 [00:01<00:07, 57400.19it/s] 20%|██████████████▊                                                           | 104629/524288 [00:01<00:07, 57359.78it/s] 21%|███████████████▌                                                          | 110421/524288 [00:01<00:07, 57525.41it/s] 22%|████████████████▍                                                         | 116174/524288 [00:02<00:07, 57458.93it/s] 23%|█████████████████▏                                                        | 121928/524288 [00:02<00:06, 57482.34it/s] 24%|██████████████████                                                        | 127677/524288 [00:02<00:06, 57430.39it/s] 25%|██████████████████▊                                                       | 133421/524288 [00:02<00:06, 57202.47it/s] 27%|███████████████████▋                                                      | 139142/524288 [00:02<00:06, 57136.45it/s] 28%|████████████████████▍                                                     | 144880/524288 [00:02<00:06, 57206.92it/s] 29%|█████████████████████▎                                                    | 150667/524288 [00:02<00:06, 57403.66it/s] 30%|██████████████████████                                                    | 156408/524288 [00:02<00:06, 57369.08it/s] 31%|██████████████████████▉                                                   | 162146/524288 [00:02<00:06, 57288.09it/s] 32%|███████████████████████▋                                                  | 167875/524288 [00:02<00:06, 57207.47it/s] 33%|████████████████████████▌                                                 | 173596/524288 [00:03<00:06, 57175.00it/s] 34%|█████████████████████████▎                                                | 179379/524288 [00:03<00:06, 57369.98it/s] 35%|██████████████████████████▏                                               | 185157/524288 [00:03<00:05, 57490.03it/s] 36%|██████████████████████████▉                                               | 190907/524288 [00:03<00:05, 57444.89it/s] 38%|███████████████████████████▊                                              | 196652/524288 [00:03<00:05, 57347.02it/s] 39%|████████████████████████████▌                                             | 202397/524288 [00:03<00:05, 57375.86it/s] 40%|█████████████████████████████▍                                            | 208149/524288 [00:03<00:05, 57417.66it/s] 41%|██████████████████████████████▏                                           | 213905/524288 [00:03<00:05, 57457.46it/s] 42%|███████████████████████████████                                           | 219651/524288 [00:03<00:05, 57331.83it/s] 43%|███████████████████████████████▊                                          | 225385/524288 [00:03<00:05, 57228.09it/s] 44%|████████████████████████████████▌                                         | 231139/524288 [00:04<00:05, 57319.50it/s] 45%|█████████████████████████████████▍                                        | 236872/524288 [00:04<00:05, 56955.96it/s] 46%|██████████████████████████████████▏                                       | 242575/524288 [00:04<00:04, 56975.71it/s] 47%|███████████████████████████████████                                       | 248273/524288 [00:04<00:04, 56924.54it/s] 48%|███████████████████████████████████▊                                      | 253966/524288 [00:04<00:04, 56717.76it/s] 50%|████████████████████████████████████▋                                     | 259639/524288 [00:04<00:04, 56663.40it/s] 51%|█████████████████████████████████████▍                                    | 265406/524288 [00:04<00:04, 56962.41it/s] 52%|██████████████████████████████████████▎                                   | 271103/524288 [00:04<00:04, 56870.49it/s] 53%|███████████████████████████████████████                                   | 276791/524288 [00:04<00:04, 56722.59it/s] 54%|███████████████████████████████████████▊                                  | 282473/524288 [00:04<00:04, 56749.57it/s] 55%|████████████████████████████████████████▋                                 | 288217/524288 [00:05<00:04, 56952.74it/s] 56%|█████████████████████████████████████████▍                                | 293922/524288 [00:05<00:04, 56980.33it/s] 57%|██████████████████████████████████████████▎                               | 299621/524288 [00:05<00:03, 56906.18it/s] 58%|███████████████████████████████████████████                               | 305340/524288 [00:05<00:03, 56990.04it/s] 59%|███████████████████████████████████████████▉                              | 311053/524288 [00:05<00:03, 57029.62it/s] 60%|████████████████████████████████████████████▋                             | 316796/524288 [00:05<00:03, 57147.26it/s] 62%|█████████████████████████████████████████████▌                            | 322511/524288 [00:05<00:03, 57027.53it/s] 63%|██████████████████████████████████████████████▎                           | 328218/524288 [00:05<00:03, 57037.74it/s] 64%|███████████████████████████████████████████████▏                          | 333922/524288 [00:05<00:03, 56882.38it/s] 65%|███████████████████████████████████████████████▉                          | 339611/524288 [00:05<00:03, 56842.15it/s] 66%|████████████████████████████████████████████████▋                         | 345331/524288 [00:06<00:03, 56945.67it/s] 67%|█████████████████████████████████████████████████▌                        | 351026/524288 [00:06<00:03, 56905.14it/s] 68%|██████████████████████████████████████████████████▎                       | 356717/524288 [00:06<00:02, 56898.36it/s] 69%|███████████████████████████████████████████████████▏                      | 362466/524288 [00:06<00:02, 57072.57it/s] 70%|███████████████████████████████████████████████████▉                      | 368174/524288 [00:06<00:02, 57022.17it/s] 71%|████████████████████████████████████████████████████▊                     | 373972/524288 [00:06<00:02, 57307.88it/s] 72%|█████████████████████████████████████████████████████▌                    | 379703/524288 [00:06<00:02, 57265.40it/s] 74%|██████████████████████████████████████████████████████▍                   | 385430/524288 [00:06<00:02, 57173.55it/s] 75%|███████████████████████████████████████████████████████▏                  | 391150/524288 [00:06<00:02, 57179.93it/s] 76%|████████████████████████████████████████████████████████                  | 396869/524288 [00:06<00:02, 57144.88it/s] 77%|████████████████████████████████████████████████████████▊                 | 402613/524288 [00:07<00:02, 57231.63it/s] 78%|█████████████████████████████████████████████████████████▋                | 408337/524288 [00:07<00:02, 57210.77it/s] 79%|██████████████████████████████████████████████████████████▍               | 414059/524288 [00:07<00:01, 57106.36it/s] 80%|███████████████████████████████████████████████████████████▏              | 419770/524288 [00:07<00:01, 57052.20it/s] 81%|████████████████████████████████████████████████████████████              | 425476/524288 [00:07<00:01, 57047.31it/s] 82%|████████████████████████████████████████████████████████████▊             | 431232/524288 [00:07<00:01, 57198.03it/s] 83%|█████████████████████████████████████████████████████████████▋            | 436961/524288 [00:07<00:01, 57223.07it/s] 84%|██████████████████████████████████████████████████████████████▍           | 442684/524288 [00:07<00:01, 57215.84it/s] 86%|███████████████████████████████████████████████████████████████▎          | 448406/524288 [00:07<00:01, 57031.30it/s] 87%|████████████████████████████████████████████████████████████████          | 454159/524288 [00:07<00:01, 57179.58it/s] 88%|████████████████████████████████████████████████████████████████▉         | 459878/524288 [00:08<00:01, 57170.39it/s] 89%|█████████████████████████████████████████████████████████████████▋        | 465596/524288 [00:08<00:01, 57011.03it/s] 90%|██████████████████████████████████████████████████████████████████▌       | 471298/524288 [00:08<00:00, 56950.05it/s] 91%|███████████████████████████████████████████████████████████████████▎      | 476994/524288 [00:08<00:00, 56942.28it/s] 92%|████████████████████████████████████████████████████████████████████▏     | 482719/524288 [00:08<00:00, 57032.09it/s] 93%|████████████████████████████████████████████████████████████████████▉     | 488434/524288 [00:08<00:00, 57064.57it/s] 94%|█████████████████████████████████████████████████████████████████████▋    | 494141/524288 [00:08<00:00, 57020.79it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 499847/524288 [00:08<00:00, 57029.87it/s] 96%|███████████████████████████████████████████████████████████████████████▎  | 505551/524288 [00:08<00:00, 56957.06it/s] 98%|████████████████████████████████████████████████████████████████████████▏ | 511283/524288 [00:08<00:00, 57063.70it/s] 99%|████████████████████████████████████████████████████████████████████████▉ | 516990/524288 [00:09<00:00, 57053.30it/s]100%|█████████████████████████████████████████████████████████████████████████▊| 522696/524288 [00:09<00:00, 56720.09it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:09<00:00, 56979.78it/s]
0it [00:00, ?it/s]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
1it [00:01,  1.98s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
2it [00:03,  1.86s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
3it [00:05,  2.01s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
4it [00:08,  2.19s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
5it [00:11,  2.37s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
6it [00:13,  2.49s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
7it [00:16,  2.58s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
8it [00:19,  2.63s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
9it [00:22,  2.72s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
10it [00:25,  2.74s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
11it [00:27,  2.76s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
12it [00:30,  2.76s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
13it [00:33,  2.86s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
14it [00:36,  2.84s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
15it [00:39,  2.82s/it]/home/users/delon/aemulusnu_massfunction/spatial_jackknife_and_NvsM.py:73: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  ax.scatter(bin_cnters, N, s=50, marker='x', c=color)
16it [00:42,  2.83s/it]16it [00:42,  2.63s/it]
  0%|                                                                                              | 0/16 [00:00<?, ?it/s]  6%|█████▍                                                                                | 1/16 [00:00<00:04,  3.57it/s] 12%|██████████▊                                                                           | 2/16 [00:00<00:05,  2.49it/s] 19%|████████████████▏                                                                     | 3/16 [00:01<00:07,  1.82it/s] 25%|█████████████████████▌                                                                | 4/16 [00:02<00:07,  1.51it/s] 31%|██████████████████████████▉                                                           | 5/16 [00:03<00:08,  1.26it/s] 38%|████████████████████████████████▎                                                     | 6/16 [00:04<00:08,  1.13it/s] 44%|█████████████████████████████████████▋                                                | 7/16 [00:05<00:08,  1.05it/s] 50%|███████████████████████████████████████████                                           | 8/16 [00:06<00:08,  1.01s/it] 56%|████████████████████████████████████████████████▍                                     | 9/16 [00:07<00:07,  1.06s/it] 62%|█████████████████████████████████████████████████████▏                               | 10/16 [00:09<00:06,  1.10s/it] 69%|██████████████████████████████████████████████████████████▍                          | 11/16 [00:10<00:05,  1.12s/it] 75%|███████████████████████████████████████████████████████████████▊                     | 12/16 [00:11<00:04,  1.16s/it] 81%|█████████████████████████████████████████████████████████████████████                | 13/16 [00:12<00:03,  1.19s/it] 88%|██████████████████████████████████████████████████████████████████████████▍          | 14/16 [00:13<00:02,  1.21s/it] 94%|███████████████████████████████████████████████████████████████████████████████▋     | 15/16 [00:15<00:01,  1.23s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.24s/it]100%|█████████████████████████████████████████████████████████████████████████████████████| 16/16 [00:16<00:00,  1.03s/it]
  0%|                                                                                          | 0/524288 [00:00<?, ?it/s]  1%|▋                                                                           | 4689/524288 [00:00<00:11, 46883.67it/s]  2%|█▎                                                                          | 9397/524288 [00:00<00:10, 46996.08it/s]  3%|██                                                                         | 14122/524288 [00:00<00:10, 47107.01it/s]  4%|██▋                                                                        | 18833/524288 [00:00<00:10, 46981.35it/s]  4%|███▎                                                                       | 23532/524288 [00:00<00:10, 46927.78it/s]  5%|████                                                                       | 28225/524288 [00:00<00:10, 46658.69it/s]  6%|████▋                                                                      | 32892/524288 [00:00<00:10, 46304.31it/s]  7%|█████▎                                                                     | 37523/524288 [00:00<00:10, 46151.64it/s]  8%|██████                                                                     | 42139/524288 [00:00<00:10, 46018.57it/s]  9%|██████▋                                                                    | 46776/524288 [00:01<00:10, 46124.78it/s] 10%|███████▎                                                                   | 51389/524288 [00:01<00:10, 46096.78it/s] 11%|████████                                                                   | 55999/524288 [00:01<00:10, 45974.78it/s] 12%|████████▋                                                                  | 60597/524288 [00:01<00:10, 45930.87it/s] 12%|█████████▎                                                                 | 65259/524288 [00:01<00:09, 46137.56it/s] 13%|█████████▉                                                                 | 69879/524288 [00:01<00:09, 46155.09it/s] 14%|██████████▋                                                                | 74495/524288 [00:01<00:09, 46095.73it/s] 15%|███████████▎                                                               | 79105/524288 [00:01<00:09, 45940.35it/s] 16%|███████████▉                                                               | 83741/524288 [00:01<00:09, 46062.38it/s] 17%|████████████▋                                                              | 88387/524288 [00:01<00:09, 46180.45it/s] 18%|█████████████▎                                                             | 93037/524288 [00:02<00:09, 46273.24it/s] 19%|█████████████▉                                                             | 97665/524288 [00:02<00:09, 46112.13it/s] 20%|██████████████▍                                                           | 102279/524288 [00:02<00:09, 46117.06it/s] 20%|███████████████                                                           | 106900/524288 [00:02<00:09, 46141.76it/s] 21%|███████████████▋                                                          | 111515/524288 [00:02<00:08, 46141.51it/s] 22%|████████████████▍                                                         | 116142/524288 [00:02<00:08, 46177.72it/s] 23%|█████████████████                                                         | 120760/524288 [00:02<00:08, 46066.51it/s] 24%|█████████████████▋                                                        | 125367/524288 [00:02<00:08, 45940.21it/s] 25%|██████████████████▎                                                       | 129986/524288 [00:02<00:08, 46013.12it/s] 26%|███████████████████                                                       | 134671/524288 [00:02<00:08, 46262.54it/s] 27%|███████████████████▋                                                      | 139298/524288 [00:03<00:08, 46249.63it/s] 27%|████████████████████▎                                                     | 143924/524288 [00:03<00:08, 46121.32it/s] 28%|████████████████████▉                                                     | 148547/524288 [00:03<00:08, 46153.08it/s] 29%|█████████████████████▌                                                    | 153163/524288 [00:03<00:08, 45976.13it/s] 30%|██████████████████████▎                                                   | 157761/524288 [00:03<00:07, 45947.91it/s] 31%|██████████████████████▉                                                   | 162378/524288 [00:03<00:07, 46011.80it/s] 32%|███████████████████████▌                                                  | 166980/524288 [00:03<00:07, 45958.81it/s] 33%|████████████████████████▏                                                 | 171606/524288 [00:03<00:07, 46046.69it/s] 34%|████████████████████████▊                                                 | 176235/524288 [00:03<00:07, 46119.00it/s] 34%|█████████████████████████▌                                                | 180847/524288 [00:03<00:07, 46062.00it/s] 35%|██████████████████████████▏                                               | 185454/524288 [00:04<00:07, 45897.08it/s] 36%|██████████████████████████▊                                               | 190044/524288 [00:04<00:07, 45856.86it/s] 37%|███████████████████████████▍                                              | 194630/524288 [00:04<00:07, 45834.02it/s] 38%|████████████████████████████                                              | 199214/524288 [00:04<00:07, 45791.86it/s] 39%|████████████████████████████▊                                             | 203794/524288 [00:04<00:07, 45766.94it/s] 40%|█████████████████████████████▍                                            | 208371/524288 [00:04<00:06, 45730.18it/s] 41%|██████████████████████████████                                            | 212961/524288 [00:04<00:06, 45777.99it/s] 42%|██████████████████████████████▋                                           | 217596/524288 [00:04<00:06, 45946.52it/s] 42%|███████████████████████████████▎                                          | 222244/524288 [00:04<00:06, 46103.77it/s] 43%|████████████████████████████████                                          | 226877/524288 [00:04<00:06, 46170.44it/s] 44%|████████████████████████████████▋                                         | 231495/524288 [00:05<00:06, 46120.44it/s] 45%|█████████████████████████████████▎                                        | 236148/524288 [00:05<00:06, 46241.68it/s] 46%|█████████████████████████████████▉                                        | 240773/524288 [00:05<00:06, 46201.60it/s] 47%|██████████████████████████████████▋                                       | 245394/524288 [00:05<00:06, 46141.30it/s] 48%|███████████████████████████████████▎                                      | 250009/524288 [00:05<00:05, 46126.80it/s] 49%|███████████████████████████████████▉                                      | 254622/524288 [00:05<00:05, 46060.66it/s] 49%|████████████████████████████████████▌                                     | 259321/524288 [00:05<00:05, 46338.27it/s] 50%|█████████████████████████████████████▎                                    | 263955/524288 [00:05<00:05, 46320.93it/s] 51%|█████████████████████████████████████▉                                    | 268605/524288 [00:05<00:05, 46372.71it/s] 52%|██████████████████████████████████████▌                                   | 273243/524288 [00:05<00:05, 46362.81it/s] 53%|███████████████████████████████████████▏                                  | 277880/524288 [00:06<00:05, 46363.49it/s] 54%|███████████████████████████████████████▉                                  | 282526/524288 [00:06<00:05, 46390.58it/s] 55%|████████████████████████████████████████▌                                 | 287166/524288 [00:06<00:05, 46032.76it/s] 56%|█████████████████████████████████████████▏                                | 291787/524288 [00:06<00:05, 46083.87it/s] 57%|█████████████████████████████████████████▊                                | 296452/524288 [00:06<00:04, 46251.15it/s] 57%|██████████████████████████████████████████▍                               | 301103/524288 [00:06<00:04, 46326.91it/s] 58%|███████████████████████████████████████████▏                              | 305754/524288 [00:06<00:04, 46380.48it/s] 59%|███████████████████████████████████████████▊                              | 310393/524288 [00:06<00:04, 46285.20it/s] 60%|████████████████████████████████████████████▍                             | 315025/524288 [00:06<00:04, 46294.37it/s] 61%|█████████████████████████████████████████████                             | 319655/524288 [00:06<00:04, 46292.80it/s] 62%|█████████████████████████████████████████████▊                            | 324314/524288 [00:07<00:04, 46378.21it/s] 63%|██████████████████████████████████████████████▍                           | 328952/524288 [00:07<00:04, 46353.02it/s] 64%|███████████████████████████████████████████████                           | 333588/524288 [00:07<00:04, 46344.33it/s] 65%|███████████████████████████████████████████████▋                          | 338223/524288 [00:07<00:04, 46321.72it/s] 65%|████████████████████████████████████████████████▍                         | 342856/524288 [00:07<00:03, 46298.14it/s] 66%|█████████████████████████████████████████████████                         | 347486/524288 [00:07<00:03, 46206.47it/s] 67%|█████████████████████████████████████████████████▋                        | 352107/524288 [00:07<00:03, 46173.57it/s] 68%|██████████████████████████████████████████████████▎                       | 356725/524288 [00:07<00:03, 46152.97it/s] 69%|███████████████████████████████████████████████████                       | 361368/524288 [00:07<00:03, 46232.45it/s] 70%|███████████████████████████████████████████████████▋                      | 365992/524288 [00:07<00:03, 46111.27it/s] 71%|████████████████████████████████████████████████████▎                     | 370646/524288 [00:08<00:03, 46237.24it/s] 72%|████████████████████████████████████████████████████▉                     | 375270/524288 [00:08<00:03, 46194.55it/s] 72%|█████████████████████████████████████████████████████▌                    | 379899/524288 [00:08<00:03, 46221.59it/s] 73%|██████████████████████████████████████████████████████▎                   | 384522/524288 [00:08<00:03, 46024.62it/s] 74%|██████████████████████████████████████████████████████▉                   | 389125/524288 [00:08<00:02, 45910.27it/s] 75%|███████████████████████████████████████████████████████▌                  | 393717/524288 [00:08<00:02, 45714.07it/s] 76%|████████████████████████████████████████████████████████▏                 | 398289/524288 [00:08<00:02, 45683.35it/s] 77%|████████████████████████████████████████████████████████▊                 | 402858/524288 [00:08<00:02, 45676.40it/s] 78%|█████████████████████████████████████████████████████████▌                | 407451/524288 [00:08<00:02, 45749.58it/s] 79%|██████████████████████████████████████████████████████████▏               | 412027/524288 [00:08<00:02, 45655.42it/s] 79%|██████████████████████████████████████████████████████████▊               | 416677/524288 [00:09<00:02, 45905.82it/s] 80%|███████████████████████████████████████████████████████████▍              | 421276/524288 [00:09<00:02, 45929.91it/s] 81%|████████████████████████████████████████████████████████████              | 425891/524288 [00:09<00:02, 45994.01it/s] 82%|████████████████████████████████████████████████████████████▊             | 430491/524288 [00:09<00:02, 45913.42it/s] 83%|█████████████████████████████████████████████████████████████▍            | 435083/524288 [00:09<00:01, 45908.62it/s] 84%|██████████████████████████████████████████████████████████████            | 439674/524288 [00:09<00:01, 45904.13it/s] 85%|██████████████████████████████████████████████████████████████▋           | 444265/524288 [00:09<00:01, 45883.05it/s] 86%|███████████████████████████████████████████████████████████████▎          | 448854/524288 [00:09<00:01, 43623.58it/s] 87%|████████████████████████████████████████████████████████████████          | 453539/524288 [00:09<00:01, 44554.36it/s] 87%|████████████████████████████████████████████████████████████████▋         | 458192/524288 [00:09<00:01, 45130.70it/s] 88%|█████████████████████████████████████████████████████████████████▎        | 462834/524288 [00:10<00:01, 45507.82it/s] 89%|█████████████████████████████████████████████████████████████████▉        | 467485/524288 [00:10<00:01, 45803.78it/s] 90%|██████████████████████████████████████████████████████████████████▋       | 472119/524288 [00:10<00:01, 45960.52it/s] 91%|███████████████████████████████████████████████████████████████████▎      | 476756/524288 [00:10<00:01, 46079.46it/s] 92%|███████████████████████████████████████████████████████████████████▉      | 481418/524288 [00:10<00:00, 46237.42it/s] 93%|████████████████████████████████████████████████████████████████████▌     | 486045/524288 [00:10<00:00, 46195.07it/s] 94%|█████████████████████████████████████████████████████████████████████▎    | 490690/524288 [00:10<00:00, 46268.83it/s] 94%|█████████████████████████████████████████████████████████████████████▉    | 495319/524288 [00:10<00:00, 46256.10it/s] 95%|██████████████████████████████████████████████████████████████████████▌   | 499992/524288 [00:10<00:00, 46397.06it/s] 96%|███████████████████████████████████████████████████████████████████████▏  | 504633/524288 [00:10<00:00, 46333.07it/s] 97%|███████████████████████████████████████████████████████████████████████▉  | 509267/524288 [00:11<00:00, 46267.97it/s] 98%|████████████████████████████████████████████████████████████████████████▌ | 513895/524288 [00:11<00:00, 46139.37it/s] 99%|█████████████████████████████████████████████████████████████████████████▏| 518510/524288 [00:11<00:00, 46004.79it/s]100%|█████████████████████████████████████████████████████████████████████████▊| 523111/524288 [00:11<00:00, 45962.42it/s]100%|██████████████████████████████████████████████████████████████████████████| 524288/524288 [00:11<00:00, 45888.03it/s]
